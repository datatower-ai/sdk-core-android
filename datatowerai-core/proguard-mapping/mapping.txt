# compiler: R8
# compiler_version: 8.0.40
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.1"}
# pg_map_id: f0a3d0c
# pg_map_hash: SHA-256 f0a3d0c32116438cabded73149373288d75a4b67cfe6ecd20a65f3cc384b0e1d
ai.datatower.ad.AD_CONVERSION_SOURCE -> ai.datatower.ad.a:
# {"id":"sourceFile","fileName":"constant.kt"}
    ai.datatower.ad.AD_CONVERSION_SOURCE$Companion Companion -> a
    java.lang.String LEFT_APP -> c
    java.lang.String CLICK -> b
    java.lang.String REWARDED -> e
    java.lang.String IMPRESSION -> d
ai.datatower.ad.AD_CONVERSION_SOURCE$Companion -> ai.datatower.ad.a$a:
# {"id":"sourceFile","fileName":"constant.kt"}
    ai.datatower.ad.AD_CONVERSION_SOURCE$Companion $$INSTANCE -> a
    java.lang.String LEFT_APP -> c
    java.lang.String CLICK -> b
    java.lang.String REWARDED -> e
    java.lang.String IMPRESSION -> d
    1:1:void <init>():52:52 -> <init>
ai.datatower.ad.AdMediation -> ai.datatower.ad.AdMediation:
# {"id":"sourceFile","fileName":"constant.kt"}
    1:9:void <clinit>():72:80 -> <clinit>
    1:1:void <init>(java.lang.String,int,int):71:71 -> <init>
    1:1:int getValue():71:71 -> getValue
ai.datatower.ad.AdPlatform -> ai.datatower.ad.AdPlatform:
# {"id":"sourceFile","fileName":"constant.kt"}
    1:38:void <clinit>():84:121 -> <clinit>
    1:1:void <init>(java.lang.String,int,int):83:83 -> <init>
    1:1:int getValue():83:83 -> getValue
ai.datatower.ad.AdReportConstant -> ai.datatower.ad.b:
# {"id":"sourceFile","fileName":"constant.kt"}
    java.lang.String PROPERTY_LOAD_DURATION -> G
    java.lang.String EVENT_AD_SHOW -> f
    java.lang.String PROPERTY_ERROR_MESSAGE -> I
    java.lang.String EVENT_AD_CLOSE -> h
    java.lang.String EVENT_AD_LEFT_APP -> j
    java.lang.String EVENT_AD_REWARDED -> l
    java.lang.String EVENT_AD_PAID -> n
    ai.datatower.ad.AdReportConstant INSTANCE -> a
    java.lang.String PROPERTY_AD_TYPE -> p
    java.lang.String PROPERTY_AD_LOCATION -> r
    java.lang.String PROPERTY_AD_SEQ -> t
    java.lang.String PROPERTY_AD_CLICK_GAP -> v
    java.lang.String PROPERTY_AD_MEDIAITON -> x
    java.lang.String PROPERTY_AD_VALUE_MICROS -> z
    java.lang.String EVENT_AD_LOAD_BEGIN -> c
    java.lang.String PROPERTY_AD_PRECISION_TYPE -> B
    java.lang.String EVENT_AD_TO_SHOW -> e
    java.lang.String PROPERTY_AD_SHOW_ERROR_CODE -> D
    java.lang.String EVENT_AD_SHOW_FAILED -> g
    java.lang.String PROPERTY_LOAD_RESULT -> F
    java.lang.String EVENT_AD_CLICK -> i
    java.lang.String PROPERTY_ERROR_CODE -> H
    java.lang.String EVENT_AD_RETURN_APP -> k
    java.lang.String EVENT_AD_CONVERSION -> m
    java.lang.String PROPERTY_AD_ID -> o
    java.lang.String PROPERTY_AD_PLATFORM -> q
    java.lang.String PROPERTY_AD_ENTRANCE -> s
    java.lang.String PROPERTY_AD_CONVERSION_SOURCE -> u
    java.lang.String PROPERTY_AD_RETURN_GAP -> w
    java.lang.String PROPERTY_AD_MEDIAITON_ID -> y
    java.lang.String PROPERTY_AD_CURRENCY_CODE -> A
    java.lang.String PROPERTY_AD_COUNTRY -> C
    java.lang.String PRESET_EVENT_TAG -> b
    java.lang.String PROPERTY_AD_SHOW_ERROR_MESSAGE -> E
    java.lang.String EVENT_AD_LOAD_END -> d
    1:1:void <init>():3:3 -> <init>
ai.datatower.ad.AdType -> ai.datatower.ad.AdType:
# {"id":"sourceFile","fileName":"constant.kt"}
    1:8:void <clinit>():61:68 -> <clinit>
    1:1:void <init>(java.lang.String,int,int):60:60 -> <init>
    1:1:int getValue():60:60 -> getValue
ai.datatower.ad.DTAdReport -> ai.datatower.ad.DTAdReport:
# {"id":"sourceFile","fileName":"DTAdReport.kt"}
    1:1:void <init>():6:6 -> <init>
    1:1:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClick
    2:2:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClick
    3:3:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClick
    4:4:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportClick
    5:5:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportClick
    1:1:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClose
    2:2:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClose
    3:3:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClose
    4:4:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportClose
    5:5:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportClose
    1:1:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByClick
    2:2:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByClick
    3:3:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByClick
    4:4:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportConversionByClick
    5:5:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportConversionByClick
    1:1:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByLeftApp
    2:2:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByLeftApp
    3:3:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByLeftApp
    4:4:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportConversionByLeftApp
    5:5:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportConversionByLeftApp
    1:1:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByRewarded
    2:2:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByRewarded
    3:3:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByRewarded
    4:4:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportConversionByRewarded
    5:5:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportConversionByRewarded
    1:1:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportLeftApp
    2:2:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportLeftApp
    3:3:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportLeftApp
    4:4:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportLeftApp
    5:5:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportLeftApp
    1:1:void reportLoadBegin(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String):0:0 -> reportLoadBegin
    2:2:void reportLoadBegin(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.util.Map):0:0 -> reportLoadBegin
    3:3:void reportLoadBegin(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.util.Map,ai.datatower.ad.AdMediation):0:0 -> reportLoadBegin
    4:4:void reportLoadBegin(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.util.Map,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportLoadBegin
    1:1:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String):0:0 -> reportLoadEnd
    2:2:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int):0:0 -> reportLoadEnd
    3:3:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String):0:0 -> reportLoadEnd
    4:4:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map):0:0 -> reportLoadEnd
    5:5:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map,ai.datatower.ad.AdMediation):0:0 -> reportLoadEnd
    6:6:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportLoadEnd
    1:1:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String):0:0 -> reportPaid
    2:2:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportPaid
    3:3:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportPaid
    4:4:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportPaid
    5:5:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportPaid
    6:6:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,double,java.lang.String,java.lang.String):0:0 -> reportPaid
    7:7:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportPaid
    1:1:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportRewarded
    2:2:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportRewarded
    3:3:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportRewarded
    4:4:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportRewarded
    5:5:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportRewarded
    1:1:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportShow
    2:2:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportShow
    3:3:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportShow
    4:4:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportShow
    5:5:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportShow
    1:1:void reportShowFailed(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,int,java.lang.String):0:0 -> reportShowFailed
    2:2:void reportShowFailed(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map):0:0 -> reportShowFailed
    3:3:void reportShowFailed(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportShowFailed
    4:4:void reportShowFailed(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportShowFailed
    5:5:void reportShowFailed(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportShowFailed
    1:1:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportToShow
    2:2:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportToShow
    3:3:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportToShow
    4:4:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportToShow
    5:5:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):0:0 -> reportToShow
ai.datatower.ad.DTAdReport$Companion -> ai.datatower.ad.DTAdReport$Companion:
# {"id":"sourceFile","fileName":"DTAdReport.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():7:7 -> <init>
    1:1:java.lang.String generateUUID():441:441 -> generateUUID
    1:1:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClick
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5,"4":6,"5":7},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    3:3:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClick
    4:4:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClick
    5:5:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClick
    6:6:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClick
    7:7:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClick
    2:2:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClick
    8:8:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClick
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12,"4":13,"5":14},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    10:10:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClick
    11:11:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClick
    12:12:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClick
    13:13:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClick
    14:14:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClick
    9:9:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClick
    15:15:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClick
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    17:17:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClick
    18:18:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClick
    19:19:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClick
    20:20:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClick
    21:21:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClick
    16:16:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClick
    22:22:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportClick
    23:24:void reportClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):213:214 -> reportClick
    1:4:void reportClick$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):209:212 -> reportClick$default
    5:5:void reportClick$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):203:203 -> reportClick$default
    1:1:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClose
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5,"4":6,"5":7},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    3:3:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClose
    4:4:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClose
    5:5:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClose
    6:6:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClose
    7:7:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClose
    2:2:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportClose
    8:8:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClose
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12,"4":13,"5":14},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    10:10:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClose
    11:11:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClose
    12:12:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClose
    13:13:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClose
    14:14:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClose
    9:9:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportClose
    15:15:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClose
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    17:17:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClose
    18:18:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClose
    19:19:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClose
    20:20:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClose
    21:21:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClose
    16:16:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportClose
    22:22:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportClose
    23:24:void reportClose(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):185:186 -> reportClose
    1:4:void reportClose$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):181:184 -> reportClose$default
    5:5:void reportClose$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):175:175 -> reportClose$default
    1:1:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByClick
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5,"4":6,"5":7},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    3:3:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByClick
    4:4:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByClick
    5:5:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByClick
    6:6:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByClick
    7:7:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByClick
    2:2:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByClick
    8:8:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByClick
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12,"4":13,"5":14},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    10:10:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByClick
    11:11:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByClick
    12:12:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByClick
    13:13:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByClick
    14:14:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByClick
    9:9:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByClick
    15:15:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByClick
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    17:17:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByClick
    18:18:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByClick
    19:19:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByClick
    20:20:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByClick
    21:21:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByClick
    16:16:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByClick
    22:22:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportConversionByClick
    23:26:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):270:273 -> reportConversionByClick
    27:27:void reportConversionByClick(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):271:271 -> reportConversionByClick
    1:4:void reportConversionByClick$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):266:269 -> reportConversionByClick$default
    5:5:void reportConversionByClick$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):260:260 -> reportConversionByClick$default
    1:1:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByLeftApp
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5,"4":6,"5":7},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    3:3:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByLeftApp
    4:4:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByLeftApp
    5:5:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByLeftApp
    6:6:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByLeftApp
    7:7:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByLeftApp
    2:2:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByLeftApp
    8:8:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByLeftApp
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12,"4":13,"5":14},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    10:10:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByLeftApp
    11:11:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByLeftApp
    12:12:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByLeftApp
    13:13:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByLeftApp
    14:14:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByLeftApp
    9:9:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByLeftApp
    15:15:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByLeftApp
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    17:17:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByLeftApp
    18:18:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByLeftApp
    19:19:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByLeftApp
    20:20:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByLeftApp
    21:21:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByLeftApp
    16:16:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByLeftApp
    22:22:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportConversionByLeftApp
    23:26:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):302:305 -> reportConversionByLeftApp
    27:27:void reportConversionByLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):303:303 -> reportConversionByLeftApp
    1:4:void reportConversionByLeftApp$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):298:301 -> reportConversionByLeftApp$default
    5:5:void reportConversionByLeftApp$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):292:292 -> reportConversionByLeftApp$default
    1:1:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByRewarded
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5,"4":6,"5":7},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    3:3:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByRewarded
    4:4:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByRewarded
    5:5:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByRewarded
    6:6:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByRewarded
    7:7:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByRewarded
    2:2:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportConversionByRewarded
    8:8:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByRewarded
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12,"4":13,"5":14},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    10:10:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByRewarded
    11:11:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByRewarded
    12:12:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByRewarded
    13:13:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByRewarded
    14:14:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByRewarded
    9:9:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportConversionByRewarded
    15:15:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByRewarded
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    17:17:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByRewarded
    18:18:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByRewarded
    19:19:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByRewarded
    20:20:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByRewarded
    21:21:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByRewarded
    16:16:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportConversionByRewarded
    22:22:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportConversionByRewarded
    23:26:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):335:338 -> reportConversionByRewarded
    27:27:void reportConversionByRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):336:336 -> reportConversionByRewarded
    1:4:void reportConversionByRewarded$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):331:334 -> reportConversionByRewarded$default
    5:5:void reportConversionByRewarded$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):325:325 -> reportConversionByRewarded$default
    1:1:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportLeftApp
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5,"4":6,"5":7},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    3:3:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportLeftApp
    4:4:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportLeftApp
    5:5:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportLeftApp
    6:6:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportLeftApp
    7:7:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportLeftApp
    2:2:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportLeftApp
    8:8:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportLeftApp
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12,"4":13,"5":14},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    10:10:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportLeftApp
    11:11:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportLeftApp
    12:12:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportLeftApp
    13:13:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportLeftApp
    14:14:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportLeftApp
    9:9:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportLeftApp
    15:15:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportLeftApp
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    17:17:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportLeftApp
    18:18:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportLeftApp
    19:19:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportLeftApp
    20:20:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportLeftApp
    21:21:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportLeftApp
    16:16:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportLeftApp
    22:22:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportLeftApp
    23:24:void reportLeftApp(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):433:434 -> reportLeftApp
    1:4:void reportLeftApp$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):429:432 -> reportLeftApp$default
    5:5:void reportLeftApp$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):423:423 -> reportLeftApp$default
    1:1:void reportLoadBegin(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String):0:0 -> reportLoadBegin
    2:2:void reportLoadBegin(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.util.Map):0:0 -> reportLoadBegin
    3:3:void reportLoadBegin(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.util.Map,ai.datatower.ad.AdMediation):0:0 -> reportLoadBegin
    4:5:void reportLoadBegin(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.util.Map,ai.datatower.ad.AdMediation,java.lang.String):32:33 -> reportLoadBegin
    1:3:void reportLoadBegin$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.util.Map,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):29:31 -> reportLoadBegin$default
    4:4:void reportLoadBegin$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.util.Map,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):24:24 -> reportLoadBegin$default
    1:1:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String):0:0 -> reportLoadEnd
    2:2:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int):0:0 -> reportLoadEnd
    3:3:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String):0:0 -> reportLoadEnd
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":5,"2":6,"3":7,"4":8,"5":9},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    5:5:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String):0:0 -> reportLoadEnd
    6:6:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String):0:0 -> reportLoadEnd
    7:7:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String):0:0 -> reportLoadEnd
    8:8:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String):0:0 -> reportLoadEnd
    9:9:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String):0:0 -> reportLoadEnd
    4:4:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String):0:0 -> reportLoadEnd
    10:10:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map):0:0 -> reportLoadEnd
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":12,"2":13,"3":14,"4":15,"5":16},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    12:12:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map):0:0 -> reportLoadEnd
    13:13:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map):0:0 -> reportLoadEnd
    14:14:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map):0:0 -> reportLoadEnd
    15:15:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map):0:0 -> reportLoadEnd
    16:16:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map):0:0 -> reportLoadEnd
    11:11:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map):0:0 -> reportLoadEnd
    17:17:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map,ai.datatower.ad.AdMediation):0:0 -> reportLoadEnd
    18:19:void reportLoadEnd(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map,ai.datatower.ad.AdMediation,java.lang.String):67:68 -> reportLoadEnd
    1:4:void reportLoadEnd$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):63:66 -> reportLoadEnd$default
    5:5:void reportLoadEnd$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,long,boolean,java.lang.String,int,java.lang.String,java.util.Map,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):55:55 -> reportLoadEnd$default
    1:1:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String):0:0 -> reportPaid
    2:2:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportPaid
    3:3:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportPaid
    4:4:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportPaid
    5:5:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,double,java.lang.String,java.lang.String):0:0 -> reportPaid
    6:7:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):373:374 -> reportPaid
    8:9:void reportPaid(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):405:406 -> reportPaid
    1:4:void reportPaid$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):369:372 -> reportPaid$default
    5:5:void reportPaid$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):360:360 -> reportPaid$default
    6:6:void reportPaid$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,int,java.lang.Object):404:404 -> reportPaid$default
    7:7:void reportPaid$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,int,java.lang.Object):393:393 -> reportPaid$default
    1:1:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportRewarded
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5,"4":6,"5":7},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    3:3:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportRewarded
    4:4:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportRewarded
    5:5:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportRewarded
    6:6:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportRewarded
    7:7:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportRewarded
    2:2:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportRewarded
    8:8:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportRewarded
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12,"4":13,"5":14},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    10:10:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportRewarded
    11:11:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportRewarded
    12:12:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportRewarded
    13:13:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportRewarded
    14:14:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportRewarded
    9:9:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportRewarded
    15:15:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportRewarded
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    17:17:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportRewarded
    18:18:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportRewarded
    19:19:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportRewarded
    20:20:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportRewarded
    21:21:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportRewarded
    16:16:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportRewarded
    22:22:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportRewarded
    23:24:void reportRewarded(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):241:242 -> reportRewarded
    1:4:void reportRewarded$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):237:240 -> reportRewarded$default
    5:5:void reportRewarded$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):231:231 -> reportRewarded$default
    1:1:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportShow
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5,"4":6,"5":7},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    3:3:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportShow
    4:4:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportShow
    5:5:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportShow
    6:6:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportShow
    7:7:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportShow
    2:2:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportShow
    8:8:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportShow
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12,"4":13,"5":14},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    10:10:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportShow
    11:11:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportShow
    12:12:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportShow
    13:13:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportShow
    14:14:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportShow
    9:9:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportShow
    15:15:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportShow
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    17:17:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportShow
    18:18:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportShow
    19:19:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportShow
    20:20:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportShow
    21:21:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportShow
    16:16:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportShow
    22:22:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportShow
    23:24:void reportShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):125:126 -> reportShow
    1:4:void reportShow$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):121:124 -> reportShow$default
    5:5:void reportShow$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):115:115 -> reportShow$default
    1:1:void reportShowFailed(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,int,java.lang.String):0:0 -> reportShowFailed
    2:2:void reportShowFailed(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map):0:0 -> reportShowFailed
    3:3:void reportShowFailed(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportShowFailed
    4:4:void reportShowFailed(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportShowFailed
    5:6:void reportShowFailed(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):155:156 -> reportShowFailed
    1:4:void reportShowFailed$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):151:154 -> reportShowFailed$default
    5:5:void reportShowFailed$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):143:143 -> reportShowFailed$default
    1:1:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportToShow
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":3,"2":4,"3":5,"4":6,"5":7},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    3:3:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportToShow
    4:4:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportToShow
    5:5:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportToShow
    6:6:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportToShow
    7:7:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportToShow
    2:2:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String):0:0 -> reportToShow
    8:8:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportToShow
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12,"4":13,"5":14},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    10:10:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportToShow
    11:11:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportToShow
    12:12:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportToShow
    13:13:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportToShow
    14:14:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportToShow
    9:9:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map):0:0 -> reportToShow
    15:15:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportToShow
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"Lai/datatower/ad/c;a(Ljava/lang/String;Ljava/lang/String;Lai/datatower/ad/AdType;Ljava/lang/String;Lai/datatower/ad/AdPlatform;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    17:17:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportToShow
    18:18:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportToShow
    19:19:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportToShow
    20:20:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportToShow
    21:21:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportToShow
    16:16:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String):0:0 -> reportToShow
    22:22:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation):0:0 -> reportToShow
    23:24:void reportToShow(java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String):97:98 -> reportToShow
    1:4:void reportToShow$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):93:96 -> reportToShow$default
    5:5:void reportToShow$default(ai.datatower.ad.DTAdReport$Companion,java.lang.String,ai.datatower.ad.AdType,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.util.Map,java.lang.String,ai.datatower.ad.AdMediation,java.lang.String,int,java.lang.Object):87:87 -> reportToShow$default
ai.datatower.ad.DTAdReport$Companion$$ExternalSyntheticOutline0 -> ai.datatower.ad.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:5:void ai.datatower.ad.DTAdReport$Companion$$InternalSyntheticOutline$46$109cf5a6f3a4854c23ecd24838a66416c5ec8eb0bfc5d482500f69d0775bf098$0.m(java.lang.String,java.lang.String,ai.datatower.ad.AdType,java.lang.String,ai.datatower.ad.AdPlatform,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):0:4 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.outline"}
ai.datatower.ad.api.AdReportImp -> ai.datatower.ad.api.a:
# {"id":"sourceFile","fileName":"AdReportImp.kt"}
    java.util.Map mSequenessMap -> a
    ai.datatower.ad.api.AdReportImp instance -> d
    ai.datatower.ad.api.AdReportImp$Companion Companion -> c
    int mMaxSequenessSize -> b
    1:1:void ai.datatower.ad.api.AdReportImp$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:4:void <init>():20:23 -> <init>
    1:1:void reportOpen(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):0:0 -> a
    2:2:void access$setInstance$cp(ai.datatower.ad.api.AdReportImp):20:20 -> a
    3:8:void reportLoadBegin(java.lang.String,int,int,java.lang.String,java.util.Map,int,java.lang.String):34:39 -> a
    9:9:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> a
    9:9:void reportLoadBegin(java.lang.String,int,int,java.lang.String,java.util.Map,int,java.lang.String):37 -> a
    10:20:void reportLoadEnd(java.lang.String,int,int,long,boolean,java.lang.String,int,java.lang.String,java.util.Map,int,java.lang.String):56:66 -> a
    21:21:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> a
    21:21:void reportLoadEnd(java.lang.String,int,int,long,boolean,java.lang.String,int,java.lang.String,java.util.Map,int,java.lang.String):59 -> a
    22:25:void reportShowFailed(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):144:147 -> a
    26:26:void ai.datatower.ad.utils.AdEventProperty.setShowTS(long):93:93 -> a
    26:26:void reportShowFailed(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):147 -> a
    27:27:java.util.Map ai.datatower.ad.utils.AdEventProperty.getProperties():83:83 -> a
    27:27:void reportShowFailed(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):148 -> a
    28:28:void reportShowFailed(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):148:148 -> a
    29:29:java.util.Map ai.datatower.ad.utils.AdEventProperty.getProperties():83:83 -> a
    29:29:void reportShowFailed(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):149 -> a
    30:34:void reportShowFailed(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):149:153 -> a
    35:35:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> a
    35:35:void reportShowFailed(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):151 -> a
    36:43:void reportConversion(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):269:276 -> a
    44:44:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> a
    44:44:void reportConversion(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):272 -> a
    45:45:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):319:319 -> a
    46:61:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):317:332 -> a
    62:62:void ai.datatower.ad.utils.AdEventProperty.setValue(double):88:88 -> a
    62:62:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):335 -> a
    63:71:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):336:344 -> a
    72:72:double ai.datatower.ad.utils.AdEventProperty.getValue():88:88 -> a
    72:72:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):344 -> a
    73:73:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):344:344 -> a
    74:80:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):342:348 -> a
    81:81:java.lang.String ai.datatower.ad.utils.AdEventProperty.getCurrency():89:89 -> a
    81:81:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):348 -> a
    82:88:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):346:352 -> a
    89:89:java.lang.String ai.datatower.ad.utils.AdEventProperty.getPrecision():90:90 -> a
    89:89:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):352 -> a
    90:96:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):350:356 -> a
    97:97:java.lang.String ai.datatower.ad.utils.AdEventProperty.getCountry():91:91 -> a
    97:97:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):356 -> a
    98:102:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):354:358 -> a
    103:103:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> a
    103:103:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):339 -> a
    104:104:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):381:381 -> a
    105:125:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):379:399 -> a
    126:126:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):396:396 -> a
    127:127:void ai.datatower.ad.utils.AdEventProperty.setValue(double):88:88 -> a
    127:127:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):407 -> a
    128:135:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):408:415 -> a
    136:136:double ai.datatower.ad.utils.AdEventProperty.getValue():88:88 -> a
    136:136:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):415 -> a
    137:138:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):415:416 -> a
    139:139:java.lang.String ai.datatower.ad.utils.AdEventProperty.getCurrency():89:89 -> a
    139:139:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):416 -> a
    140:141:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):416:417 -> a
    142:142:java.lang.String ai.datatower.ad.utils.AdEventProperty.getPrecision():90:90 -> a
    142:142:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):417 -> a
    143:144:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):417:418 -> a
    145:145:java.lang.String ai.datatower.ad.utils.AdEventProperty.getCountry():91:91 -> a
    145:145:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):418 -> a
    146:147:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):418:419 -> a
    148:148:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> a
    148:148:void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String):412 -> a
    149:149:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):439:439 -> a
    150:166:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):437:453 -> a
    167:167:void ai.datatower.ad.utils.AdEventProperty.setValue(double):88:88 -> a
    167:167:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):456 -> a
    168:174:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):457:463 -> a
    175:175:double ai.datatower.ad.utils.AdEventProperty.getValue():88:88 -> a
    175:175:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):463 -> a
    176:177:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):463:464 -> a
    178:178:java.lang.String ai.datatower.ad.utils.AdEventProperty.getPrecision():90:90 -> a
    178:178:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):464 -> a
    179:180:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):464:465 -> a
    181:181:java.lang.String ai.datatower.ad.utils.AdEventProperty.getCountry():91:91 -> a
    181:181:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):465 -> a
    182:183:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):465:466 -> a
    184:184:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> a
    184:184:void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map):460 -> a
    185:186:void reportReturnApp():472:473 -> a
    187:187:void ai.datatower.ad.utils.AdEventProperty.setAppForegroundedTS(long):97:97 -> a
    187:187:void reportReturnApp():473 -> a
    188:188:void ai.datatower.ad.utils.AdEventProperty.setLeftApplication(boolean):99:99 -> a
    188:188:void reportReturnApp():474 -> a
    189:189:long ai.datatower.ad.utils.AdEventProperty.getClickTS():94:94 -> a
    189:189:void reportReturnApp():476 -> a
    190:190:long ai.datatower.ad.utils.AdEventProperty.getLeftApplicationTS():95:95 -> a
    190:190:void reportReturnApp():476 -> a
    191:191:long ai.datatower.ad.utils.AdEventProperty.getAppForegroundedTS():97:97 -> a
    191:191:void reportReturnApp():476 -> a
    192:192:void reportReturnApp():480:480 -> a
    193:193:java.lang.String ai.datatower.ad.utils.AdEventProperty.getSeq():82:82 -> a
    193:193:void reportReturnApp():481 -> a
    194:195:void reportReturnApp():481:482 -> a
    196:196:long ai.datatower.ad.utils.AdEventProperty.getClickTS():94:94 -> a
    196:196:void reportReturnApp():482 -> a
    197:197:long ai.datatower.ad.utils.AdEventProperty.getShowTS():93:93 -> a
    197:197:void reportReturnApp():482 -> a
    198:200:void reportReturnApp():482:484 -> a
    201:201:long ai.datatower.ad.utils.AdEventProperty.getAppForegroundedTS():97:97 -> a
    201:201:void reportReturnApp():485 -> a
    202:202:long ai.datatower.ad.utils.AdEventProperty.getLeftApplicationTS():95:95 -> a
    202:202:void reportReturnApp():485 -> a
    203:207:void reportReturnApp():483:487 -> a
    208:208:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> a
    208:208:void reportReturnApp():479 -> a
    209:209:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> a
    210:211:void checkSeqError(java.lang.String):520:521 -> a
    212:212:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty$default(ai.datatower.ad.api.AdReportImp,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):539:539 -> a
    213:213:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty$default(ai.datatower.ad.api.AdReportImp,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):532:532 -> a
    1:1:void reportEntrance(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):0:0 -> b
    2:2:ai.datatower.ad.api.AdReportImp access$getInstance$cp():20:20 -> b
    3:5:org.json.JSONObject generateAdReportJson(java.lang.String):500:502 -> b
    6:6:java.lang.String ai.datatower.ad.utils.AdEventProperty.getAdId():81:81 -> b
    6:6:org.json.JSONObject generateAdReportJson(java.lang.String):502 -> b
    7:8:org.json.JSONObject generateAdReportJson(java.lang.String):502:503 -> b
    9:9:int ai.datatower.ad.utils.AdEventProperty.getAdType():79:79 -> b
    9:9:org.json.JSONObject generateAdReportJson(java.lang.String):503 -> b
    10:11:org.json.JSONObject generateAdReportJson(java.lang.String):503:504 -> b
    12:12:int ai.datatower.ad.utils.AdEventProperty.getAdPlatform():80:80 -> b
    12:12:org.json.JSONObject generateAdReportJson(java.lang.String):504 -> b
    13:14:org.json.JSONObject generateAdReportJson(java.lang.String):504:505 -> b
    15:15:int ai.datatower.ad.utils.AdEventProperty.getMediation():86:86 -> b
    15:15:org.json.JSONObject generateAdReportJson(java.lang.String):505 -> b
    16:17:org.json.JSONObject generateAdReportJson(java.lang.String):505:506 -> b
    18:18:java.lang.String ai.datatower.ad.utils.AdEventProperty.getMediationId():87:87 -> b
    18:18:org.json.JSONObject generateAdReportJson(java.lang.String):506 -> b
    19:20:org.json.JSONObject generateAdReportJson(java.lang.String):506:507 -> b
    21:21:java.lang.String ai.datatower.ad.utils.AdEventProperty.getEntrance():84:84 -> b
    21:21:org.json.JSONObject generateAdReportJson(java.lang.String):507 -> b
    22:23:org.json.JSONObject generateAdReportJson(java.lang.String):507:508 -> b
    24:24:java.lang.String ai.datatower.ad.utils.AdEventProperty.getLocation():78:78 -> b
    24:24:org.json.JSONObject generateAdReportJson(java.lang.String):508 -> b
    25:26:org.json.JSONObject generateAdReportJson(java.lang.String):508:509 -> b
    27:27:java.util.Map ai.datatower.ad.utils.AdEventProperty.getProperties():83:83 -> b
    27:27:org.json.JSONObject generateAdReportJson(java.lang.String):511 -> b
    28:28:org.json.JSONObject generateAdReportJson(java.lang.String):607:607 -> b
    29:29:org.json.JSONObject generateAdReportJson(java.lang.String):513:513 -> b
    1:4:void reportClick(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):226:229 -> c
    5:5:void ai.datatower.ad.utils.AdEventProperty.setClickTS(long):94:94 -> c
    5:5:void reportClick(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):229 -> c
    6:7:void reportClick(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):232:233 -> c
    8:8:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> c
    8:8:void reportClick(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):231 -> c
    9:12:void makeAdEventProperty(java.lang.String):526:529 -> c
    13:14:ai.datatower.ad.utils.AdEventProperty getLeftApplicationEventProperty():582:583 -> c
    15:15:boolean ai.datatower.ad.utils.AdEventProperty.isLeftApplication():99:99 -> c
    15:15:ai.datatower.ad.utils.AdEventProperty getLeftApplicationEventProperty():583 -> c
    16:17:ai.datatower.ad.utils.AdEventProperty getLeftApplicationEventProperty():583:584 -> c
    1:6:void reportClose(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):206:211 -> d
    7:7:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> d
    7:7:void reportClose(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):209 -> d
    void reportImpression(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> e
    1:4:void reportShow(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):120:123 -> f
    5:5:void ai.datatower.ad.utils.AdEventProperty.setShowTS(long):93:93 -> f
    5:5:void reportShow(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):123 -> f
    6:7:void reportShow(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):126:127 -> f
    8:8:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> f
    8:8:void reportShow(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):125 -> f
    1:6:void reportToShow(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):100:105 -> g
    7:7:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> g
    7:7:void reportToShow(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):103 -> g
    1:6:void reportRewarded(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):248:253 -> h
    7:7:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> h
    7:7:void reportRewarded(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):251 -> h
    1:4:void reportLeftApp(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):291:294 -> i
    5:5:void ai.datatower.ad.utils.AdEventProperty.setLeftApplicationTS(long):95:95 -> i
    5:5:void reportLeftApp(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):294 -> i
    6:6:void ai.datatower.ad.utils.AdEventProperty.setLeftApplication(boolean):99:99 -> i
    6:6:void reportLeftApp(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):295 -> i
    7:8:void reportLeftApp(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):298:299 -> i
    9:9:void adTrack(java.lang.String,org.json.JSONObject):496:496 -> i
    9:9:void reportLeftApp(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):297 -> i
    1:66:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):544:609 -> j
    67:67:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):551:551 -> j
    68:82:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):549:563 -> j
    83:83:void ai.datatower.ad.utils.AdEventProperty.setAdType(int):79:79 -> j
    83:83:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):564 -> j
    84:84:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):566:566 -> j
    85:85:void ai.datatower.ad.utils.AdEventProperty.setAdPlatform(int):80:80 -> j
    85:85:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):567 -> j
    86:89:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):569:572 -> j
    90:90:void ai.datatower.ad.utils.AdEventProperty.setProperties(java.util.Map):83:83 -> j
    90:90:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):573 -> j
    91:91:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):574:574 -> j
    92:92:void ai.datatower.ad.utils.AdEventProperty.setMediation(int):86:86 -> j
    92:92:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):575 -> j
    93:95:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):576:578 -> j
    96:96:ai.datatower.ad.utils.AdEventProperty updateAdEventProperty(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String):546:546 -> j
ai.datatower.ad.api.AdReportImp$Companion -> ai.datatower.ad.api.a$a:
# {"id":"sourceFile","fileName":"AdReportImp.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():591:591 -> <init>
    1:1:ai.datatower.ad.api.AdReportImp getInstance$datatowerai_core_publicRelease$default(ai.datatower.ad.api.AdReportImp$Companion,android.content.Context,int,java.lang.Object):596:596 -> a
    2:2:ai.datatower.ad.api.AdReportImp getInstance$datatowerai_core_publicRelease(android.content.Context):598:598 -> a
    3:3:ai.datatower.ad.api.AdReportImp ai.datatower.ad.api.AdReportImp.access$getInstance$cp():20:20 -> a
    3:3:ai.datatower.ad.api.AdReportImp getInstance$datatowerai_core_publicRelease(android.content.Context):599 -> a
    4:4:ai.datatower.ad.api.AdReportImp getInstance$datatowerai_core_publicRelease(android.content.Context):599:599 -> a
    5:5:void ai.datatower.ad.api.AdReportImp.access$setInstance$cp(ai.datatower.ad.api.AdReportImp):20:20 -> a
    5:5:ai.datatower.ad.api.AdReportImp getInstance$datatowerai_core_publicRelease(android.content.Context):599 -> a
    6:6:ai.datatower.ad.api.AdReportImp getInstance$datatowerai_core_publicRelease(android.content.Context):598:598 -> a
ai.datatower.ad.api.IAdReport -> ai.datatower.ad.api.b:
# {"id":"sourceFile","fileName":"IAdReport.kt"}
    void reportConversion(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> a
    void reportLoadBegin(java.lang.String,int,int,java.lang.String,java.util.Map,int,java.lang.String) -> a
    void reportLoadEnd(java.lang.String,int,int,long,boolean,java.lang.String,int,java.lang.String,java.util.Map,int,java.lang.String) -> a
    void reportOpen(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> a
    void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> a
    void reportPaid(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map) -> a
    void reportPaid(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String) -> a
    void reportReturnApp() -> a
    void reportShowFailed(java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> a
    void reportEntrance(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> b
    void reportClick(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> c
    void reportClose(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> d
    void reportImpression(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> e
    void reportShow(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> f
    void reportToShow(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> g
    void reportRewarded(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> h
    void reportLeftApp(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String) -> i
ai.datatower.ad.api.IAdReport$DefaultImpls -> ai.datatower.ad.api.b$a:
# {"id":"sourceFile","fileName":"IAdReport.kt"}
    1:1:void reportLoadBegin$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.util.Map,int,java.lang.String,int,java.lang.Object):10:10 -> a
    2:2:void reportLoadBegin$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.util.Map,int,java.lang.String,int,java.lang.Object):5:5 -> a
    3:4:void reportLoadEnd$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,long,boolean,java.lang.String,int,java.lang.String,java.util.Map,int,java.lang.String,int,java.lang.Object):23:24 -> a
    5:5:void reportLoadEnd$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,long,boolean,java.lang.String,int,java.lang.String,java.util.Map,int,java.lang.String,int,java.lang.Object):15:15 -> a
    6:7:void reportShowFailed$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):119:120 -> a
    8:8:void reportShowFailed$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):111:111 -> a
    9:10:void reportClick$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):208:209 -> a
    11:11:void reportClick$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):202:202 -> a
    12:13:void reportConversion$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):255:256 -> a
    14:14:void reportConversion$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):248:248 -> a
    15:16:void reportPaid$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):306:307 -> a
    17:17:void reportPaid$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):297:297 -> a
    18:19:void reportPaid$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.Object):346:347 -> a
    20:20:void reportPaid$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.Object):332:332 -> a
    21:21:void reportPaid$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,int,java.lang.Object):377:377 -> a
    22:22:void reportPaid$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.util.Map,int,java.lang.Object):366:366 -> a
    1:2:void reportClose$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):186:187 -> b
    3:3:void reportClose$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):180:180 -> b
    1:2:void reportEntrance$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):47:48 -> c
    3:3:void reportEntrance$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):41:41 -> c
    1:2:void reportImpression$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):142:143 -> d
    3:3:void reportImpression$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):136:136 -> d
    1:2:void reportLeftApp$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):277:278 -> e
    3:3:void reportLeftApp$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):271:271 -> e
    1:2:void reportOpen$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):164:165 -> f
    3:3:void reportOpen$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):158:158 -> f
    1:2:void reportRewarded$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):230:231 -> g
    3:3:void reportRewarded$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):224:224 -> g
    1:2:void reportShow$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):93:94 -> h
    3:3:void reportShow$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):87:87 -> h
    1:2:void reportToShow$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):71:72 -> i
    3:3:void reportToShow$default(ai.datatower.ad.api.IAdReport,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,int,java.lang.Object):65:65 -> i
ai.datatower.ad.utils.AdEventProperty -> ai.datatower.ad.utils.a:
# {"id":"sourceFile","fileName":"AdUtils.kt"}
    java.lang.String entrance -> g
    java.lang.String mediationId -> i
    java.lang.String currency -> k
    int mediation -> h
    java.lang.String country -> m
    java.lang.String precision -> l
    int adType -> b
    int adPlatform -> c
    boolean isLeftApplication -> s
    double value -> j
    long appForegroundedTS -> r
    long appBackgroundedTS -> q
    java.lang.String location -> a
    long showTS -> n
    java.util.Map properties -> f
    java.lang.String seq -> e
    long leftApplicationTS -> p
    java.lang.String adId -> d
    long clickTS -> o
    1:1:void <init>():0:0 -> <init>
    2:24:void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,long,long,long,long,long,boolean):77:99 -> <init>
    25:38:void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,long,long,long,long,long,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):78:91 -> <init>
    39:39:void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,long,long,long,long,long,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):77:77 -> <init>
    1:1:java.lang.String getCurrency():89:89 -> A
    1:1:java.lang.String getEntrance():84:84 -> B
    1:1:long getLeftApplicationTS():95:95 -> C
    1:1:java.lang.String getLocation():78:78 -> D
    1:1:int getMediation():86:86 -> E
    1:1:java.lang.String getMediationId():87:87 -> F
    1:1:java.lang.String getPrecision():90:90 -> G
    1:1:java.util.Map getProperties():83:83 -> H
    1:1:java.lang.String getSeq():82:82 -> I
    1:1:long getShowTS():93:93 -> J
    1:1:double getValue():88:88 -> K
    1:1:boolean isLeftApplication():99:99 -> L
    1:1:java.lang.String component1():0:0 -> a
    2:2:ai.datatower.ad.utils.AdEventProperty copy(java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,long,long,long,long,long,boolean):0:0 -> a
    3:3:ai.datatower.ad.utils.AdEventProperty copy$default(ai.datatower.ad.utils.AdEventProperty,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,long,long,long,long,long,boolean,int,java.lang.Object):0:0 -> a
    4:4:void setAdPlatform(int):80:80 -> a
    5:5:void setAdId(java.lang.String):81:81 -> a
    6:6:void setProperties(java.util.Map):83:83 -> a
    7:7:void setValue(double):88:88 -> a
    8:8:void setAppBackgroundedTS(long):96:96 -> a
    9:9:void setLeftApplication(boolean):99:99 -> a
    1:1:double component10():0:0 -> b
    2:2:void setAdType(int):79:79 -> b
    3:3:void setCountry(java.lang.String):91:91 -> b
    4:4:void setAppForegroundedTS(long):97:97 -> b
    1:1:java.lang.String component11():0:0 -> c
    2:2:void setMediation(int):86:86 -> c
    3:3:void setCurrency(java.lang.String):89:89 -> c
    4:4:void setClickTS(long):94:94 -> c
    1:1:java.lang.String component12():0:0 -> d
    2:2:void setEntrance(java.lang.String):84:84 -> d
    3:3:void setLeftApplicationTS(long):95:95 -> d
    1:1:java.lang.String component13():0:0 -> e
    2:2:void setLocation(java.lang.String):78:78 -> e
    3:3:void setShowTS(long):93:93 -> e
    1:1:long component14():0:0 -> f
    2:2:void setMediationId(java.lang.String):87:87 -> f
    1:1:long component15():0:0 -> g
    2:2:void setPrecision(java.lang.String):90:90 -> g
    1:1:long component16():0:0 -> h
    2:2:void setSeq(java.lang.String):82:82 -> h
    long component17() -> i
    long component18() -> j
    boolean component19() -> k
    int component2() -> l
    int component3() -> m
    java.lang.String component4() -> n
    java.lang.String component5() -> o
    java.util.Map component6() -> p
    java.lang.String component7() -> q
    int component8() -> r
    java.lang.String component9() -> s
    1:1:java.lang.String getAdId():81:81 -> t
    1:1:int getAdPlatform():80:80 -> u
    1:1:int getAdType():79:79 -> v
    1:1:long getAppBackgroundedTS():96:96 -> w
    1:1:long getAppForegroundedTS():97:97 -> x
    1:1:long getClickTS():94:94 -> y
    1:1:java.lang.String getCountry():91:91 -> z
ai.datatower.ad.utils.AdPlatformUtils -> ai.datatower.ad.utils.b:
# {"id":"sourceFile","fileName":"AdUtils.kt"}
    java.lang.String MOPUB_PLATFORM_UNITY_ADS -> g
    java.lang.String MOPUB_PLATFORM_MOPUB -> f
    java.lang.String MOPUB_PLATFORM_UNDISCLOSED -> i
    java.lang.String MOPUB_PLATFORM_FACEBOOK -> h
    java.lang.String MOPUB_ADGROUP_TYPE_BIGO -> k
    java.lang.String MOPUB_ADGROUP_NAME_BIGO -> j
    java.lang.String MOPUB_PLATFORM_GOOGLE -> c
    ai.datatower.ad.utils.AdPlatformUtils INSTANCE -> a
    java.lang.String ADMOB_ADID_PREFIX -> b
    java.lang.String MOPUB_PLATFORM_IRONSOURCE -> e
    java.lang.String MOPUB_PLATFORM_PANGLE -> d
    1:1:void <init>():8:8 -> <init>
    1:1:java.lang.String getId(java.lang.String,java.lang.String,java.lang.String):24:24 -> a
    2:8:ai.datatower.ad.AdPlatform getPlatform(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):38:44 -> a
    9:9:boolean isBigo(java.lang.String,java.lang.String):50:50 -> a
    10:22:ai.datatower.ad.AdPlatform getMopubPlatform(java.lang.String,java.lang.String,java.lang.String,java.lang.String):58:70 -> a
    23:27:ai.datatower.ad.AdPlatform getMopubPlatform(java.lang.String,java.lang.String,java.lang.String,java.lang.String):64:68 -> a
    28:33:ai.datatower.ad.AdPlatform getMopubPlatform(java.lang.String,java.lang.String,java.lang.String,java.lang.String):64:69 -> a
    34:41:ai.datatower.ad.AdPlatform getMopubPlatform(java.lang.String,java.lang.String,java.lang.String,java.lang.String):64:71 -> a
    42:45:ai.datatower.ad.AdPlatform getMopubPlatform(java.lang.String,java.lang.String,java.lang.String,java.lang.String):64:67 -> a
    46:48:ai.datatower.ad.AdPlatform getMopubPlatform(java.lang.String,java.lang.String,java.lang.String,java.lang.String):64:66 -> a
    49:57:ai.datatower.ad.AdPlatform getMopubPlatform(java.lang.String,java.lang.String,java.lang.String,java.lang.String):64:72 -> a
    1:1:boolean isMarketPlace(java.lang.String,java.lang.String):48:48 -> b
ai.datatower.ad.utils.UUIDUtils -> ai.datatower.ad.utils.c:
# {"id":"sourceFile","fileName":"UUIDUtils.java"}
    1:1:void <init>():5:5 -> <init>
    1:5:java.lang.String generateUUID():7:11 -> a
ai.datatower.analytics.BuildConfig -> ai.datatower.analytics.a:
# {"id":"sourceFile","fileName":"BuildConfig.java"}
    java.lang.String EVENT_REPORT_PATH -> g
    java.lang.String ERROR_REPORTING_URL -> f
    java.lang.Boolean IS_LOGGING_ENABLED -> h
    java.lang.String VERSION_NAME -> i
    boolean DEBUG -> a
    java.lang.String BUILD_TYPE -> c
    java.lang.String LIBRARY_PACKAGE_NAME -> b
    java.lang.String DEFAULT_SERVER_URL -> e
    java.lang.String FLAVOR -> d
    1:1:void <clinit>():18:18 -> <clinit>
    1:1:void <init>():6:6 -> <init>
ai.datatower.analytics.Constant -> ai.datatower.analytics.b:
# {"id":"sourceFile","fileName":"constant.kt"}
    java.lang.String USER_PROPERTY_ACTIVE_SIMULATOR -> I0
    java.lang.String PRESET_EVENT_USER_UNSET -> j1
    java.lang.String COMMON_PROPERTY_SDK_VERSION -> I
    java.lang.String EVENT_INFO_ACID -> j
    java.lang.String USER_PROPERTY_ACTIVE_SCREEN_WIDTH -> E0
    java.lang.String PRESET_EVENT_SESSION_END -> f1
    java.lang.String USER_PROPERTY_ACTIVE_DEVICE_MANUFACTURER -> A0
    java.lang.String EVENT_TYPE_USER -> b1
    java.lang.String COMMON_PROPERTY_SIMULATOR -> Q
    java.lang.String PRE_EVENT_INFO_SYN -> r
    java.lang.String COMMON_PROPERTY_EVENT_DURATION -> Y
    java.lang.String USER_PROPERTY_ACTIVE_SDK_TYPE -> v0
    java.lang.String EVENT_TEMP_EXTRA_DELAY_INSERT_COMMON -> z
    java.lang.String USER_PROPERTY_ACTIVE_OS_COUNTRY -> r0
    java.lang.String USER_PROPERTY_ACTIVE_GAID -> n0
    java.lang.String USER_PROPERTY_LATEST_APPSFLYER_ID -> j0
    java.lang.String EVENT_INFO_GAID -> i
    java.lang.String COMMON_PROPERTY_SDK_TYPE -> H
    java.lang.String USER_PROPERTY_LATEST_DEBUG -> f0
    java.lang.String COMMON_PROPERTY_APPSFLYER_ID -> b0
    java.lang.String EVENT_INFO_TYPE -> q
    java.lang.String COMMON_PROPERTY_NETWORK_TYPE -> P
    java.lang.String USER_PROPERTY_ACTIVE_OS_VERSION_NAME -> y0
    java.lang.String SESSION_END_PROPERTY_SESSION_DURATION -> Z0
    java.lang.String EVENT_TIME_CAN_TRUSTED -> y
    java.lang.String COMMON_PROPERTY_IS_FOREGROUND -> X
    java.lang.String SESSION_START_PROPERTY_IS_FIRST_TIME -> V0
    java.lang.String ATTRIBUTE_PROPERTY_CNL -> R0
    java.lang.String ATTRIBUTE_PROPERTY_REFERRER_CLICK_TIME -> N0
    java.lang.String TIME_FROM_ROI_NET_BODY -> o1
    java.lang.String USER_PROPERTY_ACTIVE_NETWORK_TYPE -> H0
    java.lang.String PRESET_EVENT_USER_SET_ONCE -> i1
    java.lang.String COMMON_PROPERTY_OS_VERSION_NAME -> K
    java.lang.String USER_PROPERTY_ACTIVE_SCREEN_HEIGHT -> D0
    java.lang.String PRESET_EVENT_SESSION_START -> e1
    java.lang.String EVENT_INFO_BUNDLE_ID -> l
    int EVENT_REPORT_SIZE -> f
    java.lang.String EVENT_TYPE_TRACK -> a1
    java.lang.String COMMON_PROPERTY_FPS -> S
    java.lang.String EVENT_INFO_PROPERTIES -> t
    java.lang.String USER_PROPERTY_ACTIVE_APP_VERSION_NAME -> u0
    java.lang.String USER_PROPERTY_ACTIVE_MNC -> q0
    java.lang.String SERVER_URL_EXTERNAL -> c
    java.lang.String COMMON_PROPERTY_MCC -> B
    java.lang.String USER_PROPERTY_LATEST_TENJIN_ID -> m0
    java.lang.String USER_PROPERTY_LATEST_FIREBASE_IID -> i0
    java.lang.String EVENT_INFO_DT_ID -> k
    java.lang.String COMMON_PROPERTY_OS -> J
    java.lang.String COMMON_PROPERTY_TENJIN_ID -> e0
    int EVENT_REPORT_TRY_COUNT -> g
    java.lang.String COMMON_PROPERTY_FIREBASE_INSTANCE_ID -> a0
    java.lang.String EVENT_INFO_SYN -> s
    java.lang.String COMMON_PROPERTY_MEMORY_USED -> R
    java.lang.String USER_PROPERTY_ACTIVE_OS_VERSION_CODE -> z0
    java.lang.String SESSION_START_PROPERTY_BACKGROUND_DURATION -> Y0
    java.lang.String COMMON_PROPERTY_EVENT_ZONE_OFFSET -> Z
    java.lang.String ATTRIBUTE_PROPERTY_USER_AGENT -> U0
    java.lang.String ATTRIBUTE_PROPERTY_FAILED_REASON -> Q0
    java.lang.String COMMON_PROPERTY_EVENT_SESSION -> A
    java.lang.String LOG_TAG -> b
    java.lang.String ATTRIBUTE_PROPERTY_REFERRER_URL -> M0
    java.lang.String SDK_TYPE_ANDROID -> n1
    java.lang.String USER_PROPERTY_ACTIVE_STORAGE_USED -> G0
    java.lang.String PRESET_EVENT_USER_SET -> h1
    java.lang.String COMMON_PROPERTY_DEVICE_MANUFACTURER -> M
    java.lang.String USER_PROPERTY_ACTIVE_DEVICE_MODEL -> C0
    java.lang.String PRESET_EVENT_APP_INSTALL -> d1
    java.lang.String EVENT_INFO_DEBUG -> n
    java.lang.String COMMON_PROPERTY_DEVICE_MODEL -> U
    java.lang.String EVENT_TIME_CALIBRATED -> v
    java.lang.String USER_PROPERTY_ACTIVE_OS -> x0
    java.lang.String USER_PROPERTY_ACTIVE_APP_VERSION_CODE -> t0
    java.lang.String USER_PROPERTY_ACTIVE_MCC -> p0
    java.lang.String ERROR_REPORT_URL -> e
    java.lang.String USER_PROPERTY_LATEST_ADJUST_ID -> l0
    java.lang.String COMMON_PROPERTY_OS_COUNTRY -> D
    java.lang.String USER_PROPERTY_LATEST_APP_VERSION_NAME -> h0
    java.lang.String EVENT_INFO_APP_ID -> m
    java.lang.String COMMON_PROPERTY_KOCHAVA_ID -> d0
    java.lang.String COMMON_PROPERTY_OS_VERSION_CODE -> L
    java.lang.String EVENT_BODY -> u
    java.lang.String COMMON_PROPERTY_STORAGE_USED -> T
    java.lang.String SESSION_START_PROPERTY_START_REASON -> X0
    java.lang.String ATTRIBUTE_PROPERTY_APP_INSTALL_TIME_SERVER -> T0
    java.lang.String ATTRIBUTE_PROPERTY_INSTANT_EXPERIENCE_LAUNCHED -> P0
    java.lang.String COMMON_PROPERTY_MNC -> C
    java.lang.String USER_PROPERTY_ACTIVE_BUNDLE_ID -> L0
    java.lang.String PRESET_EVENT_USER_DEL -> m1
    java.lang.String EVENT_REPORT_PATH -> d
    java.lang.String COMMON_PROPERTY_APP_VERSION_NAME -> G
    java.lang.String USER_PROPERTY_ACTIVE_USER_AGENT -> J0
    java.lang.String PRESET_EVENT_USER_APPEND -> k1
    java.lang.String EVENT_INFO_ANDROID_ID -> h
    java.lang.String USER_PROPERTY_ACTIVE_MEMORY_USED -> F0
    java.lang.String PRESET_EVENT_USER_ADD -> g1
    java.lang.String COMMON_PROPERTY_BUILD_DEVICE -> O
    java.lang.String USER_PROPERTY_ACTIVE_DEVICE_BRAND -> B0
    java.lang.String PRESET_EVENT_APP_INITIALIZE -> c1
    java.lang.String EVENT_INFO_NAME -> p
    java.lang.String COMMON_PROPERTY_SCREEN_WIDTH -> W
    java.lang.String EVENT_TIME_SESSION_ID -> x
    java.lang.String USER_PROPERTY_ACTIVE_SDK_VERSION -> w0
    java.lang.String USER_PROPERTY_ACTIVE_OS_LANG -> s0
    java.lang.String USER_PROPERTY_ACTIVE_ANDROID_ID -> o0
    java.lang.String USER_PROPERTY_LATEST_KOCHAVA_ID -> k0
    java.lang.String COMMON_PROPERTY_APP_VERSION_CODE -> F
    java.lang.String USER_PROPERTY_LATEST_APP_VERSION_CODE -> g0
    java.lang.String COMMON_PROPERTY_ADJUST_ID -> c0
    java.lang.String EVENT_INFO_TIME -> o
    java.lang.String COMMON_PROPERTY_DEVICE_BRAND -> N
    java.lang.String EVENT_TIME_DEVICE -> w
    java.lang.String COMMON_PROPERTY_SCREEN_HEIGHT -> V
    java.lang.String SESSION_START_PROPERTY_RESUME_FROM_BACKGROUND -> W0
    java.lang.String ATTRIBUTE_PROPERTY_REFERRER_CLICK_TIME_SERVER -> S0
    ai.datatower.analytics.Constant INSTANCE -> a
    java.lang.String ATTRIBUTE_PROPERTY_APP_INSTALL_TIME -> O0
    java.lang.String COMMON_PROPERTY_OS_LANG -> E
    java.lang.String USER_PROPERTY_ACTIVE_BUILD_DEVICE -> K0
    java.lang.String PRESET_EVENT_USER_UNIQ_APPEND -> l1
    1:1:void <init>():4:4 -> <init>
ai.datatower.analytics.DT -> ai.datatower.analytics.DT:
# {"id":"sourceFile","fileName":"DT.kt"}
    1:1:void <init>():10:10 -> <init>
    1:1:void initSDK(android.content.Context,java.lang.String,java.lang.String):0:0 -> initSDK
    2:2:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String):0:0 -> initSDK
    3:3:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean):0:0 -> initSDK
    4:4:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int):0:0 -> initSDK
    5:5:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean):0:0 -> initSDK
    6:6:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean,org.json.JSONObject):0:0 -> initSDK
ai.datatower.analytics.DT$Companion -> ai.datatower.analytics.DT$Companion:
# {"id":"sourceFile","fileName":"DT.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():11:11 -> <init>
    1:1:void disableAutoTrack(ai.datatower.analytics.utils.PresetEvent):62:62 -> disableAutoTrack
    1:1:void enableAutoTrack(ai.datatower.analytics.utils.PresetEvent):57:57 -> enableAutoTrack
    1:1:void enableUpload():52:52 -> enableUpload
    1:1:void initSDK(android.content.Context,java.lang.String,java.lang.String):0:0 -> initSDK
    2:2:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String):0:0 -> initSDK
    3:3:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean):0:0 -> initSDK
    4:4:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int):0:0 -> initSDK
    5:5:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean):0:0 -> initSDK
    6:9:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean,org.json.JSONObject):37:40 -> initSDK
    10:10:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMAppId(java.lang.String):49:49 -> initSDK
    10:10:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.config.AnalyticsConfig.setAppId(java.lang.String):196 -> initSDK
    10:10:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean,org.json.JSONObject):41 -> initSDK
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    11:11:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean,org.json.JSONObject):42:42 -> initSDK
    12:12:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMEnabledDebug(boolean):29:29 -> initSDK
    12:12:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.config.AnalyticsConfig.setDebug(boolean,int):134 -> initSDK
    12:12:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean,org.json.JSONObject):43 -> initSDK
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    13:13:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMLogLevel(int):34:34 -> initSDK
    13:13:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.config.AnalyticsConfig.setDebug(boolean,int):135 -> initSDK
    13:13:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean,org.json.JSONObject):43 -> initSDK
    14:16:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean,org.json.JSONObject):44:46 -> initSDK
    17:17:void initSDK(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean,org.json.JSONObject):37:37 -> initSDK
    1:5:void initSDK$default(ai.datatower.analytics.DT$Companion,android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean,org.json.JSONObject,int,java.lang.Object):31:35 -> initSDK$default
    6:6:void initSDK$default(ai.datatower.analytics.DT$Companion,android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean,int,boolean,org.json.JSONObject,int,java.lang.Object):27:27 -> initSDK$default
ai.datatower.analytics.DTAnalytics -> ai.datatower.analytics.DTAnalytics:
# {"id":"sourceFile","fileName":"DTAnalytics.kt"}
    1:1:void <init>():10:10 -> <init>
    1:1:void setStaticCommonProperties(java.util.Map):0:0 -> setStaticCommonProperties
    2:2:void setStaticCommonProperties(org.json.JSONObject):0:0 -> setStaticCommonProperties
    1:1:void track(java.lang.String):0:0 -> track
    2:2:void track(java.lang.String,java.util.Map):0:0 -> track
    3:3:void track(java.lang.String,org.json.JSONObject):0:0 -> track
    1:1:void trackInternal$datatowerai_core_publicRelease(java.lang.String):0:0 -> trackInternal$datatowerai_core_publicRelease
    2:2:void trackInternal$datatowerai_core_publicRelease(java.lang.String,java.util.Map):0:0 -> trackInternal$datatowerai_core_publicRelease
    3:3:void trackInternal$datatowerai_core_publicRelease(java.lang.String,org.json.JSONObject):0:0 -> trackInternal$datatowerai_core_publicRelease
ai.datatower.analytics.DTAnalytics$Companion -> ai.datatower.analytics.DTAnalytics$Companion:
# {"id":"sourceFile","fileName":"DTAnalytics.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():12:12 -> <init>
    1:1:void clearDynamicCommonProperties():211:211 -> clearDynamicCommonProperties
    1:1:void clearStaticCommonProperties():242:242 -> clearStaticCommonProperties
    1:4:void enableThirdPartySharing(int):189:192 -> enableThirdPartySharing
    1:1:void getDataTowerId(ai.datatower.analytics.OnDataTowerIdListener):122:122 -> getDataTowerId
    1:1:boolean isSDKInitSuccess$datatowerai_core_publicRelease():277:277 -> isSDKInitSuccess$datatowerai_core_publicRelease
    1:1:void setAccountId(java.lang.String):132:132 -> setAccountId
    1:1:void setAdjustId(java.lang.String):169:169 -> setAdjustId
    1:1:void setAppsFlyerId(java.lang.String):151:151 -> setAppsFlyerId
    1:1:void setDynamicCommonProperties(kotlin.jvm.functions.Function0):203:203 -> setDynamicCommonProperties
    1:1:void setFirebaseAppInstanceId(java.lang.String):141:141 -> setFirebaseAppInstanceId
    1:1:void setKochavaId(java.lang.String):160:160 -> setKochavaId
    1:1:void setStaticCommonProperties(java.util.Map):222:222 -> setStaticCommonProperties
    2:2:void setStaticCommonProperties(org.json.JSONObject):234:234 -> setStaticCommonProperties
    1:1:void setTenjinId(java.lang.String):178:178 -> setTenjinId
    1:1:void track(java.lang.String):0:0 -> track
    2:2:void track(java.lang.String,java.util.Map):27:27 -> track
    3:3:void track(java.lang.String,org.json.JSONObject):38:38 -> track
    1:1:void track$default(ai.datatower.analytics.DTAnalytics$Companion,java.lang.String,java.util.Map,int,java.lang.Object):25:25 -> track$default
    2:2:void track$default(ai.datatower.analytics.DTAnalytics$Companion,java.lang.String,java.util.Map,int,java.lang.Object):23:23 -> track$default
    1:1:void trackInternal$datatowerai_core_publicRelease(java.lang.String):0:0 -> trackInternal$datatowerai_core_publicRelease
    2:2:void trackInternal$datatowerai_core_publicRelease(java.lang.String,java.util.Map):259:259 -> trackInternal$datatowerai_core_publicRelease
    3:3:void trackInternal$datatowerai_core_publicRelease(java.lang.String,org.json.JSONObject):270:270 -> trackInternal$datatowerai_core_publicRelease
    1:1:void trackInternal$datatowerai_core_publicRelease$default(ai.datatower.analytics.DTAnalytics$Companion,java.lang.String,java.util.Map,int,java.lang.Object):257:257 -> trackInternal$datatowerai_core_publicRelease$default
    2:2:void trackInternal$datatowerai_core_publicRelease$default(ai.datatower.analytics.DTAnalytics$Companion,java.lang.String,java.util.Map,int,java.lang.Object):255:255 -> trackInternal$datatowerai_core_publicRelease$default
    1:1:void userAdd(org.json.JSONObject):67:67 -> userAdd
    1:5:void userAppend(org.json.JSONObject):95:99 -> userAppend
    1:1:void userDelete():85:85 -> userDelete
    1:1:void userSet(org.json.JSONObject):47:47 -> userSet
    1:1:void userSetOnce(org.json.JSONObject):57:57 -> userSetOnce
    1:5:void userUniqAppend(org.json.JSONObject):109:113 -> userUniqAppend
    1:1:void userUnset(java.lang.String[]):77:77 -> userUnset
ai.datatower.analytics.DTAnalyticsUtils -> ai.datatower.analytics.DTAnalyticsUtils:
# {"id":"sourceFile","fileName":"DTAnalyticsUtils.kt"}
    1:1:void <init>():6:6 -> <init>
    1:1:void trackTimerEnd(java.lang.String):0:0 -> trackTimerEnd
    2:2:void trackTimerEnd(java.lang.String,java.util.Map):0:0 -> trackTimerEnd
    3:3:void trackTimerEnd(java.lang.String,org.json.JSONObject):0:0 -> trackTimerEnd
ai.datatower.analytics.DTAnalyticsUtils$Companion -> ai.datatower.analytics.DTAnalyticsUtils$Companion:
# {"id":"sourceFile","fileName":"DTAnalyticsUtils.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():8:8 -> <init>
    1:1:void trackTimerEnd(java.lang.String):0:0 -> trackTimerEnd
    2:2:void trackTimerEnd(java.lang.String,org.json.JSONObject):49:49 -> trackTimerEnd
    3:3:void trackTimerEnd(java.lang.String,java.util.Map):61:61 -> trackTimerEnd
    1:1:void trackTimerEnd$default(ai.datatower.analytics.DTAnalyticsUtils$Companion,java.lang.String,org.json.JSONObject,int,java.lang.Object):48:48 -> trackTimerEnd$default
    1:1:void trackTimerPause(java.lang.String):27:27 -> trackTimerPause
    1:1:void trackTimerResume(java.lang.String):37:37 -> trackTimerResume
    1:1:void trackTimerStart(java.lang.String):17:17 -> trackTimerStart
ai.datatower.analytics.DTChannel -> ai.datatower.analytics.DTChannel:
# {"id":"sourceFile","fileName":"constant.kt"}
    1:1:void <init>():164:164 -> <init>
ai.datatower.analytics.DTThirdPartyShareType -> ai.datatower.analytics.DTThirdPartyShareType:
# {"id":"sourceFile","fileName":"constant.kt"}
    1:1:void <init>():167:167 -> <init>
ai.datatower.analytics.OnDataTowerIdListener -> ai.datatower.analytics.OnDataTowerIdListener:
# {"id":"sourceFile","fileName":"constant.kt"}
ai.datatower.analytics.api.AbstractAnalytics -> ai.datatower.analytics.api.a:
# {"id":"sourceFile","fileName":"AbstractAnalytics.kt"}
    ai.datatower.analytics.config.AnalyticsConfig configOptions -> e
    java.util.concurrent.atomic.AtomicBoolean mHasInit -> i
    java.lang.String TAG -> h
    ai.datatower.analytics.utils.NotNullSingleVar firstOpenTime$delegate -> d
    java.util.concurrent.atomic.AtomicBoolean isInitRunning -> b
    ai.datatower.analytics.data.EventDataAdapter dataAdapter -> a
    kotlin.reflect.KProperty[] $$delegatedProperties -> g
    ai.datatower.analytics.core.DTActivityLifecycleCallbacks activityLifecycleCallbacks -> c
    ai.datatower.analytics.api.AbstractAnalytics$Companion Companion -> f
    1:1:void <clinit>():32:32 -> <clinit>
    2:2:void ai.datatower.analytics.api.AbstractAnalytics$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    2:2:void <clinit>():32 -> <clinit>
    3:10:void <clinit>():32:39 -> <clinit>
    1:10:void <init>():23:32 -> <init>
    1:1:java.lang.Object access$initProperties(ai.datatower.analytics.api.AbstractAnalytics,android.content.Context,kotlin.coroutines.Continuation):23:23 -> a
    2:2:void access$setMHasInit$cp(java.util.concurrent.atomic.AtomicBoolean):23:23 -> a
    3:3:void setFirstOpenTime(java.lang.Long):32:32 -> a
    4:4:void setConfigOptions(ai.datatower.analytics.config.AnalyticsConfig):34:34 -> a
    5:9:java.lang.Object init(android.content.Context,kotlin.coroutines.Continuation):43:47 -> a
    10:10:java.lang.Object init(android.content.Context,kotlin.coroutines.Continuation):44:44 -> a
    11:25:void initConfig(android.content.Context):146:160 -> a
    26:38:void initConfig(android.content.Context):158:170 -> a
    39:39:boolean ai.datatower.analytics.config.AbstractAnalyticsConfig.getMEnabledDebug():29:29 -> a
    39:39:void initConfig(android.content.Context):171 -> a
    40:40:int ai.datatower.analytics.config.AbstractAnalyticsConfig.getMLogLevel():34:34 -> a
    40:40:void initConfig(android.content.Context):171 -> a
    41:41:void initConfig(android.content.Context):171:171 -> a
    42:42:void configLog$default(ai.datatower.analytics.api.AbstractAnalytics,boolean,int,int,java.lang.Object):181:181 -> a
    43:43:boolean ai.datatower.analytics.config.AbstractAnalyticsConfig.getMEnabledDebug():29:29 -> a
    43:43:void configLog$default(ai.datatower.analytics.api.AbstractAnalytics,boolean,int,int,java.lang.Object):181 -> a
    44:44:void configLog$default(ai.datatower.analytics.api.AbstractAnalytics,boolean,int,int,java.lang.Object):182:182 -> a
    45:45:int ai.datatower.analytics.config.AbstractAnalyticsConfig.getMLogLevel():34:34 -> a
    45:45:void configLog$default(ai.datatower.analytics.api.AbstractAnalytics,boolean,int,int,java.lang.Object):182 -> a
    46:46:void configLog$default(ai.datatower.analytics.api.AbstractAnalytics,boolean,int,int,java.lang.Object):180:180 -> a
    47:47:void configLog(boolean,int):184:184 -> a
    48:48:ai.datatower.analytics.utils.LogUtils$Config ai.datatower.analytics.utils.LogUtils$Config.setLogSwitch(boolean):504:504 -> a
    48:48:void configLog(boolean,int):185 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    49:49:void configLog(boolean,int):186:186 -> a
    50:50:ai.datatower.analytics.utils.LogUtils$Config ai.datatower.analytics.utils.LogUtils$Config.setConsoleSwitch(boolean):509:509 -> a
    50:50:void configLog(boolean,int):187 -> a
    51:51:ai.datatower.analytics.utils.LogUtils$Config ai.datatower.analytics.utils.LogUtils$Config.setConsoleFilter(int):542:542 -> a
    51:51:void configLog(boolean,int):188 -> a
    1:1:java.lang.Object access$internalInit(ai.datatower.analytics.api.AbstractAnalytics,android.content.Context,kotlin.coroutines.Continuation):23:23 -> b
    2:2:void initLocalData(android.content.Context):109:109 -> b
    3:3:java.lang.Object initProperties(android.content.Context,kotlin.coroutines.Continuation):116:116 -> b
    1:1:void initSync(android.content.Context):51:51 -> c
    2:13:java.lang.Object internalInit(android.content.Context,kotlin.coroutines.Continuation):55:66 -> c
    14:25:java.lang.Object internalInit(android.content.Context,kotlin.coroutines.Continuation):55:66 -> c
    1:4:void onInitSuccess(android.content.Context):72:75 -> d
    1:3:void registerAppLifecycleListener(android.content.Context):123:125 -> e
    1:1:void trackPresetEvent(android.content.Context):139:139 -> f
    1:1:java.util.concurrent.atomic.AtomicBoolean access$getMHasInit$cp():23:23 -> g
    2:4:void tryReportFirstSessionStart$datatowerai_core_publicRelease(android.content.Context):194:196 -> g
    void flush() -> h
    1:1:void generateFirstOpenTime():102:102 -> i
    1:1:ai.datatower.analytics.config.AnalyticsConfig getConfigOptions():34:34 -> j
    1:1:java.lang.Long getFirstOpenTime():32:32 -> k
    2:10:void onInitFailed(java.lang.String):82:90 -> k
    1:1:void initTracker():132:132 -> l
    1:1:boolean isInitSuccess():95:95 -> m
ai.datatower.analytics.api.AbstractAnalytics$Companion -> ai.datatower.analytics.api.a$a:
# {"id":"sourceFile","fileName":"AbstractAnalytics.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():37:37 -> <init>
    1:1:java.util.concurrent.atomic.AtomicBoolean getMHasInit$datatowerai_core_publicRelease():39:39 -> a
    2:2:void setMHasInit$datatowerai_core_publicRelease(java.util.concurrent.atomic.AtomicBoolean):39:39 -> a
ai.datatower.analytics.api.AbstractAnalytics$internalInit$1 -> ai.datatower.analytics.api.a$b:
# {"id":"sourceFile","fileName":"AbstractAnalytics.kt"}
    java.lang.Object L$1 -> b
    java.lang.Object result -> c
    ai.datatower.analytics.api.AbstractAnalytics this$0 -> d
    java.lang.Object L$0 -> a
    int label -> e
ai.datatower.analytics.api.AnalyticsEmptyImp -> ai.datatower.analytics.api.b:
# {"id":"sourceFile","fileName":"AnalyticsEmptyImp.kt"}
    1:1:void <init>():6:6 -> <init>
    1:1:void getDTId(ai.datatower.analytics.OnDataTowerIdListener):0:0 -> a
    2:2:void setDynamicCommonProperties(kotlin.jvm.functions.Function0):0:0 -> a
    3:3:void setEnableUpload(java.lang.Boolean):0:0 -> a
    4:4:void trackNormal(java.lang.String,boolean,java.util.Map):0:0 -> a
    5:5:void trackNormal(java.lang.String,boolean,org.json.JSONObject):0:0 -> a
    6:6:void trackTimerEnd(java.lang.String,org.json.JSONObject):0:0 -> a
    7:7:void trackTimerStart(java.lang.String):0:0 -> a
    8:8:void userSetOnce(org.json.JSONObject):0:0 -> a
    9:9:void userUnset(java.lang.String[]):0:0 -> a
    10:10:java.lang.Boolean getEnableUpload():32:32 -> a
    1:1:void clearStaticCommonProperties():0:0 -> b
    2:2:void setKochavaId(java.lang.String):0:0 -> b
    3:3:void trackUser(java.lang.String,org.json.JSONObject):0:0 -> b
    4:4:void userAdd(org.json.JSONObject):0:0 -> b
    1:1:void clearCommonProperties():0:0 -> c
    2:2:void setAdjustId(java.lang.String):0:0 -> c
    3:3:void userUniqAppend(org.json.JSONObject):0:0 -> c
    1:1:void setAccountId(java.lang.String):0:0 -> d
    2:2:void userSet(org.json.JSONObject):0:0 -> d
    3:3:java.lang.String getAccountId():9:9 -> d
    1:1:void clearTrackTimer():0:0 -> e
    2:2:void trackTimerPause(java.lang.String):0:0 -> e
    3:3:void userAppend(org.json.JSONObject):0:0 -> e
    1:1:void removeTimer(java.lang.String):0:0 -> f
    2:2:void setStaticCommonProperties(org.json.JSONObject):0:0 -> f
    3:3:void userDelete():0:0 -> f
    void setAppsFlyersId(java.lang.String) -> g
    1:1:void flush():0:0 -> h
    2:2:void setTenjinId(java.lang.String):0:0 -> h
    void trackTimerResume(java.lang.String) -> i
    void setFirebaseInstanceId(java.lang.String) -> j
ai.datatower.analytics.api.AnalyticsImp -> ai.datatower.analytics.api.c:
# {"id":"sourceFile","fileName":"AnalyticsImp.kt"}
    ai.datatower.analytics.api.AnalyticsImp instance -> k
    ai.datatower.analytics.api.AnalyticsImp$Companion Companion -> j
    1:1:void ai.datatower.analytics.api.AnalyticsImp$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():28:28 -> <init>
    1:1:void access$setInstance$cp(ai.datatower.analytics.api.AnalyticsImp):28:28 -> a
    2:2:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> a
    2:2:void getDTId(ai.datatower.analytics.OnDataTowerIdListener):37 -> a
    3:3:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> a
    3:3:void getDTId(ai.datatower.analytics.OnDataTowerIdListener):37 -> a
    4:4:void getDTId(ai.datatower.analytics.OnDataTowerIdListener):40:40 -> a
    5:5:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> a
    5:5:void trackNormal(java.lang.String,boolean,java.util.Map):107 -> a
    6:6:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> a
    6:6:void trackNormal(java.lang.String,boolean,java.util.Map):107 -> a
    7:7:void trackNormal(java.lang.String,boolean,java.util.Map):114:114 -> a
    8:16:void trackNormal(java.lang.String,boolean,java.util.Map):111:119 -> a
    17:17:void trackNormal(java.lang.String,boolean,java.util.Map):117:117 -> a
    18:18:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> a
    18:18:void trackNormal(java.lang.String,boolean,org.json.JSONObject):97 -> a
    19:19:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> a
    19:19:void trackNormal(java.lang.String,boolean,org.json.JSONObject):97 -> a
    20:23:void trackNormal(java.lang.String,boolean,org.json.JSONObject):100:103 -> a
    24:24:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> a
    24:24:void trackTimerEnd(java.lang.String,org.json.JSONObject):246 -> a
    25:25:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> a
    25:25:void trackTimerEnd(java.lang.String,org.json.JSONObject):246 -> a
    26:27:void trackTimerEnd(java.lang.String,org.json.JSONObject):249:250 -> a
    28:28:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> a
    28:28:void trackTimerStart(java.lang.String):201 -> a
    29:29:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> a
    29:29:void trackTimerStart(java.lang.String):201 -> a
    30:31:void trackTimerStart(java.lang.String):204:205 -> a
    32:32:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> a
    32:32:void userSetOnce(org.json.JSONObject):133 -> a
    33:33:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> a
    33:33:void userSetOnce(org.json.JSONObject):133 -> a
    34:34:void userSetOnce(org.json.JSONObject):136:136 -> a
    35:35:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> a
    35:35:void userUnset(java.lang.String[]):147 -> a
    36:36:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> a
    36:36:void userUnset(java.lang.String[]):147 -> a
    37:46:void userUnset(java.lang.String[]):150:159 -> a
    47:47:java.lang.Boolean getEnableUpload():79:79 -> a
    48:49:void setEnableUpload(java.lang.Boolean):81:82 -> a
    50:50:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> a
    50:50:void setEnableUpload(java.lang.Boolean):83 -> a
    51:51:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMEnableUpload(boolean):66:66 -> a
    51:51:void setEnableUpload(java.lang.Boolean):83 -> a
    52:52:void setDynamicCommonProperties(kotlin.jvm.functions.Function0):185:185 -> a
    53:56:void trackTimerPause$lambda-2(java.lang.String,long):222:225 -> a
    57:61:void trackTimerEnd$lambda-4(java.lang.String,long,ai.datatower.analytics.api.AnalyticsImp,org.json.JSONObject):252:256 -> a
    1:1:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> b
    1:1:void setKochavaId(java.lang.String):58 -> b
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> b
    2:2:void setKochavaId(java.lang.String):58 -> b
    3:3:void setKochavaId(java.lang.String):61:61 -> b
    4:4:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> b
    4:4:void trackUser(java.lang.String,org.json.JSONObject):89 -> b
    5:5:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> b
    5:5:void trackUser(java.lang.String,org.json.JSONObject):89 -> b
    6:7:void trackUser(java.lang.String,org.json.JSONObject):92:93 -> b
    8:8:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> b
    8:8:void userAdd(org.json.JSONObject):140 -> b
    9:9:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> b
    9:9:void userAdd(org.json.JSONObject):140 -> b
    10:10:void userAdd(org.json.JSONObject):143:143 -> b
    11:11:void clearStaticCommonProperties():197:197 -> b
    12:15:void trackTimerResume$lambda-3(java.lang.String,long):237:240 -> b
    1:1:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> c
    1:1:void setAdjustId(java.lang.String):65 -> c
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> c
    2:2:void setAdjustId(java.lang.String):65 -> c
    3:3:void setAdjustId(java.lang.String):68:68 -> c
    4:4:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> c
    4:4:void userUniqAppend(org.json.JSONObject):178 -> c
    5:5:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> c
    5:5:void userUniqAppend(org.json.JSONObject):178 -> c
    6:6:void userUniqAppend(org.json.JSONObject):181:181 -> c
    7:7:void clearCommonProperties():189:189 -> c
    8:11:void trackTimerStart$lambda-1(java.lang.String,long):207:210 -> c
    1:1:java.lang.String getAccountId():31:31 -> d
    2:2:void setAccountId(java.lang.String):33:33 -> d
    3:3:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> d
    3:3:void userSet(org.json.JSONObject):126 -> d
    4:4:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> d
    4:4:void userSet(org.json.JSONObject):126 -> d
    5:5:void userSet(org.json.JSONObject):129:129 -> d
    1:1:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> e
    1:1:void clearTrackTimer():276 -> e
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> e
    2:2:void clearTrackTimer():276 -> e
    3:3:void clearTrackTimer():279:279 -> e
    4:4:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> e
    4:4:void trackTimerPause(java.lang.String):216 -> e
    5:5:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> e
    5:5:void trackTimerPause(java.lang.String):216 -> e
    6:7:void trackTimerPause(java.lang.String):219:220 -> e
    8:8:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> e
    8:8:void userAppend(org.json.JSONObject):171 -> e
    9:9:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> e
    9:9:void userAppend(org.json.JSONObject):171 -> e
    10:10:void userAppend(org.json.JSONObject):174:174 -> e
    1:1:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> f
    1:1:void removeTimer(java.lang.String):262 -> f
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> f
    2:2:void removeTimer(java.lang.String):262 -> f
    3:3:void removeTimer(java.lang.String):265:265 -> f
    4:4:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> f
    4:4:void userDelete():164 -> f
    5:5:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> f
    5:5:void userDelete():164 -> f
    6:6:void userDelete():167:167 -> f
    7:7:void setStaticCommonProperties(org.json.JSONObject):193:193 -> f
    1:1:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> g
    1:1:void setAppsFlyersId(java.lang.String):51 -> g
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> g
    2:2:void setAppsFlyersId(java.lang.String):51 -> g
    3:3:void setAppsFlyersId(java.lang.String):54:54 -> g
    1:1:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> h
    1:1:void setTenjinId(java.lang.String):72 -> h
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> h
    2:2:void setTenjinId(java.lang.String):72 -> h
    3:3:void setTenjinId(java.lang.String):75:75 -> h
    4:4:void flush():288:288 -> h
    1:1:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> i
    1:1:void trackTimerResume(java.lang.String):231 -> i
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> i
    2:2:void trackTimerResume(java.lang.String):231 -> i
    3:4:void trackTimerResume(java.lang.String):234:235 -> i
    1:1:ai.datatower.analytics.config.AnalyticsConfig ai.datatower.analytics.api.AbstractAnalytics.getConfigOptions():34:34 -> j
    1:1:void setFirebaseInstanceId(java.lang.String):44 -> j
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> j
    2:2:void setFirebaseInstanceId(java.lang.String):44 -> j
    3:3:void setFirebaseInstanceId(java.lang.String):47:47 -> j
    1:4:void removeTimer$lambda-5(java.lang.String):267:270 -> l
    1:1:ai.datatower.analytics.api.AnalyticsImp access$getInstance$cp():28:28 -> n
    1:3:void clearTrackTimer$lambda-6():280:282 -> o
ai.datatower.analytics.api.AnalyticsImp$Companion -> ai.datatower.analytics.api.c$a:
# {"id":"sourceFile","fileName":"AnalyticsImp.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():291:291 -> <init>
    1:1:void access$onFirstInitAsync(ai.datatower.analytics.api.AnalyticsImp$Companion,android.content.Context):291:291 -> a
    2:2:ai.datatower.analytics.api.AbstractAnalytics getInstance$datatowerai_core_publicRelease():301:301 -> a
    3:3:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> a
    3:3:ai.datatower.analytics.api.AbstractAnalytics getInstance$datatowerai_core_publicRelease():301 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:6:ai.datatower.analytics.api.AbstractAnalytics getInstance$datatowerai_core_publicRelease():303:305 -> a
    7:7:ai.datatower.analytics.api.AnalyticsImp ai.datatower.analytics.api.AnalyticsImp.access$getInstance$cp():28:28 -> a
    7:7:ai.datatower.analytics.api.AbstractAnalytics getInstance$datatowerai_core_publicRelease():306 -> a
    8:8:ai.datatower.analytics.api.AbstractAnalytics getInstance$datatowerai_core_publicRelease():306:306 -> a
    9:9:void ai.datatower.analytics.api.AnalyticsImp.access$setInstance$cp(ai.datatower.analytics.api.AnalyticsImp):28:28 -> a
    9:9:ai.datatower.analytics.api.AbstractAnalytics getInstance$datatowerai_core_publicRelease():306 -> a
    10:10:ai.datatower.analytics.api.AbstractAnalytics getInstance$datatowerai_core_publicRelease():305:305 -> a
    11:11:void init$datatowerai_core_publicRelease(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):318:318 -> a
    12:12:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    12:12:void init$datatowerai_core_publicRelease(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):318 -> a
    13:13:void init$datatowerai_core_publicRelease(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):320:320 -> a
    14:14:ai.datatower.analytics.api.AnalyticsImp ai.datatower.analytics.api.AnalyticsImp.access$getInstance$cp():28:28 -> a
    14:14:void init$datatowerai_core_publicRelease(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):323 -> a
    15:15:void init$datatowerai_core_publicRelease(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):323:323 -> a
    16:16:ai.datatower.analytics.api.AnalyticsImp ai.datatower.analytics.api.AnalyticsImp.access$getInstance$cp():28:28 -> a
    16:16:void init$datatowerai_core_publicRelease(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):324 -> a
    17:17:void init$datatowerai_core_publicRelease(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):324:324 -> a
    18:18:void ai.datatower.analytics.api.AnalyticsImp.access$setInstance$cp(ai.datatower.analytics.api.AnalyticsImp):28:28 -> a
    18:18:void init$datatowerai_core_publicRelease(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):324 -> a
    19:19:void init$datatowerai_core_publicRelease(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):323:323 -> a
    20:20:ai.datatower.analytics.api.AnalyticsImp ai.datatower.analytics.api.AnalyticsImp.access$getInstance$cp():28:28 -> a
    20:20:void init$datatowerai_core_publicRelease(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):327 -> a
    21:22:void init$datatowerai_core_publicRelease(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):327:328 -> a
    23:23:void init$datatowerai_core_publicRelease(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):315:315 -> a
    24:24:void onFirstInitAsync(android.content.Context):341:341 -> a
ai.datatower.analytics.api.AnalyticsImp$Companion$init$2 -> ai.datatower.analytics.api.c$a$a:
# {"id":"sourceFile","fileName":"AnalyticsImp.kt"}
    android.content.Context $context -> b
    boolean $isFirstTimeInit -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:10:java.lang.Object invokeSuspend(java.lang.Object):328:337 -> invokeSuspend
    11:14:java.lang.Object invokeSuspend(java.lang.Object):328:331 -> invokeSuspend
    15:15:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> invokeSuspend
    15:15:java.lang.Object invokeSuspend(java.lang.Object):331 -> invokeSuspend
    16:18:java.lang.Object invokeSuspend(java.lang.Object):333:335 -> invokeSuspend
    19:19:void ai.datatower.analytics.api.AnalyticsImp$Companion.access$onFirstInitAsync(ai.datatower.analytics.api.AnalyticsImp$Companion,android.content.Context):291:291 -> invokeSuspend
    19:19:java.lang.Object invokeSuspend(java.lang.Object):335 -> invokeSuspend
    20:20:java.lang.Object invokeSuspend(java.lang.Object):337:337 -> invokeSuspend
ai.datatower.analytics.api.AnalyticsImp$enableUpload$1 -> ai.datatower.analytics.api.c$b:
# {"id":"sourceFile","fileName":"AnalyticsImp.kt"}
    int label -> a
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> a
    2:2:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):79:79 -> invokeSuspend
    2:2:java.lang.Object ai.datatower.analytics.taskqueue.AsyncTaskRescheduled.await(kotlin.coroutines.Continuation):55:55 -> invokeSuspend
    2:2:java.lang.Object invokeSuspend(java.lang.Object):79 -> invokeSuspend
    3:3:java.lang.Object invokeSuspend(java.lang.Object):79:79 -> invokeSuspend
ai.datatower.analytics.api.IAnalytics -> ai.datatower.analytics.api.d:
# {"id":"sourceFile","fileName":"IAnalytics.kt"}
    void getDTId(ai.datatower.analytics.OnDataTowerIdListener) -> a
    java.lang.Boolean getEnableUpload() -> a
    void setDynamicCommonProperties(kotlin.jvm.functions.Function0) -> a
    void setEnableUpload(java.lang.Boolean) -> a
    void trackNormal(java.lang.String,boolean,java.util.Map) -> a
    void trackNormal(java.lang.String,boolean,org.json.JSONObject) -> a
    void trackTimerEnd(java.lang.String,org.json.JSONObject) -> a
    void trackTimerStart(java.lang.String) -> a
    void userSetOnce(org.json.JSONObject) -> a
    void userUnset(java.lang.String[]) -> a
    void clearStaticCommonProperties() -> b
    void setKochavaId(java.lang.String) -> b
    void trackUser(java.lang.String,org.json.JSONObject) -> b
    void userAdd(org.json.JSONObject) -> b
    void clearCommonProperties() -> c
    void setAdjustId(java.lang.String) -> c
    void userUniqAppend(org.json.JSONObject) -> c
    java.lang.String getAccountId() -> d
    void setAccountId(java.lang.String) -> d
    void userSet(org.json.JSONObject) -> d
    void clearTrackTimer() -> e
    void trackTimerPause(java.lang.String) -> e
    void userAppend(org.json.JSONObject) -> e
    void removeTimer(java.lang.String) -> f
    void setStaticCommonProperties(org.json.JSONObject) -> f
    void userDelete() -> f
    void setAppsFlyersId(java.lang.String) -> g
    void setTenjinId(java.lang.String) -> h
    void trackTimerResume(java.lang.String) -> i
    void setFirebaseInstanceId(java.lang.String) -> j
ai.datatower.analytics.api.IAnalytics$DefaultImpls -> ai.datatower.analytics.api.d$a:
# {"id":"sourceFile","fileName":"IAnalytics.kt"}
    1:1:void trackNormal$default(ai.datatower.analytics.api.IAnalytics,java.lang.String,boolean,org.json.JSONObject,int,java.lang.Object):91:91 -> a
    2:2:void trackUser$default(ai.datatower.analytics.api.IAnalytics,java.lang.String,org.json.JSONObject,int,java.lang.Object):108:108 -> a
ai.datatower.analytics.config.AbstractAnalyticsConfig -> ai.datatower.analytics.config.a:
# {"id":"sourceFile","fileName":"AbstractAnalyticsConfig.kt"}
    java.lang.String mServerUrl -> i
    java.lang.String mAppId -> h
    org.json.JSONObject mCommonProperties -> n
    boolean mEnableTrack -> j
    boolean mEnableUpload -> k
    java.lang.String mChannel -> l
    int mNetworkTypePolicy -> f
    long mMaxCacheSize -> c
    int mLogLevel -> e
    int mFlushBulkSize -> b
    android.content.Context mContext -> g
    int mFlushInterval -> a
    java.util.concurrent.atomic.AtomicBoolean mManualUploadSwitch -> m
    boolean mEnabledDebug -> d
    1:69:void <init>():8:76 -> <init>
    1:1:void setMFlushBulkSize(int):19:19 -> a
    2:2:void setMMaxCacheSize(long):24:24 -> a
    3:3:void setMContext(android.content.Context):44:44 -> a
    4:4:java.lang.String getMAppId():49:49 -> a
    5:5:void setMAppId(java.lang.String):49:49 -> a
    6:6:void setMEnableTrack(boolean):61:61 -> a
    7:7:void setMManualUploadSwitch(java.util.concurrent.atomic.AtomicBoolean):76:76 -> a
    8:8:void setMCommonProperties(org.json.JSONObject):81:81 -> a
    1:1:void setMFlushInterval(int):14:14 -> b
    2:2:void setMEnableUpload(boolean):66:66 -> b
    3:3:java.lang.String getMChannel():71:71 -> b
    4:4:void setMChannel(java.lang.String):71:71 -> b
    1:1:void setMEnabledDebug(boolean):29:29 -> c
    2:2:void setMLogLevel(int):34:34 -> c
    3:3:void setMServerUrl(java.lang.String):55:55 -> c
    4:4:org.json.JSONObject getMCommonProperties():81:81 -> c
    1:1:void setMNetworkTypePolicy(int):39:39 -> d
    2:2:android.content.Context getMContext():44:44 -> d
    1:1:boolean getMEnableTrack():61:61 -> e
    1:1:boolean getMEnableUpload():66:66 -> f
    1:1:boolean getMEnabledDebug():29:29 -> g
    1:1:int getMFlushBulkSize():19:19 -> h
    1:1:int getMFlushInterval():14:14 -> i
    1:1:int getMLogLevel():34:34 -> j
    1:1:java.util.concurrent.atomic.AtomicBoolean getMManualUploadSwitch():76:76 -> k
    1:1:long getMMaxCacheSize():24:24 -> l
    1:1:int getMNetworkTypePolicy():39:39 -> m
    1:1:java.lang.String getMServerUrl():55:55 -> n
ai.datatower.analytics.config.AnalyticsConfig -> ai.datatower.analytics.config.b:
# {"id":"sourceFile","fileName":"AnalyticsConfig.kt"}
    kotlin.Lazy instance$delegate -> x
    java.lang.String configPreferenceName -> o
    ai.datatower.analytics.data.persistence.SharedPreferencesLoader sPrefsLoader -> p
    boolean hasGetRemoteConfig -> u
    boolean isFetching -> v
    ai.datatower.analytics.config.AnalyticsConfig$Companion Companion -> w
    boolean sdkDisable -> s
    ai.datatower.analytics.data.persistence.StorageDisableFlag sdkDisableStorage -> q
    ai.datatower.analytics.data.persistence.StorageReportUrl reportUrlStorage -> r
    java.lang.String reportUrl -> t
    1:1:void ai.datatower.analytics.config.AnalyticsConfig$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:26:void <clinit>():0:24 -> <clinit>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:11:void <init>():21:30 -> <init>
    1:1:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMEnabledDebug(boolean):29:29 -> a
    1:1:ai.datatower.analytics.config.AnalyticsConfig setDebug(boolean,int):134 -> a
    2:2:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMLogLevel(int):34:34 -> a
    2:2:ai.datatower.analytics.config.AnalyticsConfig setDebug(boolean,int):135 -> a
    3:3:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMEnabledDebug(boolean):29:29 -> a
    3:3:ai.datatower.analytics.config.AnalyticsConfig setDebug(boolean,int):134 -> a
    3:3:ai.datatower.analytics.config.AnalyticsConfig setDebug$default(ai.datatower.analytics.config.AnalyticsConfig,boolean,int,int,java.lang.Object):133 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    4:4:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMLogLevel(int):34:34 -> a
    4:4:ai.datatower.analytics.config.AnalyticsConfig setDebug(boolean,int):135 -> a
    4:4:ai.datatower.analytics.config.AnalyticsConfig setDebug$default(ai.datatower.analytics.config.AnalyticsConfig,boolean,int,int,java.lang.Object):133 -> a
    5:5:void disableAutoTrack(ai.datatower.analytics.utils.PresetEvent):253:253 -> a
    1:1:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMCommonProperties(org.json.JSONObject):81:81 -> b
    1:1:ai.datatower.analytics.config.AnalyticsConfig addCommonProperties(org.json.JSONObject):260 -> b
    2:2:ai.datatower.analytics.config.AnalyticsConfig setContext(android.content.Context):121:121 -> b
    3:3:ai.datatower.analytics.config.AnalyticsConfig setMaxCacheSize(long):173:173 -> b
    4:4:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMMaxCacheSize(long):24:24 -> b
    4:4:ai.datatower.analytics.config.AnalyticsConfig setMaxCacheSize(long):173 -> b
    5:5:void enableAutoTrack(ai.datatower.analytics.utils.PresetEvent):249:249 -> b
    1:1:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMAppId(java.lang.String):49:49 -> d
    1:1:ai.datatower.analytics.config.AnalyticsConfig setAppId(java.lang.String):196 -> d
    2:2:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMEnableTrack(boolean):61:61 -> d
    2:2:ai.datatower.analytics.config.AnalyticsConfig enableTrack(boolean):206 -> d
    1:1:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMEnableUpload(boolean):66:66 -> e
    1:1:ai.datatower.analytics.config.AnalyticsConfig enableUpload(boolean):216 -> e
    2:2:ai.datatower.analytics.config.AnalyticsConfig setFlushBulkSize(int):162:162 -> e
    3:3:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMFlushBulkSize(int):19:19 -> e
    3:3:ai.datatower.analytics.config.AnalyticsConfig setFlushBulkSize(int):162 -> e
    4:4:ai.datatower.analytics.config.AnalyticsConfig setChannel(java.lang.String):226:226 -> e
    1:1:ai.datatower.analytics.config.AnalyticsConfig setDebug(boolean):0:0 -> f
    2:2:ai.datatower.analytics.config.AnalyticsConfig setServerUrl(java.lang.String):140:140 -> f
    3:3:ai.datatower.analytics.config.AnalyticsConfig setFlushInterval(int):151:151 -> f
    4:4:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMFlushInterval(int):14:14 -> f
    4:4:ai.datatower.analytics.config.AnalyticsConfig setFlushInterval(int):151 -> f
    1:1:void ai.datatower.analytics.config.AbstractAnalyticsConfig.setMNetworkTypePolicy(int):39:39 -> g
    1:1:ai.datatower.analytics.config.AnalyticsConfig setNetworkTypePolicy(int):185 -> g
    2:2:java.util.concurrent.atomic.AtomicBoolean ai.datatower.analytics.config.AbstractAnalyticsConfig.getMManualUploadSwitch():76:76 -> g
    2:2:ai.datatower.analytics.config.AnalyticsConfig setManualEnableUpload(boolean):234 -> g
    3:3:ai.datatower.analytics.config.AnalyticsConfig setManualEnableUpload(boolean):234:234 -> g
    1:1:kotlin.Lazy access$getInstance$delegate$cp():17:17 -> o
    1:1:java.util.concurrent.atomic.AtomicBoolean ai.datatower.analytics.config.AbstractAnalyticsConfig.getMManualUploadSwitch():76:76 -> p
    1:1:void enableUpload():239 -> p
    2:6:void enableUpload():239:243 -> p
    7:7:java.util.concurrent.atomic.AtomicBoolean ai.datatower.analytics.config.AbstractAnalyticsConfig.getMManualUploadSwitch():76:76 -> p
    7:7:void enableUpload():244 -> p
    8:9:void enableUpload():244:245 -> p
    void getRemoteConfig() -> q
    1:1:org.json.JSONObject ai.datatower.analytics.config.AbstractAnalyticsConfig.getMCommonProperties():81:81 -> r
    1:1:java.lang.String getSDKType():274 -> r
    2:6:java.lang.String getSDKType():275:279 -> r
    1:1:org.json.JSONObject ai.datatower.analytics.config.AbstractAnalyticsConfig.getMCommonProperties():81:81 -> s
    1:1:java.lang.String getSDKVersion():265 -> s
    2:6:java.lang.String getSDKVersion():266:270 -> s
    1:3:void initRemoteConfig():98:100 -> t
    4:15:void initRemoteConfig():98:109 -> t
    16:16:java.lang.String ai.datatower.analytics.config.AbstractAnalyticsConfig.getMServerUrl():55:55 -> t
    16:16:void initRemoteConfig():112 -> t
    17:17:void initRemoteConfig():109:109 -> t
    1:1:boolean isSdkDisable():116:116 -> u
    1:1:java.lang.String reportUrl():118:118 -> v
    2:2:java.lang.String ai.datatower.analytics.config.AbstractAnalyticsConfig.getMServerUrl():55:55 -> v
    2:2:java.lang.String reportUrl():118 -> v
ai.datatower.analytics.config.AnalyticsConfig$Companion -> ai.datatower.analytics.config.b$b:
# {"id":"sourceFile","fileName":"AnalyticsConfig.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():23:23 -> <init>
    1:1:ai.datatower.analytics.config.AnalyticsConfig getInstance():24:24 -> a
ai.datatower.analytics.config.AnalyticsConfig$Companion$instance$2 -> ai.datatower.analytics.config.b$a:
# {"id":"sourceFile","fileName":"AnalyticsConfig.kt"}
    ai.datatower.analytics.config.AnalyticsConfig$Companion$instance$2 INSTANCE -> a
    1:1:ai.datatower.analytics.config.AnalyticsConfig invoke():25:25 -> a
    2:2:void ai.datatower.analytics.config.AnalyticsConfig.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    2:2:ai.datatower.analytics.config.AnalyticsConfig invoke():25 -> a
    1:1:ai.datatower.analytics.config.AnalyticsConfig invoke():25:25 -> invoke
    1:1:java.lang.Object invoke():24 -> invoke
    2:2:void ai.datatower.analytics.config.AnalyticsConfig.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> invoke
    2:2:ai.datatower.analytics.config.AnalyticsConfig invoke():25 -> invoke
    2:2:java.lang.Object invoke():24 -> invoke
ai.datatower.analytics.core.DTActivityLifecycleCallbacks -> ai.datatower.analytics.core.a:
# {"id":"sourceFile","fileName":"DTActivityLifecycleCallbacks.java"}
    java.lang.String TAG -> g
    java.util.List mStartedActivityList -> e
    java.lang.Object mActivityLifecycleCallbacksLock -> b
    java.lang.ref.WeakReference mCurrentActivity -> d
    boolean shouldTrackEndEvent -> f
    boolean resumeFromBackground -> a
    java.lang.Boolean isLaunch -> c
    1:9:void <init>():35:43 -> <init>
    1:1:java.lang.Boolean access$000(ai.datatower.analytics.core.DTActivityLifecycleCallbacks):35:35 -> a
    2:2:java.lang.Boolean access$002(ai.datatower.analytics.core.DTActivityLifecycleCallbacks,java.lang.Boolean):35:35 -> a
    3:4:android.app.Activity currentActivity():47:48 -> a
    5:17:boolean notStartedActivity(android.app.Activity,boolean):77:89 -> a
    18:24:org.json.JSONArray toJSONArray(java.lang.Object):204:210 -> a
    25:25:org.json.JSONArray toJSONArray(java.lang.Object):206:206 -> a
    1:1:boolean access$100(ai.datatower.analytics.core.DTActivityLifecycleCallbacks):35:35 -> b
    2:32:java.lang.Object wrap(java.lang.Object):163:193 -> b
    33:62:java.lang.String getStartReason():216:245 -> b
    1:15:void onAppStartEventEnabled():144:158 -> c
    1:1:void trackSessionEnd():64:64 -> d
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> d
    2:2:void trackSessionEnd():64 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:void trackSessionEnd():67:67 -> d
    1:1:void trackSessionStart():54:54 -> e
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> e
    2:2:void trackSessionStart():54 -> e
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:5:void trackSessionStart():57:59 -> e
    1:2:void onActivityCreated(android.app.Activity,android.os.Bundle):72:73 -> onActivityCreated
    1:10:void onActivityPaused(android.app.Activity):129:138 -> onActivityPaused
    1:10:void onActivityResumed(android.app.Activity):115:124 -> onActivityResumed
    1:15:void onActivityStarted(android.app.Activity):94:108 -> onActivityStarted
    1:19:void onActivityStopped(android.app.Activity):251:269 -> onActivityStopped
ai.datatower.analytics.core.DTActivityLifecycleCallbacks$1 -> ai.datatower.analytics.core.a$a:
# {"id":"sourceFile","fileName":"DTActivityLifecycleCallbacks.java"}
    ai.datatower.analytics.core.DTActivityLifecycleCallbacks this$0 -> a
    1:1:void <init>(ai.datatower.analytics.core.DTActivityLifecycleCallbacks):146:146 -> <init>
    1:1:void run():149:149 -> run
    2:2:java.lang.Boolean ai.datatower.analytics.core.DTActivityLifecycleCallbacks.access$000(ai.datatower.analytics.core.DTActivityLifecycleCallbacks):35:35 -> run
    2:2:void run():149 -> run
    3:4:void run():149:150 -> run
    5:5:java.lang.Boolean ai.datatower.analytics.core.DTActivityLifecycleCallbacks.access$002(ai.datatower.analytics.core.DTActivityLifecycleCallbacks,java.lang.Boolean):35:35 -> run
    5:5:void run():150 -> run
    6:6:void run():151:151 -> run
    7:7:boolean ai.datatower.analytics.core.DTActivityLifecycleCallbacks.access$100(ai.datatower.analytics.core.DTActivityLifecycleCallbacks):35:35 -> run
    7:7:void run():151 -> run
    8:8:void run():151:151 -> run
ai.datatower.analytics.core.EventInfoCheckHelper -> ai.datatower.analytics.core.b:
# {"id":"sourceFile","fileName":"EventInfoCheckHelper.kt"}
    kotlin.Lazy instance$delegate -> b
    ai.datatower.analytics.core.EventInfoCheckHelper$Companion Companion -> a
    1:1:void ai.datatower.analytics.core.EventInfoCheckHelper$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:22:void <clinit>():0:20 -> <clinit>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():18:18 -> <init>
    1:1:kotlin.Lazy access$getInstance$delegate$cp():18:18 -> a
    2:24:void correctEventInfo(java.lang.String,kotlin.jvm.functions.Function1):27:49 -> a
    25:30:org.json.JSONObject correctCommonProperties(org.json.JSONObject):203:208 -> a
    1:24:org.json.JSONObject correctDataVerAfter200(org.json.JSONObject):118:141 -> b
    25:25:java.lang.String ai.datatower.analytics.utils.TimeCalibration.getSessionId():46:46 -> b
    25:25:org.json.JSONObject correctDataVerAfter200(org.json.JSONObject):141 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    26:72:org.json.JSONObject correctDataVerAfter200(org.json.JSONObject):141:187 -> b
    1:20:org.json.JSONObject correctDataVerUnder200AndAfter100(org.json.JSONObject):89:108 -> c
    1:7:org.json.JSONObject correctEventIdInfo(org.json.JSONObject):69:75 -> d
    1:4:org.json.JSONObject correctEventTime(org.json.JSONObject):55:58 -> e
    1:1:boolean isFormatAfterVer100(org.json.JSONObject):199:199 -> f
    1:2:boolean isFormatAfterVer200(org.json.JSONObject):195:196 -> g
ai.datatower.analytics.core.EventInfoCheckHelper$Companion -> ai.datatower.analytics.core.b$b:
# {"id":"sourceFile","fileName":"EventInfoCheckHelper.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():19:19 -> <init>
    1:1:ai.datatower.analytics.core.EventInfoCheckHelper getInstance():20:20 -> a
ai.datatower.analytics.core.EventInfoCheckHelper$Companion$instance$2 -> ai.datatower.analytics.core.b$a:
# {"id":"sourceFile","fileName":"EventInfoCheckHelper.kt"}
    ai.datatower.analytics.core.EventInfoCheckHelper$Companion$instance$2 INSTANCE -> a
    1:1:ai.datatower.analytics.core.EventInfoCheckHelper invoke():21:21 -> a
    2:2:void ai.datatower.analytics.core.EventInfoCheckHelper.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    2:2:ai.datatower.analytics.core.EventInfoCheckHelper invoke():21 -> a
    1:1:ai.datatower.analytics.core.EventInfoCheckHelper invoke():21:21 -> invoke
    1:1:java.lang.Object invoke():20 -> invoke
    2:2:void ai.datatower.analytics.core.EventInfoCheckHelper.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> invoke
    2:2:ai.datatower.analytics.core.EventInfoCheckHelper invoke():21 -> invoke
    2:2:java.lang.Object invoke():20 -> invoke
ai.datatower.analytics.core.EventTimer -> ai.datatower.analytics.core.c:
# {"id":"sourceFile","fileName":"EventTimer.kt"}
    long endTime -> b
    long startTime -> a
    long eventAccumulatedDuration -> c
    boolean isPaused -> d
    1:10:void <init>(long):5:14 -> <init>
    1:4:long duration():18:21 -> a
    5:10:long duration():18:23 -> a
    11:11:void setEndTime(long):35:35 -> a
    12:14:void setTimerState(boolean,long):43:45 -> a
    15:15:void setStartTime(long):31:31 -> a
    15:15:void setTimerState(boolean,long):47 -> a
    1:1:void setStartTime(long):31:31 -> b
    2:2:long getEndTime():39:39 -> b
    1:1:long getStartTime():27:27 -> c
    1:1:boolean isPaused():50:50 -> d
ai.datatower.analytics.core.EventTimerManager -> ai.datatower.analytics.core.d:
# {"id":"sourceFile","fileName":"EventTimerManager.kt"}
    java.util.Map mTrackTimer -> a
    kotlin.Lazy instance$delegate -> d
    ai.datatower.analytics.core.EventTimerManager$Companion Companion -> b
    java.lang.String TAG -> c
    1:1:void ai.datatower.analytics.core.EventTimerManager$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:12:void <clinit>():0:10 -> <clinit>
    1:10:void <init>():6:15 -> <init>
    1:1:kotlin.Lazy access$getInstance$delegate$cp():6:6 -> a
    2:6:void addEventTimer(java.lang.String,ai.datatower.analytics.core.EventTimer):19:23 -> a
    7:7:void addEventTimer(java.lang.String,ai.datatower.analytics.core.EventTimer):19:19 -> a
    8:9:void updateEndTime(java.lang.String,long):31:32 -> a
    10:10:void ai.datatower.analytics.core.EventTimer.setEndTime(long):35:35 -> a
    10:10:void updateEndTime(java.lang.String,long):32 -> a
    11:12:void updateEndTime(java.lang.String,long):33:34 -> a
    13:13:void updateEndTime(java.lang.String,long):31:31 -> a
    14:15:void updateTimerState(java.lang.String,long,boolean):39:40 -> a
    16:16:boolean ai.datatower.analytics.core.EventTimer.isPaused():50:50 -> a
    16:16:void updateTimerState(java.lang.String,long,boolean):41 -> a
    17:20:void updateTimerState(java.lang.String,long,boolean):42:45 -> a
    21:21:void updateTimerState(java.lang.String,long,boolean):39:39 -> a
    22:24:ai.datatower.analytics.core.EventTimer getEventTimer(java.lang.String):53:55 -> a
    25:29:ai.datatower.analytics.core.EventTimer getEventTimer(java.lang.String):53:57 -> a
    30:30:ai.datatower.analytics.core.EventTimer getEventTimer(java.lang.String):53:53 -> a
    1:1:void removeTimer(java.lang.String):27:27 -> b
    2:2:void clearTimers():62:62 -> b
ai.datatower.analytics.core.EventTimerManager$Companion -> ai.datatower.analytics.core.d$b:
# {"id":"sourceFile","fileName":"EventTimerManager.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():8:8 -> <init>
    1:1:ai.datatower.analytics.core.EventTimerManager getInstance():10:10 -> a
ai.datatower.analytics.core.EventTimerManager$Companion$instance$2 -> ai.datatower.analytics.core.d$a:
# {"id":"sourceFile","fileName":"EventTimerManager.kt"}
    ai.datatower.analytics.core.EventTimerManager$Companion$instance$2 INSTANCE -> a
    1:1:ai.datatower.analytics.core.EventTimerManager invoke():11:11 -> a
    1:1:ai.datatower.analytics.core.EventTimerManager invoke():11:11 -> invoke
    1:1:java.lang.Object invoke():10 -> invoke
ai.datatower.analytics.core.EventTrackManager -> ai.datatower.analytics.core.e:
# {"id":"sourceFile","fileName":"EventTrackManager.kt"}
    kotlin.Lazy instance$delegate -> c
    ai.datatower.analytics.core.EventUploadManager mAnalyticsManager -> a
    ai.datatower.analytics.core.EventTrackManager$Companion Companion -> b
    1:1:void ai.datatower.analytics.core.EventTrackManager$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:25:void <clinit>():0:23 -> <clinit>
    1:1:void <init>():21:21 -> <init>
    1:1:kotlin.Lazy access$getInstance$delegate$cp():21:21 -> a
    2:2:boolean assertEvent$default(ai.datatower.analytics.core.EventTrackManager,java.lang.String,org.json.JSONObject,int,java.lang.Object):56:56 -> a
    3:3:void trackNormal$default(ai.datatower.analytics.core.EventTrackManager,java.lang.String,long,org.json.JSONObject,int,java.lang.Object):66:66 -> a
    4:4:void trackNormal(java.lang.String,long,org.json.JSONObject):67:67 -> a
    5:5:void trackNormalPreset$default(ai.datatower.analytics.core.EventTrackManager,java.lang.String,long,org.json.JSONObject,kotlin.jvm.functions.Function2,int,java.lang.Object):77:77 -> a
    6:6:void trackNormalPreset$default(ai.datatower.analytics.core.EventTrackManager,java.lang.String,long,org.json.JSONObject,kotlin.jvm.functions.Function2,int,java.lang.Object):74:74 -> a
    7:7:void trackNormalPreset(java.lang.String,long,org.json.JSONObject,kotlin.jvm.functions.Function2):80:80 -> a
    8:8:void trackEvent$lambda-0(ai.datatower.analytics.core.EventTrackManager,java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):133:133 -> a
    9:9:void addEventTask$default(ai.datatower.analytics.core.EventTrackManager,java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2,int,java.lang.Object):155:155 -> a
    10:40:void addEventTask(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):166:196 -> a
    41:41:java.util.concurrent.atomic.AtomicBoolean ai.datatower.analytics.config.AbstractAnalyticsConfig.getMManualUploadSwitch():76:76 -> a
    41:41:void addEventTask(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):196 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    42:58:void addEventTask(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):196:212 -> a
    59:65:void addEventTask(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):211:217 -> a
    66:72:void addEventTask(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):215:221 -> a
    73:73:java.lang.String ai.datatower.analytics.utils.TimeCalibration.getSessionId():46:46 -> a
    73:73:void addEventTask(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):221 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    74:79:void addEventTask(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):219:224 -> a
    80:90:void addEventTask(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):223:233 -> a
    91:91:void addEventTask(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):232:232 -> a
    92:107:void addEventTask(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):229:244 -> a
    108:108:void addEventTask(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):243:243 -> a
    109:123:kotlin.Pair getEventTime(java.lang.String,long):252:266 -> a
    124:124:void appendDynamicProperties(java.lang.String,org.json.JSONObject):272:272 -> a
    125:125:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> a
    125:125:void appendDynamicProperties(java.lang.String,org.json.JSONObject):272 -> a
    126:126:void appendDynamicProperties(java.lang.String,org.json.JSONObject):275:275 -> a
    127:134:void appendDynamicProperties(java.lang.String,org.json.JSONObject):272:279 -> a
    135:135:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> a
    135:135:void appendDynamicProperties(java.lang.String,org.json.JSONObject):279 -> a
    136:136:void appendDynamicProperties(java.lang.String,org.json.JSONObject):282:282 -> a
    137:144:void appendDynamicProperties(java.lang.String,org.json.JSONObject):279:286 -> a
    145:145:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> a
    145:145:void appendDynamicProperties(java.lang.String,org.json.JSONObject):286 -> a
    146:146:void appendDynamicProperties(java.lang.String,org.json.JSONObject):289:289 -> a
    147:156:void appendDynamicProperties(java.lang.String,org.json.JSONObject):286:295 -> a
    157:157:void trackQualityEvent(java.lang.String):317:317 -> a
    1:2:void init():39:40 -> b
    3:3:boolean assertEvent(java.lang.String,org.json.JSONObject):59:59 -> b
    4:4:void trackUser$default(ai.datatower.analytics.core.EventTrackManager,java.lang.String,long,org.json.JSONObject,int,java.lang.Object):83:83 -> b
    5:5:void trackUser(java.lang.String,long,org.json.JSONObject):84:84 -> b
    6:6:void trackEvent$default(ai.datatower.analytics.core.EventTrackManager,java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2,int,java.lang.Object):110:110 -> b
    7:10:void trackEvent(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):121:124 -> b
    11:34:void trackEvent(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):122:145 -> b
    35:39:void trackEvent(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):143:147 -> b
    1:2:void initTime():48:49 -> c
    3:3:void trackUserWithPropertyCheck$default(ai.datatower.analytics.core.EventTrackManager,java.lang.String,long,org.json.JSONObject,int,java.lang.Object):87:87 -> c
    4:5:void trackUserWithPropertyCheck(java.lang.String,long,org.json.JSONObject):88:89 -> c
    6:6:void trackInternal$default(ai.datatower.analytics.core.EventTrackManager,java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2,int,java.lang.Object):92:92 -> c
    7:7:void trackInternal(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):100:100 -> c
    8:8:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> c
    8:8:void trackInternal(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):100 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:void trackInternal(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):102:102 -> c
    10:16:void trackInternal(java.lang.String,long,java.lang.String,boolean,org.json.JSONObject,kotlin.jvm.functions.Function2):101:107 -> c
ai.datatower.analytics.core.EventTrackManager$Companion -> ai.datatower.analytics.core.e$b:
# {"id":"sourceFile","fileName":"EventTrackManager.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():22:22 -> <init>
    1:1:ai.datatower.analytics.core.EventTrackManager getInstance():23:23 -> a
ai.datatower.analytics.core.EventTrackManager$Companion$instance$2 -> ai.datatower.analytics.core.e$a:
# {"id":"sourceFile","fileName":"EventTrackManager.kt"}
    ai.datatower.analytics.core.EventTrackManager$Companion$instance$2 INSTANCE -> a
    1:1:ai.datatower.analytics.core.EventTrackManager invoke():24:24 -> a
    1:1:ai.datatower.analytics.core.EventTrackManager invoke():24:24 -> invoke
    1:1:java.lang.Object invoke():23 -> invoke
ai.datatower.analytics.core.EventTrackManager$TrackThreadFactory -> ai.datatower.analytics.core.e$c:
# {"id":"sourceFile","fileName":"EventTrackManager.kt"}
    1:1:void <init>():323:323 -> <init>
    1:1:void newThread$lambda-1$lambda-0(java.lang.Thread,java.lang.Throwable):327:327 -> a
    1:2:java.lang.Thread newThread(java.lang.Runnable):325:326 -> newThread
ai.datatower.analytics.core.EventUploadManager -> ai.datatower.analytics.core.f:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    java.lang.String TAG -> g
    long FLUSH_DELAY -> i
    ai.datatower.analytics.core.EventUploadManager$Companion Companion -> f
    java.util.Map mErrorInsertDataMap -> d
    int DELETE_ALL -> j
    int FLUSH_QUEUE_SPECIFY -> k
    int FLUSH_QUEUE -> h
    ai.datatower.analytics.core.EventUploadManager$Worker mWorker -> a
    ai.datatower.analytics.data.EventDataAdapter mDateAdapter -> b
    ai.datatower.analytics.core.EventUploadManager instancessss -> l
    int uploadErrorCount -> e
    ai.datatower.analytics.network.RemoteService mPoster -> c
    1:1:void ai.datatower.analytics.core.EventUploadManager$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:7:void <init>():43:48 -> <init>
    1:1:void access$checkFailTimes(ai.datatower.analytics.core.EventUploadManager):43:43 -> a
    2:2:void access$checkInsertResult(ai.datatower.analytics.core.EventUploadManager,int,java.lang.String,org.json.JSONObject,java.lang.String,kotlin.jvm.functions.Function2):43:43 -> a
    3:3:java.lang.Object access$deleteEventAfterReport(ai.datatower.analytics.core.EventUploadManager,java.lang.String,ai.datatower.analytics.data.EventDataAdapter,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):43:43 -> a
    4:4:ai.datatower.analytics.core.EventUploadManager access$getInstancessss$cp():43:43 -> a
    5:5:void access$setUploadErrorCount(ai.datatower.analytics.core.EventUploadManager,int):43:43 -> a
    6:6:java.lang.Object access$uploadData(ai.datatower.analytics.core.EventUploadManager,java.lang.String,kotlin.coroutines.Continuation):43:43 -> a
    7:7:kotlin.jvm.functions.Function1 access$uploadDataToNet(ai.datatower.analytics.core.EventUploadManager,java.lang.String):43:43 -> a
    8:11:void setUploadErrorCount(int):51:54 -> a
    12:12:void enqueueEventMessage$default(ai.datatower.analytics.core.EventUploadManager,java.lang.String,org.json.JSONObject,java.lang.String,kotlin.jvm.functions.Function2,int,java.lang.Object):58:58 -> a
    13:31:void enqueueEventMessage(java.lang.String,org.json.JSONObject,java.lang.String,kotlin.jvm.functions.Function2):64:82 -> a
    32:38:void enqueueEventMessage(java.lang.String,org.json.JSONObject,java.lang.String,kotlin.jvm.functions.Function2):80:86 -> a
    39:39:void enqueueEventMessage(java.lang.String,org.json.JSONObject,java.lang.String,kotlin.jvm.functions.Function2):85:85 -> a
    40:40:void checkInsertResult$default(ai.datatower.analytics.core.EventUploadManager,int,java.lang.String,org.json.JSONObject,java.lang.String,kotlin.jvm.functions.Function2,int,java.lang.Object):109:109 -> a
    41:49:void checkInsertResult(int,java.lang.String,org.json.JSONObject,java.lang.String,kotlin.jvm.functions.Function2):117:125 -> a
    50:50:void qualityReport(java.lang.String):130:130 -> a
    51:51:void flush$default(ai.datatower.analytics.core.EventUploadManager,long,int,java.lang.Object):139:139 -> a
    52:52:void flush(long):140:140 -> a
    53:53:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> a
    53:53:void flush(long):140 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    54:57:void flush(long):143:146 -> a
    58:192:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):192:326 -> a
    193:203:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):192:202 -> a
    204:204:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    204:204:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):202 -> a
    205:209:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):204:208 -> a
    210:210:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    210:210:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):208 -> a
    211:216:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):209:214 -> a
    217:217:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    217:217:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):214 -> a
    218:225:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):213:220 -> a
    226:226:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    226:226:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):220 -> a
    227:240:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):224:237 -> a
    241:597:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):236:592 -> a
    598:613:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):252:267 -> a
    614:614:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    614:614:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):267 -> a
    615:620:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):271:276 -> a
    621:655:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):274:308 -> a
    656:656:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    656:656:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):308 -> a
    657:666:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):310:319 -> a
    667:667:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    667:667:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):319 -> a
    668:669:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):322:323 -> a
    670:670:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    670:670:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):323 -> a
    671:671:java.lang.Object uploadData(java.lang.String,kotlin.coroutines.Continuation):326:326 -> a
    672:672:java.lang.Object uploadData$default(ai.datatower.analytics.core.EventUploadManager,java.lang.String,kotlin.coroutines.Continuation,int,java.lang.Object):192:192 -> a
    673:712:java.lang.Object deleteEventAfterReport(java.lang.String,ai.datatower.analytics.data.EventDataAdapter,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):392:431 -> a
    713:749:java.lang.Object deleteEventAfterReport(java.lang.String,ai.datatower.analytics.data.EventDataAdapter,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):392:428 -> a
    750:755:java.lang.Object deleteEventAfterReport(java.lang.String,ai.datatower.analytics.data.EventDataAdapter,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation):426:431 -> a
    756:756:java.lang.Object deleteEventAfterReport$default(ai.datatower.analytics.core.EventUploadManager,java.lang.String,ai.datatower.analytics.data.EventDataAdapter,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object):395:395 -> a
    757:757:java.lang.Object deleteEventAfterReport$default(ai.datatower.analytics.core.EventUploadManager,java.lang.String,ai.datatower.analytics.data.EventDataAdapter,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object):392:392 -> a
    758:761:ai.datatower.analytics.core.HandleCodeResult handleRemoteVerificationException(ai.datatower.analytics.network.RemoteVerificationException):434:437 -> a
    762:762:java.lang.String ai.datatower.analytics.network.RemoteVerificationException.getResponse():9:9 -> a
    762:762:ai.datatower.analytics.core.HandleCodeResult handleRemoteVerificationException(ai.datatower.analytics.network.RemoteVerificationException):437 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    763:769:ai.datatower.analytics.core.HandleCodeResult handleRemoteVerificationException(ai.datatower.analytics.network.RemoteVerificationException):437:443 -> a
    770:770:ai.datatower.analytics.core.HandleCodeResult handleRemoteVerificationException(ai.datatower.analytics.network.RemoteVerificationException):442:442 -> a
    771:778:ai.datatower.analytics.core.HandleCodeResult handleDifferentResponseCode(int,java.lang.String):455:462 -> a
    779:779:ai.datatower.analytics.core.HandleCodeResult handleDifferentResponseCode(int,java.lang.String):460:460 -> a
    1:1:ai.datatower.analytics.data.EventDataAdapter access$getMDateAdapter$p(ai.datatower.analytics.core.EventUploadManager):43:43 -> b
    2:5:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):335:338 -> b
    6:18:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):337:349 -> b
    19:19:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):347:347 -> b
    20:20:java.lang.String ai.datatower.analytics.core.HandleCodeResult.getErrorMessage():587:587 -> b
    20:20:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):351 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    21:21:kotlin.jvm.functions.Function1 ai.datatower.analytics.core.HandleCodeResult.getDeleteSelector():588:588 -> b
    21:21:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):352 -> b
    22:46:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):355:379 -> b
    47:47:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> b
    47:47:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):379 -> b
    48:49:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):381:382 -> b
    50:50:void ai.datatower.analytics.utils.LogUtils.d(java.lang.String,java.lang.Object[]):110:110 -> b
    50:50:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):382 -> b
    51:51:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):383:383 -> b
    52:55:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):376:379 -> b
    56:56:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> b
    56:56:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):379 -> b
    57:59:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):381:383 -> b
    60:65:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):374:379 -> b
    66:66:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> b
    66:66:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):379 -> b
    67:69:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):381:383 -> b
    70:77:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):372:379 -> b
    78:78:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> b
    78:78:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):379 -> b
    79:81:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):381:383 -> b
    82:92:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):369:379 -> b
    93:93:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> b
    93:93:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):379 -> b
    94:96:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):381:383 -> b
    97:109:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):367:379 -> b
    110:110:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> b
    110:110:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):379 -> b
    111:113:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):381:383 -> b
    114:114:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):360:360 -> b
    115:115:java.lang.String ai.datatower.analytics.core.HandleCodeResult.getErrorMessage():587:587 -> b
    115:115:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):361 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    116:116:kotlin.jvm.functions.Function1 ai.datatower.analytics.core.HandleCodeResult.getDeleteSelector():588:588 -> b
    116:116:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):362 -> b
    117:117:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):379:379 -> b
    118:118:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> b
    118:118:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):379 -> b
    119:121:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):381:383 -> b
    122:122:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):379:379 -> b
    123:123:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> b
    123:123:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):379 -> b
    124:126:kotlin.jvm.functions.Function1 uploadDataToNet(java.lang.String):381:383 -> b
    127:129:void checkFailTimes():466:468 -> b
    1:1:ai.datatower.analytics.core.EventUploadManager$Worker access$getMWorker$p(ai.datatower.analytics.core.EventUploadManager):43:43 -> c
    2:2:void deleteAll():154:154 -> c
    1:1:int access$getUploadErrorCount$p(ai.datatower.analytics.core.EventUploadManager):43:43 -> d
    2:2:boolean enableUploadData():161:161 -> d
    3:3:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> d
    3:3:boolean enableUploadData():161 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:boolean enableUploadData():166:166 -> d
    5:5:java.util.concurrent.atomic.AtomicBoolean ai.datatower.analytics.config.AbstractAnalyticsConfig.getMManualUploadSwitch():76:76 -> d
    5:5:boolean enableUploadData():166 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:19:boolean enableUploadData():166:179 -> d
    20:20:boolean enableUploadData():177:177 -> d
    1:1:void access$setInstancessss$cp(ai.datatower.analytics.core.EventUploadManager):43:43 -> e
    2:13:void enqueueErrorInsertEventMessage():94:105 -> e
    1:5:java.lang.String getEventUploadUrl():476:480 -> f
ai.datatower.analytics.core.EventUploadManager$Companion -> ai.datatower.analytics.core.f$a:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():566:566 -> <init>
    1:2:ai.datatower.analytics.core.EventUploadManager getInstance():577:578 -> a
    3:3:void ai.datatower.analytics.core.EventUploadManager.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    3:3:ai.datatower.analytics.core.EventUploadManager getInstance():578 -> a
    4:4:void ai.datatower.analytics.core.EventUploadManager.access$setInstancessss$cp(ai.datatower.analytics.core.EventUploadManager):43:43 -> a
    4:4:ai.datatower.analytics.core.EventUploadManager getInstance():578 -> a
    5:5:ai.datatower.analytics.core.EventUploadManager ai.datatower.analytics.core.EventUploadManager.access$getInstancessss$cp():43:43 -> a
    5:5:ai.datatower.analytics.core.EventUploadManager getInstance():580 -> a
ai.datatower.analytics.core.EventUploadManager$Worker -> ai.datatower.analytics.core.f$b:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    ai.datatower.analytics.core.EventUploadManager this$0 -> c
    android.os.Handler mHandler -> b
    java.lang.Object mHandlerLock -> a
    1:80:void <init>(ai.datatower.analytics.core.EventUploadManager):483:562 -> <init>
    1:5:void runMessage(android.os.Message):487:491 -> a
    6:6:void runMessage(android.os.Message):489:489 -> a
    7:7:void runMessage(android.os.Message):487:487 -> a
    8:12:void runMessageOnce(android.os.Message,long):497:501 -> a
    13:22:void runMessageOnce(android.os.Message,long):499:508 -> a
    23:23:void runMessageOnce(android.os.Message,long):497:497 -> a
ai.datatower.analytics.core.EventUploadManager$Worker$AnalyticsMessageHandler -> ai.datatower.analytics.core.f$b$a:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    ai.datatower.analytics.core.EventUploadManager$Worker this$0 -> a
    1:2:void <init>(ai.datatower.analytics.core.EventUploadManager$Worker,android.os.Looper):511:512 -> <init>
    1:24:void handleMessage(android.os.Message):515:538 -> handleMessage
    25:25:void handleMessage(android.os.Message):536:536 -> handleMessage
    26:27:void handleMessage(android.os.Message):531:532 -> handleMessage
    28:30:void handleMessage(android.os.Message):524:526 -> handleMessage
    31:59:void handleMessage(android.os.Message):517:545 -> handleMessage
    60:67:void handleMessage(android.os.Message):543:550 -> handleMessage
    68:68:void handleMessage(android.os.Message):547:547 -> handleMessage
ai.datatower.analytics.core.EventUploadManager$Worker$AnalyticsMessageHandler$handleMessage$1 -> ai.datatower.analytics.core.f$b$a$a:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    ai.datatower.analytics.core.EventUploadManager this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):518:518 -> invokeSuspend
ai.datatower.analytics.core.EventUploadManager$Worker$AnalyticsMessageHandler$handleMessage$2 -> ai.datatower.analytics.core.f$b$a$b:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    ai.datatower.analytics.core.EventUploadManager this$0 -> b
    java.lang.String $eventData -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):532:532 -> invokeSuspend
ai.datatower.analytics.core.EventUploadManager$deleteEventAfterReport$1 -> ai.datatower.analytics.core.f$c:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    ai.datatower.analytics.core.EventUploadManager this$0 -> c
    java.lang.Object result -> b
    int label -> d
    java.lang.Object L$0 -> a
ai.datatower.analytics.core.EventUploadManager$deleteEventAfterReport$2 -> ai.datatower.analytics.core.f$d:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    ai.datatower.analytics.core.EventUploadManager$deleteEventAfterReport$2 INSTANCE -> a
    1:1:java.lang.Boolean invoke(org.json.JSONObject):395:395 -> a
    1:1:java.lang.Object invoke(java.lang.Object):395:395 -> invoke
ai.datatower.analytics.core.EventUploadManager$deleteEventAfterReport$4 -> ai.datatower.analytics.core.f$e:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    java.util.List $allEvents -> c
    ai.datatower.analytics.data.EventDataAdapter $mDateAdapter -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):418:419 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):418:419 -> invokeSuspend
ai.datatower.analytics.core.EventUploadManager$enqueueEventMessage$1 -> ai.datatower.analytics.core.f$f:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    ai.datatower.analytics.core.EventUploadManager this$0 -> c
    kotlin.jvm.functions.Function2 $insertHandler -> g
    java.lang.String $eventSyn -> f
    int I$0 -> b
    int label -> a
    java.lang.String $name -> d
    org.json.JSONObject $eventJson -> e
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,int,kotlin.coroutines.Continuation):0:0 -> a
    2:6:void invokeSuspend$lambda-1(ai.datatower.analytics.core.EventUploadManager,int,java.lang.String,org.json.JSONObject,java.lang.String,kotlin.jvm.functions.Function2):69:73 -> a
    7:7:ai.datatower.analytics.core.EventUploadManager$Worker ai.datatower.analytics.core.EventUploadManager.access$getMWorker$p(ai.datatower.analytics.core.EventUploadManager):43:43 -> a
    7:7:void invokeSuspend$lambda-1(ai.datatower.analytics.core.EventUploadManager,int,java.lang.String,org.json.JSONObject,java.lang.String,kotlin.jvm.functions.Function2):74 -> a
    8:8:void invokeSuspend$lambda-1(ai.datatower.analytics.core.EventUploadManager,int,java.lang.String,org.json.JSONObject,java.lang.String,kotlin.jvm.functions.Function2):74:74 -> a
    1:11:java.lang.Object invokeSuspend(java.lang.Object):67:77 -> invokeSuspend
ai.datatower.analytics.core.EventUploadManager$handleDifferentResponseCode$1 -> ai.datatower.analytics.core.f$g:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    java.lang.String $appId -> a
    1:1:java.lang.Boolean invoke(org.json.JSONObject):458:458 -> a
    1:1:java.lang.Object invoke(java.lang.Object):458:458 -> invoke
ai.datatower.analytics.core.EventUploadManager$uploadData$1 -> ai.datatower.analytics.core.f$h:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    ai.datatower.analytics.core.EventUploadManager this$0 -> c
    java.lang.Object result -> b
    int label -> d
    java.lang.Object L$0 -> a
ai.datatower.analytics.core.EventUploadManager$uploadData$2 -> ai.datatower.analytics.core.f$i:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    ai.datatower.analytics.core.EventUploadManager this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):209:210 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):209:210 -> invokeSuspend
ai.datatower.analytics.core.EventUploadManager$uploadData$2$1 -> ai.datatower.analytics.core.f$i$a:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    ai.datatower.analytics.core.EventUploadManager this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):210:211 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):210:211 -> invokeSuspend
ai.datatower.analytics.core.EventUploadManager$uploadData$5$1 -> ai.datatower.analytics.core.f$j:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    ai.datatower.analytics.core.EventUploadManager this$0 -> c
    kotlin.jvm.internal.Ref$ObjectRef $uploadInfo -> a
    kotlin.jvm.internal.Ref$ObjectRef $deleteMethod -> b
    1:7:void invoke(java.lang.String):288:294 -> a
    8:8:void ai.datatower.analytics.core.EventUploadManager.access$setUploadErrorCount(ai.datatower.analytics.core.EventUploadManager,int):43:43 -> a
    8:8:void invoke(java.lang.String):294 -> a
    9:9:void invoke(java.lang.String):295:295 -> a
    10:10:void ai.datatower.analytics.core.EventUploadManager.access$checkFailTimes(ai.datatower.analytics.core.EventUploadManager):43:43 -> a
    10:10:void invoke(java.lang.String):295 -> a
    11:13:void invoke(java.lang.String):297:299 -> a
    14:14:void invoke(java.lang.String):297:297 -> a
    1:1:java.lang.Object invoke(java.lang.Object):286:286 -> invoke
ai.datatower.analytics.core.EventUploadManager$uploadDataToNet$1 -> ai.datatower.analytics.core.f$k:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    ai.datatower.analytics.core.EventUploadManager$uploadDataToNet$1 INSTANCE -> a
    1:1:java.lang.Boolean invoke(org.json.JSONObject):344:344 -> a
    1:1:java.lang.Object invoke(java.lang.Object):344:344 -> invoke
ai.datatower.analytics.core.HandleCodeResult -> ai.datatower.analytics.core.g:
# {"id":"sourceFile","fileName":"EventUploadManager.kt"}
    java.lang.String errorMessage -> a
    kotlin.jvm.functions.Function1 deleteSelector -> b
    1:1:void <init>():0:0 -> <init>
    2:4:void <init>(java.lang.String,kotlin.jvm.functions.Function1):586:588 -> <init>
    5:5:void <init>(java.lang.String,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker):586:586 -> <init>
    1:1:java.lang.String component1():0:0 -> a
    2:2:ai.datatower.analytics.core.HandleCodeResult copy(java.lang.String,kotlin.jvm.functions.Function1):0:0 -> a
    3:3:ai.datatower.analytics.core.HandleCodeResult copy(java.lang.String,kotlin.jvm.functions.Function1):0:0 -> a
    3:3:ai.datatower.analytics.core.HandleCodeResult copy$default(ai.datatower.analytics.core.HandleCodeResult,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object):0 -> a
    kotlin.jvm.functions.Function1 component2() -> b
    1:1:kotlin.jvm.functions.Function1 getDeleteSelector():588:588 -> c
    1:1:java.lang.String getErrorMessage():587:587 -> d
ai.datatower.analytics.core.PresetEventManager -> ai.datatower.analytics.core.h:
# {"id":"sourceFile","fileName":"PresetEventManager.kt"}
    kotlin.Lazy instance$delegate -> d
    java.util.concurrent.atomic.AtomicBoolean isAppInstallTrackRunning -> b
    ai.datatower.analytics.core.PresetEventManager$Companion Companion -> c
    ai.datatower.analytics.data.EventDataAdapter mDataAdapter -> a
    1:1:void ai.datatower.analytics.core.PresetEventManager$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:26:void <clinit>():0:24 -> <clinit>
    1:10:void <init>():22:31 -> <init>
    1:1:kotlin.Lazy access$getInstance$delegate$cp():22:22 -> a
    2:2:java.util.concurrent.atomic.AtomicBoolean access$isAppInstallTrackRunning$p(ai.datatower.analytics.core.PresetEventManager):22:22 -> a
    3:3:void access$startAppAttribute(ai.datatower.analytics.core.PresetEventManager,android.content.Context):22:22 -> a
    4:4:void access$trackAppInstallEvent(ai.datatower.analytics.core.PresetEventManager,com.android.installreferrer.api.ReferrerDetails,java.lang.String):22:22 -> a
    5:5:void checkAppInstall(android.content.Context):51:51 -> a
    6:6:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> a
    6:6:void checkAppInstall(android.content.Context):51 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void checkAppInstall(android.content.Context):55:55 -> a
    8:23:void trackAppInstallEvent(com.android.installreferrer.api.ReferrerDetails,java.lang.String):241:256 -> a
    24:24:java.lang.String ai.datatower.analytics.config.AbstractAnalyticsConfig.getMChannel():71:71 -> a
    24:24:void trackAppInstallEvent(com.android.installreferrer.api.ReferrerDetails,java.lang.String):256 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    25:25:void trackAppInstallEvent(com.android.installreferrer.api.ReferrerDetails,java.lang.String):257:257 -> a
    26:26:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> a
    26:26:void trackAppInstallEvent(com.android.installreferrer.api.ReferrerDetails,java.lang.String):257 -> a
    27:28:void trackAppInstallEvent(com.android.installreferrer.api.ReferrerDetails,java.lang.String):259:260 -> a
    29:35:void trackAppInstallEvent(com.android.installreferrer.api.ReferrerDetails,java.lang.String):258:264 -> a
    36:42:void trackAppInstallEvent(com.android.installreferrer.api.ReferrerDetails,java.lang.String):262:268 -> a
    43:49:void trackAppInstallEvent(com.android.installreferrer.api.ReferrerDetails,java.lang.String):266:272 -> a
    50:56:void trackAppInstallEvent(com.android.installreferrer.api.ReferrerDetails,java.lang.String):270:276 -> a
    57:63:void trackAppInstallEvent(com.android.installreferrer.api.ReferrerDetails,java.lang.String):274:280 -> a
    64:80:void trackAppInstallEvent(com.android.installreferrer.api.ReferrerDetails,java.lang.String):278:294 -> a
    81:81:void trackAppInstallEvent(com.android.installreferrer.api.ReferrerDetails,java.lang.String):252:252 -> a
    1:3:void trackPresetEvent$lambda-0(ai.datatower.analytics.core.PresetEventManager,android.content.Context):44:46 -> b
    4:5:void getAppAttribute(android.content.Context):188:189 -> b
    1:1:void setActiveUserProperties(android.content.Context):117:117 -> c
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> c
    2:2:void setActiveUserProperties(android.content.Context):117 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:6:void setActiveUserProperties(android.content.Context):120:123 -> c
    7:7:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getUserActive():62:62 -> c
    7:7:void setActiveUserProperties(android.content.Context):123 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:192:void setActiveUserProperties(android.content.Context):122:306 -> c
    193:198:void setActiveUserProperties(android.content.Context):153:158 -> c
    199:209:void setActiveUserProperties(android.content.Context):151:161 -> c
    210:210:void setActiveUserProperties(android.content.Context):150:150 -> c
    1:1:void setLatestUserProperties(android.content.Context):63:63 -> d
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> d
    2:2:void setLatestUserProperties(android.content.Context):63 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:44:void setLatestUserProperties(android.content.Context):66:107 -> d
    45:45:void setLatestUserProperties(android.content.Context):103:103 -> d
    1:6:void startAppAttribute(android.content.Context):173:178 -> e
    7:7:void startAppAttribute(android.content.Context):176:176 -> e
    1:5:void trackPresetEvent(android.content.Context):39:43 -> f
ai.datatower.analytics.core.PresetEventManager$Companion -> ai.datatower.analytics.core.h$b:
# {"id":"sourceFile","fileName":"PresetEventManager.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():23:23 -> <init>
    1:1:ai.datatower.analytics.core.PresetEventManager getInstance():24:24 -> a
ai.datatower.analytics.core.PresetEventManager$Companion$instance$2 -> ai.datatower.analytics.core.h$a:
# {"id":"sourceFile","fileName":"PresetEventManager.kt"}
    ai.datatower.analytics.core.PresetEventManager$Companion$instance$2 INSTANCE -> a
    1:1:ai.datatower.analytics.core.PresetEventManager invoke():25:25 -> a
    1:1:ai.datatower.analytics.core.PresetEventManager invoke():25:25 -> invoke
    1:1:java.lang.Object invoke():24 -> invoke
ai.datatower.analytics.core.PresetEventManager$checkAppInstall$1 -> ai.datatower.analytics.core.h$c:
# {"id":"sourceFile","fileName":"PresetEventManager.kt"}
    ai.datatower.analytics.core.PresetEventManager this$0 -> c
    boolean Z$0 -> b
    android.content.Context $context -> d
    int label -> a
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,boolean,kotlin.coroutines.Continuation):0:0 -> a
    2:2:void invokeSuspend$lambda-0(boolean,ai.datatower.analytics.core.PresetEventManager,android.content.Context):57:57 -> a
    1:5:java.lang.Object invokeSuspend(java.lang.Object):55:59 -> invokeSuspend
ai.datatower.analytics.core.PresetEventManager$getAppAttribute$1 -> ai.datatower.analytics.core.h$d:
# {"id":"sourceFile","fileName":"PresetEventManager.kt"}
    ai.datatower.analytics.core.PresetEventManager this$0 -> a
    com.android.installreferrer.api.InstallReferrerClient $referrerClient -> b
    1:1:void <init>(ai.datatower.analytics.core.PresetEventManager,com.android.installreferrer.api.InstallReferrerClient):189:189 -> <init>
    1:5:void onInstallReferrerSetupFinished$lambda-0(int,ai.datatower.analytics.core.PresetEventManager,com.android.installreferrer.api.InstallReferrerClient):197:201 -> a
    6:16:void onInstallReferrerSetupFinished$lambda-0(int,ai.datatower.analytics.core.PresetEventManager,com.android.installreferrer.api.InstallReferrerClient):199:209 -> a
    17:17:void onInstallReferrerSetupFinished$lambda-0(int,ai.datatower.analytics.core.PresetEventManager,com.android.installreferrer.api.InstallReferrerClient):207:207 -> a
    18:19:void onInstallReferrerServiceDisconnected$lambda-1(ai.datatower.analytics.core.PresetEventManager,com.android.installreferrer.api.InstallReferrerClient):221:222 -> a
    20:28:void onInstallReferrerServiceDisconnected$lambda-1(ai.datatower.analytics.core.PresetEventManager,com.android.installreferrer.api.InstallReferrerClient):220:228 -> a
    29:29:void onInstallReferrerServiceDisconnected$lambda-1(ai.datatower.analytics.core.PresetEventManager,com.android.installreferrer.api.InstallReferrerClient):226:226 -> a
    1:1:void onInstallReferrerServiceDisconnected():218:218 -> onInstallReferrerServiceDisconnected
    1:1:void onInstallReferrerSetupFinished(int):192:192 -> onInstallReferrerSetupFinished
ai.datatower.analytics.core.PresetEventManager$setActiveUserProperties$1 -> ai.datatower.analytics.core.h$e:
# {"id":"sourceFile","fileName":"PresetEventManager.kt"}
    org.json.JSONObject $activeUserProperties -> c
    long $happenTime -> e
    ai.datatower.analytics.data.EventDataAdapter $eda -> d
    java.lang.Object L$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,java.lang.String,kotlin.coroutines.Continuation) -> a
    1:179:java.lang.Object invokeSuspend(java.lang.Object):128:306 -> invokeSuspend
    180:358:java.lang.Object invokeSuspend(java.lang.Object):130:308 -> invokeSuspend
    359:370:java.lang.Object invokeSuspend(java.lang.Object):136:147 -> invokeSuspend
    371:377:java.lang.Object invokeSuspend(java.lang.Object):144:150 -> invokeSuspend
ai.datatower.analytics.core.PresetEventManager$setLatestUserProperties$1 -> ai.datatower.analytics.core.h$f:
# {"id":"sourceFile","fileName":"PresetEventManager.kt"}
    long $happenTime -> e
    java.lang.Object L$0 -> b
    ai.datatower.analytics.data.EventDataAdapter $eda -> c
    org.json.JSONObject $latestUserProps -> d
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,java.lang.String,kotlin.coroutines.Continuation) -> a
    1:9:java.lang.Object invokeSuspend(java.lang.Object):71:79 -> invokeSuspend
    10:240:java.lang.Object invokeSuspend(java.lang.Object):76:306 -> invokeSuspend
    241:253:java.lang.Object invokeSuspend(java.lang.Object):86:98 -> invokeSuspend
    254:261:java.lang.Object invokeSuspend(java.lang.Object):96:103 -> invokeSuspend
ai.datatower.analytics.core.PresetEventManager$trackAppInstallEvent$2 -> ai.datatower.analytics.core.h$g:
# {"id":"sourceFile","fileName":"PresetEventManager.kt"}
    ai.datatower.analytics.core.PresetEventManager this$0 -> a
    1:3:void invoke(int,java.lang.String):297:299 -> a
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):252:252 -> invoke
ai.datatower.analytics.core.PropertyManager -> ai.datatower.analytics.core.i:
# {"id":"sourceFile","fileName":"PropertyManager.kt"}
    java.util.concurrent.ConcurrentLinkedQueue dtidCallbacks -> e
    kotlin.Lazy instance$delegate -> g
    ai.datatower.analytics.core.PropertyManager$Companion Companion -> f
    long sessionEndTime -> d
    ai.datatower.analytics.data.EventDataAdapter dataAdapter -> a
    long sessionStartTime -> c
    boolean limitAdTrackingEnabled -> b
    1:1:void ai.datatower.analytics.core.PropertyManager$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:40:void <clinit>():0:38 -> <clinit>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:21:void <init>():36:55 -> <init>
    1:1:ai.datatower.analytics.data.EventDataAdapter access$getDataAdapter$p(ai.datatower.analytics.core.PropertyManager):36:36 -> a
    2:2:kotlin.Lazy access$getInstance$delegate$cp():36:36 -> a
    3:3:java.lang.Object access$initEventInfo(ai.datatower.analytics.core.PropertyManager,android.content.Context,kotlin.coroutines.Continuation):36:36 -> a
    4:4:void access$removeCommonProperty(ai.datatower.analytics.core.PropertyManager,java.lang.String):36:36 -> a
    5:22:java.lang.Object init(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig,kotlin.coroutines.Continuation):58:75 -> a
    23:28:java.lang.Object init(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig,kotlin.coroutines.Continuation):58:63 -> a
    29:29:void initDisableList(android.content.Context):193:193 -> a
    29:29:java.lang.Object init(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig,kotlin.coroutines.Continuation):64 -> a
    30:33:java.lang.Object init(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig,kotlin.coroutines.Continuation):65:68 -> a
    34:34:void initCommonProperties(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):219:219 -> a
    34:34:java.lang.Object init(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig,kotlin.coroutines.Continuation):68 -> a
    35:41:java.lang.Object init(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig,kotlin.coroutines.Continuation):69:75 -> a
    42:42:void getDataTowerId(android.content.Context):78:78 -> a
    43:43:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    43:43:void getDataTowerId(android.content.Context):78 -> a
    44:44:void getDataTowerId(android.content.Context):81:81 -> a
    45:53:void getDataTowerId$lambda-1(ai.datatower.analytics.core.PropertyManager,android.content.Context):83:91 -> a
    54:54:void getDataTowerId(ai.datatower.analytics.OnDataTowerIdListener):96:96 -> a
    55:55:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    55:55:void getDataTowerId(ai.datatower.analytics.OnDataTowerIdListener):96 -> a
    56:56:void getDataTowerId(ai.datatower.analytics.OnDataTowerIdListener):98:98 -> a
    57:64:void getDataTowerId$lambda-3(ai.datatower.analytics.core.PropertyManager,ai.datatower.analytics.OnDataTowerIdListener):99:106 -> a
    65:65:void getDataTowerId$lambda-3$lambda-2(ai.datatower.analytics.OnDataTowerIdListener,ai.datatower.analytics.core.PropertyManager):101:101 -> a
    66:66:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    66:66:void getDataTowerId$lambda-3$lambda-2(ai.datatower.analytics.OnDataTowerIdListener,ai.datatower.analytics.core.PropertyManager):101 -> a
    67:67:void getDataTowerId$lambda-3$lambda-2(ai.datatower.analytics.OnDataTowerIdListener,ai.datatower.analytics.core.PropertyManager):103:103 -> a
    68:84:void initDTIdOrUpdateOriginalId(android.content.Context,boolean):125:141 -> a
    85:100:void initDTIdOrUpdateOriginalId(android.content.Context,boolean):136:151 -> a
    101:101:void initDTIdOrUpdateOriginalId(android.content.Context,boolean):149:149 -> a
    102:105:java.lang.String initDTId(java.lang.String):162:165 -> a
    106:106:java.lang.String ai.datatower.analytics.config.AbstractAnalyticsConfig.getMAppId():49:49 -> a
    106:106:java.lang.String initDTId(java.lang.String):165 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    107:114:java.lang.String initDTId(java.lang.String):166:173 -> a
    115:120:java.lang.String initDTId(java.lang.String):171:176 -> a
    121:121:java.lang.Object initEventInfo(android.content.Context,kotlin.coroutines.Continuation):202:202 -> a
    122:122:void updateEventInfo(java.lang.String,java.lang.String):206:206 -> a
    123:123:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> a
    123:123:void updateEventInfo(java.lang.String,java.lang.String):206 -> a
    124:124:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getMeta():60:60 -> a
    124:124:void updateEventInfo(java.lang.String,java.lang.String):207 -> a
    125:125:void updateEventInfo(java.lang.String,java.lang.String):207:207 -> a
    126:126:void initCommonProperties(android.content.Context,ai.datatower.analytics.config.AnalyticsConfig):219:219 -> a
    127:127:void updateCommonProperties(java.lang.String,java.lang.Object):224:224 -> a
    128:128:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> a
    128:128:void updateCommonProperties(java.lang.String,java.lang.Object):224 -> a
    129:129:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getCommon():61:61 -> a
    129:129:void updateCommonProperties(java.lang.String,java.lang.Object):224 -> a
    130:130:void updateCommonProperties(java.lang.String,java.lang.Object):224:224 -> a
    131:139:void updateSdkVersionProperty$datatowerai_core_publicRelease(ai.datatower.analytics.utils.PresetPropManager$PPMap):267:275 -> a
    140:140:void updateIsForeground$default(ai.datatower.analytics.core.PropertyManager,boolean,boolean,java.lang.String,int,java.lang.Object):281:281 -> a
    141:142:void updateIsForeground(boolean,boolean,java.lang.String):282:283 -> a
    143:143:void updateIsForeground$lambda-11(ai.datatower.analytics.core.PropertyManager,boolean,long,boolean,java.lang.String):286:286 -> a
    144:154:void updateIsForeground$lambda-11(ai.datatower.analytics.core.PropertyManager,boolean,long,boolean,java.lang.String):284:294 -> a
    155:224:void updateIsForeground$lambda-11(ai.datatower.analytics.core.PropertyManager,boolean,long,boolean,java.lang.String):292:361 -> a
    225:225:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> a
    225:225:void updateIsForeground$lambda-11(ai.datatower.analytics.core.PropertyManager,boolean,long,boolean,java.lang.String):361 -> a
    226:230:void updateIsForeground$lambda-11(ai.datatower.analytics.core.PropertyManager,boolean,long,boolean,java.lang.String):362:366 -> a
    231:231:void updateIsForeground$lambda-11(ai.datatower.analytics.core.PropertyManager,boolean,long,boolean,java.lang.String):354:354 -> a
    232:232:void updateNetworkType(ai.datatower.analytics.utils.NetworkUtil$NetworkType):455:455 -> a
    233:233:void updateNetworkType(ai.datatower.analytics.utils.NetworkUtil$NetworkType):453:453 -> a
    234:235:void updateACID$lambda-19(java.lang.String,ai.datatower.analytics.core.PropertyManager):462:463 -> a
    236:241:void updateFireBaseInstanceId$lambda-22(long,java.lang.String):481:486 -> a
    242:242:void updateFireBaseInstanceId$lambda-22(long,java.lang.String):481:481 -> a
    1:1:long access$getSessionEndTime$p(ai.datatower.analytics.core.PropertyManager):36:36 -> b
    2:2:void onDataTowerIdCallback(java.lang.String):112:112 -> b
    3:3:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> b
    3:3:void onDataTowerIdCallback(java.lang.String):112 -> b
    4:4:void onDataTowerIdCallback(java.lang.String):114:114 -> b
    5:457:void onDataTowerIdCallback$lambda-5(ai.datatower.analytics.core.PropertyManager,java.lang.String):115:567 -> b
    458:460:void onDataTowerIdCallback$lambda-5(ai.datatower.analytics.core.PropertyManager,java.lang.String):116:118 -> b
    461:465:void initDTIdWithAndroidId(android.content.Context,boolean):181:185 -> b
    466:466:void initDisableList(android.content.Context):193:193 -> b
    467:467:java.lang.String getACID():468:468 -> b
    1:1:long access$getSessionStartTime$p(ai.datatower.analytics.core.PropertyManager):36:36 -> c
    2:2:void removeCommonProperty(java.lang.String):228:228 -> c
    3:3:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> c
    3:3:void removeCommonProperty(java.lang.String):228 -> c
    4:4:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getCommon():61:61 -> c
    4:4:void removeCommonProperty(java.lang.String):228 -> c
    5:5:void removeCommonProperty(java.lang.String):228:228 -> c
    6:6:java.util.Map getActiveProperties():233:233 -> c
    7:7:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> c
    7:7:java.util.Map getActiveProperties():233 -> c
    8:8:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getUserActive():62:62 -> c
    8:8:java.util.Map getActiveProperties():233 -> c
    9:9:java.util.Map ai.datatower.analytics.utils.PresetPropManager$PPMap.getMap():88:88 -> c
    9:9:java.util.Map getActiveProperties():233 -> c
    10:10:java.util.Map getActiveProperties():233:233 -> c
    11:12:void registerNetworkStatusChangedListener(android.content.Context):250:251 -> c
    13:13:void ai.datatower.analytics.utils.NetworkUtil.registerNetworkStatusChangedListener(android.app.Application,ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener):301:301 -> c
    13:13:void registerNetworkStatusChangedListener(android.content.Context):249 -> c
    14:14:void registerNetworkStatusChangedListener(android.content.Context):250:250 -> c
    15:16:void updateDTID$lambda-13(ai.datatower.analytics.core.PropertyManager,java.lang.String):391:392 -> c
    1:6:java.lang.String getAndroidId():436:441 -> d
    7:8:void updateACID(java.lang.String):460:461 -> d
    1:1:java.util.Map getCommonProperties():231:231 -> e
    2:2:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> e
    2:2:java.util.Map getCommonProperties():231 -> e
    3:3:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getCommon():61:61 -> e
    3:3:java.util.Map getCommonProperties():231 -> e
    4:4:java.util.Map ai.datatower.analytics.utils.PresetPropManager$PPMap.getMap():88:88 -> e
    4:4:java.util.Map getCommonProperties():231 -> e
    5:5:java.util.Map getCommonProperties():231:231 -> e
    6:19:void updateAFID(java.lang.String):492:505 -> e
    20:20:void updateAFID(java.lang.String):500:500 -> e
    1:6:java.lang.String getDTID():378:383 -> f
    7:7:void updateAFID$lambda-23(java.lang.String):497:497 -> f
    1:1:java.util.Map getEventInfo():211:211 -> g
    2:2:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> g
    2:2:java.util.Map getEventInfo():211 -> g
    3:3:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getMeta():60:60 -> g
    3:3:java.util.Map getEventInfo():211 -> g
    4:4:java.util.Map ai.datatower.analytics.utils.PresetPropManager$PPMap.getMap():88:88 -> g
    4:4:java.util.Map getEventInfo():211 -> g
    5:5:java.util.Map getEventInfo():211:211 -> g
    6:19:void updateAdjustId(java.lang.String):528:541 -> g
    20:20:void updateAdjustId(java.lang.String):536:536 -> g
    1:6:java.lang.String getGAID():399:404 -> h
    7:7:void updateAdjustId$lambda-27(java.lang.String):533:533 -> h
    1:6:java.lang.String getSDKType():417:422 -> i
    7:11:void updateAndroidId(java.lang.String):445:449 -> i
    12:12:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> i
    12:12:void updateAndroidId(java.lang.String):449 -> i
    13:13:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getUserActive():62:62 -> i
    13:13:void updateAndroidId(java.lang.String):449 -> i
    14:14:void updateAndroidId(java.lang.String):449:449 -> i
    1:4:void updateDTID(java.lang.String):387:390 -> j
    5:10:java.lang.String getSDKVersion():408:413 -> j
    1:4:void registerFPSListener():239:242 -> k
    5:13:void updateFireBaseInstanceId(java.lang.String):472:480 -> k
    1:1:void updateFireBaseInstanceId$lambda-20(java.lang.String):477:477 -> l
    1:7:void updateGAID(java.lang.String):426:432 -> m
    8:8:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> m
    8:8:void updateGAID(java.lang.String):432 -> m
    9:9:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getUserActive():62:62 -> m
    9:9:void updateGAID(java.lang.String):432 -> m
    10:10:void updateGAID(java.lang.String):432:432 -> m
    1:14:void updateKOID(java.lang.String):510:523 -> n
    15:15:void updateKOID(java.lang.String):518:518 -> n
    1:1:void updateKOID$lambda-25(java.lang.String):515:515 -> o
    1:14:void updateTenjinId(java.lang.String):546:559 -> p
    15:15:void updateTenjinId(java.lang.String):554:554 -> p
    1:1:void updateTenjinId$lambda-29(java.lang.String):551:551 -> q
ai.datatower.analytics.core.PropertyManager$Companion -> ai.datatower.analytics.core.i$b:
# {"id":"sourceFile","fileName":"PropertyManager.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():37:37 -> <init>
    1:1:ai.datatower.analytics.core.PropertyManager getInstance():38:38 -> a
ai.datatower.analytics.core.PropertyManager$Companion$instance$2 -> ai.datatower.analytics.core.i$a:
# {"id":"sourceFile","fileName":"PropertyManager.kt"}
    ai.datatower.analytics.core.PropertyManager$Companion$instance$2 INSTANCE -> a
    1:1:ai.datatower.analytics.core.PropertyManager invoke():39:39 -> a
    2:2:void ai.datatower.analytics.core.PropertyManager.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    2:2:ai.datatower.analytics.core.PropertyManager invoke():39 -> a
    1:1:ai.datatower.analytics.core.PropertyManager invoke():39:39 -> invoke
    1:1:java.lang.Object invoke():38 -> invoke
    2:2:void ai.datatower.analytics.core.PropertyManager.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> invoke
    2:2:ai.datatower.analytics.core.PropertyManager invoke():39 -> invoke
    2:2:java.lang.Object invoke():38 -> invoke
ai.datatower.analytics.core.PropertyManager$getDataTowerId$1$1 -> ai.datatower.analytics.core.i$c:
# {"id":"sourceFile","fileName":"PropertyManager.kt"}
    ai.datatower.analytics.core.PropertyManager this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):83:83 -> invokeSuspend
    2:2:java.lang.Object ai.datatower.analytics.taskqueue.AsyncTaskRescheduled.await(kotlin.coroutines.Continuation):55:55 -> invokeSuspend
    2:2:java.lang.Object invokeSuspend(java.lang.Object):83 -> invokeSuspend
    3:3:java.lang.Object invokeSuspend(java.lang.Object):83:83 -> invokeSuspend
ai.datatower.analytics.core.PropertyManager$init$1 -> ai.datatower.analytics.core.i$d:
# {"id":"sourceFile","fileName":"PropertyManager.kt"}
    ai.datatower.analytics.core.PropertyManager this$0 -> e
    java.lang.Object result -> d
    java.lang.Object L$1 -> b
    int label -> f
    java.lang.Object L$2 -> c
    java.lang.Object L$0 -> a
ai.datatower.analytics.core.PropertyManager$registerNetworkStatusChangedListener$1 -> ai.datatower.analytics.core.i$e:
# {"id":"sourceFile","fileName":"PropertyManager.kt"}
    ai.datatower.analytics.core.PropertyManager this$0 -> a
    1:1:void <init>(ai.datatower.analytics.core.PropertyManager):251:251 -> <init>
    1:3:void onConnected(ai.datatower.analytics.utils.NetworkUtil$NetworkType):257:259 -> onConnected
    1:1:void onDisconnected():253:253 -> onDisconnected
ai.datatower.analytics.core.PropertyManager$updateIsForeground$1$1 -> ai.datatower.analytics.core.i$f:
# {"id":"sourceFile","fileName":"PropertyManager.kt"}
    java.lang.String $startReason -> f
    ai.datatower.analytics.core.PropertyManager this$0 -> g
    java.lang.Object L$0 -> b
    boolean $resumeFromBackground -> e
    long $happenTime -> d
    boolean Z$0 -> c
    int label -> a
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,boolean,kotlin.coroutines.Continuation):0:0 -> a
    2:10:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):301:309 -> a
    11:11:ai.datatower.analytics.utils.PresetPropManager ai.datatower.analytics.utils.PresetPropManager$Companion.get():19:19 -> a
    11:11:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):309 -> a
    12:15:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):310:313 -> a
    16:25:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):311:320 -> a
    26:26:long ai.datatower.analytics.core.PropertyManager.access$getSessionStartTime$p(ai.datatower.analytics.core.PropertyManager):36:36 -> a
    26:26:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):321 -> a
    27:27:long ai.datatower.analytics.core.PropertyManager.access$getSessionEndTime$p(ai.datatower.analytics.core.PropertyManager):36:36 -> a
    27:27:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):321 -> a
    28:28:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):321:321 -> a
    29:29:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):319:319 -> a
    30:56:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):309:335 -> a
    57:57:long ai.datatower.analytics.core.PropertyManager.access$getSessionStartTime$p(ai.datatower.analytics.core.PropertyManager):36:36 -> a
    57:57:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):336 -> a
    58:58:long ai.datatower.analytics.core.PropertyManager.access$getSessionEndTime$p(ai.datatower.analytics.core.PropertyManager):36:36 -> a
    58:58:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):336 -> a
    59:65:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):334:340 -> a
    66:66:void invokeSuspend$lambda-3(boolean,long,kotlinx.coroutines.CoroutineScope,boolean,java.lang.String,ai.datatower.analytics.core.PropertyManager):305:305 -> a
    1:53:java.lang.Object invokeSuspend(java.lang.Object):297:349 -> invokeSuspend
ai.datatower.analytics.core.PropertyManager$updateIsForeground$1$1$1$2 -> ai.datatower.analytics.core.i$f$a:
# {"id":"sourceFile","fileName":"PropertyManager.kt"}
    boolean $isFirstOpen -> a
    1:3:void invoke(int,java.lang.String):342:344 -> a
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):305:305 -> invoke
ai.datatower.analytics.core.PropertyManager$updateIsForeground$1$3 -> ai.datatower.analytics.core.i$g:
# {"id":"sourceFile","fileName":"PropertyManager.kt"}
    ai.datatower.analytics.core.PropertyManager this$0 -> a
    1:1:void invoke(int,java.lang.String):369:369 -> a
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):354:354 -> invoke
ai.datatower.analytics.data.DataParams -> ai.datatower.analytics.data.a:
# {"id":"sourceFile","fileName":"DataParams.kt"}
    java.lang.String CONFIG_GAID -> f
    java.lang.String VALUE -> I
    java.lang.String CONFIG_DT_ID -> h
    java.lang.String DB_DELETE_ALL -> K
    java.lang.String CONFIG_FCM_TOKEN -> j
    java.lang.String CONFIG_KOCHAVA_ID -> l
    java.lang.String CONFIG_ACCOUNT_ID -> n
    int DB_ADD_JSON_ERROR -> G
    java.lang.String CONFIG_ENABLE_TRACK -> p
    int DB_OUT_OF_ROW_ERROR -> E
    java.lang.String CONFIG_APP_INSTALL_INSERT_STATE -> r
    int DB_INSERT_SUCCEED -> C
    java.lang.String CONFIG_IS_FOREGROUND -> t
    ai.datatower.analytics.data.DataParams instance -> L
    java.lang.String USER_AGENT_WEBVIEW -> v
    ai.datatower.analytics.data.DataParams$Companion Companion -> a
    java.lang.String LATEST_GAP_TIME -> x
    java.lang.String CONFIG_INTERNAL_SUPER_PROPERTY -> z
    java.lang.String KEY_DATA -> c
    java.lang.String CONFIG_LAST_USER_SET_PROPS -> B
    java.lang.String CONFIG_IS_FIRST_OPEN_TIME_VERIFIED -> e
    java.lang.String CONFIG_OAID -> g
    java.lang.String CONFIG_FIREBASE_IID -> i
    java.lang.String CONFIG_APPSFLYER_ID -> k
    int CONFIG_MAX_ROWS -> J
    java.lang.String CONFIG_APP_SET_ID -> m
    int DB_INSERT_DATA_REPEAT -> H
    java.lang.String CONFIG_ENABLE_UPLOADS -> o
    int DB_INSERT_EXCEPTION -> F
    java.lang.String CONFIG_FIRST_OPEN -> q
    int DB_INSERT_ERROR -> D
    java.lang.String CONFIG_FIRST_SESSION_START_INSERT_STATE -> s
    java.lang.String CLOUD_CONFIG_AES_KEY -> u
    java.lang.String LATEST_NET_TIME -> w
    java.lang.String CONFIG_STATIC_SUPER_PROPERTY -> y
    java.lang.String CONFIG_USER_SET_ONCE_PROPS -> A
    java.lang.String DATABASE_NAME -> b
    java.lang.String CONFIG_FIRST_OPEN_TIME -> d
    1:1:void ai.datatower.analytics.data.DataParams$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>(java.lang.String):5:5 -> <init>
    1:1:ai.datatower.analytics.data.DataParams access$getInstance$cp():5:5 -> a
    2:2:void access$setInstance$cp(ai.datatower.analytics.data.DataParams):5:5 -> a
ai.datatower.analytics.data.DataParams$Companion -> ai.datatower.analytics.data.a$a:
# {"id":"sourceFile","fileName":"DataParams.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():8:8 -> <init>
    1:2:ai.datatower.analytics.data.DataParams getInstance(java.lang.String):61:62 -> a
    3:3:void ai.datatower.analytics.data.DataParams.<init>(java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    3:3:ai.datatower.analytics.data.DataParams getInstance(java.lang.String):62 -> a
    4:4:void ai.datatower.analytics.data.DataParams.access$setInstance$cp(ai.datatower.analytics.data.DataParams):5:5 -> a
    4:4:ai.datatower.analytics.data.DataParams getInstance(java.lang.String):62 -> a
    5:5:ai.datatower.analytics.data.DataParams ai.datatower.analytics.data.DataParams.access$getInstance$cp() -> a
    5:5:ai.datatower.analytics.data.DataParams getInstance(java.lang.String):64 -> a
    6:6:ai.datatower.analytics.data.DataParams getInstance():68:68 -> a
    7:7:ai.datatower.analytics.data.DataParams ai.datatower.analytics.data.DataParams.access$getInstance$cp():5:5 -> a
    7:7:ai.datatower.analytics.data.DataParams getInstance():69 -> a
    8:8:ai.datatower.analytics.data.DataParams getInstance():68:68 -> a
ai.datatower.analytics.data.EventDataAdapter -> ai.datatower.analytics.data.b:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter$Companion Companion -> c
    ai.datatower.analytics.data.EventDataAdapter instance -> d
    ai.datatower.analytics.data.EventDataOperation mOperation -> a
    java.lang.String accountIdCached -> b
    1:1:void ai.datatower.analytics.data.EventDataAdapter$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:5:void <init>(android.content.Context):17:20 -> <init>
    1:1:java.lang.String access$getAccountIdCached$p(ai.datatower.analytics.data.EventDataAdapter):17:17 -> a
    2:2:java.lang.Object access$getBooleanConfig(ai.datatower.analytics.data.EventDataAdapter,java.lang.String,boolean,kotlin.coroutines.Continuation):17:17 -> a
    3:3:ai.datatower.analytics.data.EventDataAdapter access$getInstance$cp():17:17 -> a
    4:4:java.lang.Object access$getLongConfig(ai.datatower.analytics.data.EventDataAdapter,java.lang.String,long,kotlin.coroutines.Continuation):17:17 -> a
    5:5:java.lang.Object access$getStringConfig(ai.datatower.analytics.data.EventDataAdapter,java.lang.String,kotlin.coroutines.Continuation):17:17 -> a
    6:6:void access$setAccountIdCached$p(ai.datatower.analytics.data.EventDataAdapter,java.lang.String):17:17 -> a
    7:7:java.lang.Object access$setStringConfig(ai.datatower.analytics.data.EventDataAdapter,java.lang.String,java.lang.String,kotlin.coroutines.Continuation):17:17 -> a
    8:8:kotlinx.coroutines.Deferred setIsAppInstallInserted(boolean):42:42 -> a
    9:9:kotlinx.coroutines.Job setLatestGapTime(long):81:81 -> a
    10:10:kotlinx.coroutines.Job saveCommonProperties(java.lang.String,org.json.JSONObject):107:107 -> a
    11:11:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled restoreCommonProperties(java.lang.String):111:111 -> a
    12:12:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled addJSON(org.json.JSONObject,java.lang.String):161:161 -> a
    13:13:kotlinx.coroutines.Deferred cleanupBatchEvents(java.util.List):217:217 -> a
    14:14:kotlinx.coroutines.Deferred readEventsDataFromDb(int):232:232 -> a
    15:17:java.lang.Object getBooleanConfig(java.lang.String,boolean,kotlin.coroutines.Continuation):244:246 -> a
    18:22:java.lang.Object getBooleanConfig(java.lang.String,boolean,kotlin.coroutines.Continuation):244:248 -> a
    23:23:java.lang.Object getBooleanConfig$default(ai.datatower.analytics.data.EventDataAdapter,java.lang.String,boolean,kotlin.coroutines.Continuation,int,java.lang.Object):244:244 -> a
    24:26:java.lang.Object getStringConfig(java.lang.String,kotlin.coroutines.Continuation):274:276 -> a
    27:29:java.lang.Object getStringConfig(java.lang.String,kotlin.coroutines.Continuation):274:276 -> a
    30:31:java.lang.Object setStringConfig(java.lang.String,java.lang.String,kotlin.coroutines.Continuation):280:281 -> a
    32:38:java.lang.Object getLongConfig(java.lang.String,long,kotlin.coroutines.Continuation):283:289 -> a
    39:47:java.lang.Object getLongConfig(java.lang.String,long,kotlin.coroutines.Continuation):283:291 -> a
    48:48:java.lang.Object getLongConfig$default(ai.datatower.analytics.data.EventDataAdapter,java.lang.String,long,kotlin.coroutines.Continuation,int,java.lang.Object):283:283 -> a
    1:1:ai.datatower.analytics.data.EventDataOperation access$getMOperation$p(ai.datatower.analytics.data.EventDataAdapter):17:17 -> b
    2:2:java.lang.Object access$setBooleanConfig(ai.datatower.analytics.data.EventDataAdapter,java.lang.String,boolean,kotlin.coroutines.Continuation):17:17 -> b
    3:3:java.lang.Object access$setLongConfig(ai.datatower.analytics.data.EventDataAdapter,java.lang.String,long,kotlin.coroutines.Continuation):17:17 -> b
    4:4:kotlinx.coroutines.Deferred setIsFirstSessionStartInserted(boolean):53:53 -> b
    5:5:kotlinx.coroutines.Job setLatestNetTime(long):73:73 -> b
    6:6:kotlinx.coroutines.Job setAccountId(java.lang.String):101:101 -> b
    7:7:kotlinx.coroutines.Job deleteAllEvents():176:176 -> b
    8:9:java.lang.Object setBooleanConfig(java.lang.String,boolean,kotlin.coroutines.Continuation):252:253 -> b
    10:10:java.lang.Object setLongConfig(java.lang.String,long,kotlin.coroutines.Continuation):295:295 -> b
    1:1:void access$setInstance$cp(ai.datatower.analytics.data.EventDataAdapter):17:17 -> c
    2:2:kotlinx.coroutines.Deferred setIsUploadEnabled(boolean):31:31 -> c
    3:3:kotlinx.coroutines.Deferred setDtIdIfNeeded(java.lang.String):62:62 -> c
    4:4:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled getAccountId():94:94 -> c
    1:1:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled getDtId():58:58 -> d
    2:2:kotlinx.coroutines.Job setLastUserSetProps(java.lang.String):133:133 -> d
    1:1:kotlinx.coroutines.Job setUserSetOnceProps(java.lang.String):125:125 -> e
    2:2:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled getLastUserSetProps():137:137 -> e
    1:1:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled getLatestGapTime():77:77 -> f
    1:1:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled getLatestNetTime():69:69 -> g
    1:1:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled getUserSetOnceProps():129:129 -> h
    1:1:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled isAppInstallInserted():38:38 -> i
    1:1:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled isFirstSessionStartInserted():49:49 -> j
    1:1:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled isUploadEnabled():27:27 -> k
    1:1:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled queryDataCount():237:237 -> l
ai.datatower.analytics.data.EventDataAdapter$Companion -> ai.datatower.analytics.data.b$a:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():299:299 -> <init>
    1:2:ai.datatower.analytics.data.EventDataAdapter getInstance$datatowerai_core_publicRelease(android.content.Context):305:306 -> a
    3:3:void ai.datatower.analytics.data.EventDataAdapter.<init>(android.content.Context,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    3:3:ai.datatower.analytics.data.EventDataAdapter getInstance$datatowerai_core_publicRelease(android.content.Context):306 -> a
    4:4:void ai.datatower.analytics.data.EventDataAdapter.access$setInstance$cp(ai.datatower.analytics.data.EventDataAdapter):17:17 -> a
    4:4:ai.datatower.analytics.data.EventDataAdapter getInstance$datatowerai_core_publicRelease(android.content.Context):306 -> a
    5:5:ai.datatower.analytics.data.EventDataAdapter ai.datatower.analytics.data.EventDataAdapter.access$getInstance$cp():17:17 -> a
    5:5:ai.datatower.analytics.data.EventDataAdapter getInstance$datatowerai_core_publicRelease(android.content.Context):308 -> a
    6:6:ai.datatower.analytics.data.EventDataAdapter getInstance$datatowerai_core_publicRelease():312:312 -> a
    7:7:ai.datatower.analytics.data.EventDataAdapter ai.datatower.analytics.data.EventDataAdapter.access$getInstance$cp():17:17 -> a
    7:7:ai.datatower.analytics.data.EventDataAdapter getInstance$datatowerai_core_publicRelease():313 -> a
    8:8:ai.datatower.analytics.data.EventDataAdapter getInstance$datatowerai_core_publicRelease():312:312 -> a
ai.datatower.analytics.data.EventDataAdapter$addJSON$1 -> ai.datatower.analytics.data.b$b:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    org.json.JSONObject $data -> c
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int label -> a
    java.lang.String $eventSyn -> d
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:7:java.lang.Object invokeSuspend(java.lang.Object):161:167 -> invokeSuspend
    8:9:java.lang.Object invokeSuspend(java.lang.Object):161:162 -> invokeSuspend
    10:10:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> invokeSuspend
    10:10:java.lang.Object invokeSuspend(java.lang.Object):162 -> invokeSuspend
    11:12:java.lang.Object invokeSuspend(java.lang.Object):163:164 -> invokeSuspend
    13:15:java.lang.Object invokeSuspend(java.lang.Object):163:165 -> invokeSuspend
    16:19:java.lang.Object invokeSuspend(java.lang.Object):163:166 -> invokeSuspend
    20:20:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> invokeSuspend
    20:20:java.lang.Object invokeSuspend(java.lang.Object):166 -> invokeSuspend
    21:21:java.lang.Object invokeSuspend(java.lang.Object):167:167 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$cleanupBatchEvents$1 -> ai.datatower.analytics.data.b$c:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    java.util.List $eventSyns -> c
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):217:218 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):217:218 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$deleteAllEvents$1 -> ai.datatower.analytics.data.b$d:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):176:177 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):176:177 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$getAccountId$1 -> ai.datatower.analytics.data.b$e:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> c
    java.lang.Object L$0 -> a
    int label -> b
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:5:java.lang.Object invokeSuspend(java.lang.Object):94:98 -> invokeSuspend
    6:8:java.lang.Object invokeSuspend(java.lang.Object):94:96 -> invokeSuspend
    9:9:java.lang.Object ai.datatower.analytics.data.EventDataAdapter.access$getStringConfig(ai.datatower.analytics.data.EventDataAdapter,java.lang.String,kotlin.coroutines.Continuation):17:17 -> invokeSuspend
    9:9:java.lang.Object invokeSuspend(java.lang.Object):96 -> invokeSuspend
    10:12:java.lang.Object invokeSuspend(java.lang.Object):96:98 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$getBooleanConfig$1 -> ai.datatower.analytics.data.b$f:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    java.lang.Object result -> b
    ai.datatower.analytics.data.EventDataAdapter this$0 -> c
    int label -> d
    boolean Z$0 -> a
ai.datatower.analytics.data.EventDataAdapter$getDtId$1 -> ai.datatower.analytics.data.b$g:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):58:59 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):58:59 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$getLastUserSetProps$1 -> ai.datatower.analytics.data.b$h:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):137:138 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):137:138 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$getLatestGapTime$1 -> ai.datatower.analytics.data.b$i:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):77:78 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):77:78 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$getLatestNetTime$1 -> ai.datatower.analytics.data.b$j:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):69:70 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):69:70 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$getLongConfig$1 -> ai.datatower.analytics.data.b$k:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    java.lang.Object result -> b
    long J$0 -> a
    ai.datatower.analytics.data.EventDataAdapter this$0 -> c
    int label -> d
ai.datatower.analytics.data.EventDataAdapter$getStringConfig$1 -> ai.datatower.analytics.data.b$l:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    java.lang.Object result -> a
    int label -> c
ai.datatower.analytics.data.EventDataAdapter$getUserSetOnceProps$1 -> ai.datatower.analytics.data.b$m:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):129:130 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):129:130 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$isAppInstallInserted$1 -> ai.datatower.analytics.data.b$n:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):38:39 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):38:39 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$isFirstSessionStartInserted$1 -> ai.datatower.analytics.data.b$o:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):49:50 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):49:50 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$isUploadEnabled$1 -> ai.datatower.analytics.data.b$p:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):27:28 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):27:28 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$queryDataCount$1 -> ai.datatower.analytics.data.b$q:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):237:238 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$readEventsDataFromDb$1 -> ai.datatower.analytics.data.b$r:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    int $limit -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):232:233 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):232:233 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$restoreCommonProperties$1 -> ai.datatower.analytics.data.b$s:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    java.lang.String $key -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:3:java.lang.Object invokeSuspend(java.lang.Object):111:113 -> invokeSuspend
    4:5:java.lang.Object invokeSuspend(java.lang.Object):111:112 -> invokeSuspend
    6:16:java.lang.Object invokeSuspend(java.lang.Object):111:121 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$saveCommonProperties$1 -> ai.datatower.analytics.data.b$t:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    java.lang.String $key -> c
    org.json.JSONObject $properties -> d
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:3:java.lang.Object invokeSuspend(java.lang.Object):107:109 -> invokeSuspend
    4:6:java.lang.Object invokeSuspend(java.lang.Object):107:109 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$setAccountId$1 -> ai.datatower.analytics.data.b$u:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    java.lang.String $value -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:5:java.lang.Object invokeSuspend(java.lang.Object):101:105 -> invokeSuspend
    6:8:java.lang.Object invokeSuspend(java.lang.Object):101:103 -> invokeSuspend
    9:9:void ai.datatower.analytics.data.EventDataAdapter.access$setAccountIdCached$p(ai.datatower.analytics.data.EventDataAdapter,java.lang.String):17:17 -> invokeSuspend
    9:9:java.lang.Object invokeSuspend(java.lang.Object):103 -> invokeSuspend
    10:10:java.lang.Object invokeSuspend(java.lang.Object):104:104 -> invokeSuspend
    11:11:java.lang.Object ai.datatower.analytics.data.EventDataAdapter.access$setStringConfig(ai.datatower.analytics.data.EventDataAdapter,java.lang.String,java.lang.String,kotlin.coroutines.Continuation):17:17 -> invokeSuspend
    11:11:java.lang.Object invokeSuspend(java.lang.Object):104 -> invokeSuspend
    12:12:java.lang.Object invokeSuspend(java.lang.Object):105:105 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$setDtIdIfNeeded$1 -> ai.datatower.analytics.data.b$v:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    java.lang.String $value -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:6:java.lang.Object invokeSuspend(java.lang.Object):62:67 -> invokeSuspend
    7:8:java.lang.Object invokeSuspend(java.lang.Object):62:63 -> invokeSuspend
    9:14:java.lang.Object invokeSuspend(java.lang.Object):62:67 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$setIsAppInstallInserted$1 -> ai.datatower.analytics.data.b$w:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    boolean $value -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:3:java.lang.Object invokeSuspend(java.lang.Object):42:44 -> invokeSuspend
    4:6:java.lang.Object invokeSuspend(java.lang.Object):42:44 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$setIsFirstSessionStartInserted$1 -> ai.datatower.analytics.data.b$x:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    boolean $value -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:3:java.lang.Object invokeSuspend(java.lang.Object):53:55 -> invokeSuspend
    4:6:java.lang.Object invokeSuspend(java.lang.Object):53:55 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$setIsUploadEnabled$1 -> ai.datatower.analytics.data.b$y:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    boolean $value -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:3:java.lang.Object invokeSuspend(java.lang.Object):31:33 -> invokeSuspend
    4:6:java.lang.Object invokeSuspend(java.lang.Object):31:33 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$setLastUserSetProps$1 -> ai.datatower.analytics.data.b$z:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    java.lang.String $properties -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:3:java.lang.Object invokeSuspend(java.lang.Object):133:135 -> invokeSuspend
    4:6:java.lang.Object invokeSuspend(java.lang.Object):133:135 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$setLatestGapTime$1 -> ai.datatower.analytics.data.b$a0:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    long $value -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):81:82 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):81:82 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$setLatestNetTime$1 -> ai.datatower.analytics.data.b$b0:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    long $value -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):73:74 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):73:74 -> invokeSuspend
ai.datatower.analytics.data.EventDataAdapter$setUserSetOnceProps$1 -> ai.datatower.analytics.data.b$c0:
# {"id":"sourceFile","fileName":"EventDataAdapter.kt"}
    ai.datatower.analytics.data.EventDataAdapter this$0 -> b
    java.lang.String $propertyNames -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:3:java.lang.Object invokeSuspend(java.lang.Object):125:127 -> invokeSuspend
    4:6:java.lang.Object invokeSuspend(java.lang.Object):125:127 -> invokeSuspend
ai.datatower.analytics.data.EventDataOperation -> ai.datatower.analytics.data.c:
# {"id":"sourceFile","fileName":"EventDataOperation.kt"}
    ai.datatower.analytics.data.EventDataOperation$Companion Companion -> c
    ai.datatower.analytics.data.room.DTAnalyticsDB analyticsDB -> a
    int eventCount -> b
    java.lang.String TAG -> d
    1:1:void ai.datatower.analytics.data.EventDataOperation$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:10:void <init>(android.content.Context):17:26 -> <init>
    1:14:java.lang.Object insertData(org.json.JSONObject,java.lang.String,kotlin.coroutines.Continuation):29:42 -> a
    15:15:java.lang.Object insertData(org.json.JSONObject,java.lang.String,kotlin.coroutines.Continuation):41:41 -> a
    16:16:java.lang.Object insertData(org.json.JSONObject,java.lang.String,kotlin.coroutines.Continuation):38:38 -> a
    17:27:java.lang.Object insertData(org.json.JSONObject,java.lang.String,kotlin.coroutines.Continuation):37:47 -> a
    28:38:java.lang.Object insertData(org.json.JSONObject,java.lang.String,kotlin.coroutines.Continuation):46:56 -> a
    39:43:java.lang.Object insertData(org.json.JSONObject,java.lang.String,kotlin.coroutines.Continuation):54:58 -> a
    44:44:java.lang.Object insertData(org.json.JSONObject,java.lang.String,kotlin.coroutines.Continuation):29:29 -> a
    45:60:java.lang.Object insertConfig(java.lang.String,java.lang.String,kotlin.coroutines.Continuation):66:81 -> a
    61:66:java.lang.Object insertConfig(java.lang.String,java.lang.String,kotlin.coroutines.Continuation):79:84 -> a
    67:67:java.lang.Object insertConfig(java.lang.String,java.lang.String,kotlin.coroutines.Continuation):66:66 -> a
    68:74:java.lang.Object queryConfig(java.lang.String,kotlin.coroutines.Continuation):91:97 -> a
    75:81:java.lang.Object queryConfig(java.lang.String,kotlin.coroutines.Continuation):95:101 -> a
    82:82:java.lang.Object queryConfig(java.lang.String,kotlin.coroutines.Continuation):91:91 -> a
    83:102:java.lang.Object queryData(int,kotlin.coroutines.Continuation):109:128 -> a
    103:105:java.lang.Object queryData(int,kotlin.coroutines.Continuation):123:125 -> a
    106:113:java.lang.Object queryData(int,kotlin.coroutines.Continuation):123:130 -> a
    114:133:java.lang.Object queryData(int,kotlin.coroutines.Continuation):109:128 -> a
    134:143:java.lang.Object deleteBatchEventByEventSyn(java.util.List,kotlin.coroutines.Continuation):172:181 -> a
    144:149:java.lang.Object deleteBatchEventByEventSyn(java.util.List,kotlin.coroutines.Continuation):179:184 -> a
    150:150:java.lang.Object deleteBatchEventByEventSyn(java.util.List,kotlin.coroutines.Continuation):172:172 -> a
    151:158:void deleteTheOldestData(int):191:198 -> a
    159:159:void deleteTheOldestData(int):196:196 -> a
    160:168:java.lang.String parseData(java.lang.String):207:215 -> a
    169:175:boolean deleteDataWhenOverMaxRows():232:238 -> a
    176:188:boolean deleteDataWhenOverMaxRows():236:248 -> a
    189:189:boolean deleteDataWhenOverMaxRows():246:246 -> a
    190:197:java.lang.Object deleteAllEventData(kotlin.coroutines.Continuation):254:261 -> a
    198:203:java.lang.Object deleteAllEventData(kotlin.coroutines.Continuation):259:264 -> a
    204:204:java.lang.Object deleteAllEventData(kotlin.coroutines.Continuation):254:254 -> a
    1:5:int queryDataCount():142:146 -> b
    6:6:int queryDataCount():144:144 -> b
ai.datatower.analytics.data.EventDataOperation$Companion -> ai.datatower.analytics.data.c$a:
# {"id":"sourceFile","fileName":"EventDataOperation.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():20:20 -> <init>
ai.datatower.analytics.data.persistence.SharedPreferencesLoader -> ai.datatower.analytics.data.persistence.a:
# {"id":"sourceFile","fileName":"SharedPreferencesLoader.java"}
    java.util.concurrent.Executor mExecutor -> a
    1:2:void <init>():20:21 -> <init>
    1:5:java.util.concurrent.Future loadPreferences(android.content.Context,java.lang.String):25:29 -> a
ai.datatower.analytics.data.persistence.SharedPreferencesLoader$LoadSharedPreferences -> ai.datatower.analytics.data.persistence.a$a:
# {"id":"sourceFile","fileName":"SharedPreferencesLoader.java"}
    android.content.Context mContext -> a
    java.lang.String mPrefsName -> b
    1:3:void <init>(android.content.Context,java.lang.String):37:39 -> <init>
    1:1:android.content.SharedPreferences call():44:44 -> a
    1:1:java.lang.Object call():33:33 -> call
ai.datatower.analytics.data.persistence.SharedPreferencesStorage -> ai.datatower.analytics.data.persistence.b:
# {"id":"sourceFile","fileName":"SharedPreferencesStorage.java"}
    java.lang.Object data -> a
    java.lang.String storageKey -> b
    java.util.concurrent.Future loadStoredPreferences -> c
    1:3:void <init>(java.util.concurrent.Future,java.lang.String):18:20 -> <init>
    1:1:java.lang.Object create():0:0 -> a
    2:3:void save(android.content.SharedPreferences$Editor,java.lang.Object):30:31 -> a
    4:8:void load(android.content.SharedPreferences):36:40 -> a
    9:16:void put(java.lang.Object):72:79 -> a
    1:14:java.lang.Object get():50:63 -> b
    1:6:android.content.SharedPreferences$Editor getEditor():85:90 -> c
ai.datatower.analytics.data.persistence.StorageDisableFlag -> ai.datatower.analytics.data.persistence.c:
# {"id":"sourceFile","fileName":"StorageDisableFlag.java"}
    1:1:void <init>(java.util.concurrent.Future):17:17 -> <init>
    1:1:void put(java.lang.Object):14:14 -> a
    2:2:void save(android.content.SharedPreferences$Editor,java.lang.Object):14:14 -> a
    3:4:void save(android.content.SharedPreferences$Editor,java.lang.Boolean):22:23 -> a
    5:5:void load(android.content.SharedPreferences):28:28 -> a
    1:1:java.lang.Object get():14:14 -> b
ai.datatower.analytics.data.persistence.StorageReportUrl -> ai.datatower.analytics.data.persistence.d:
# {"id":"sourceFile","fileName":"StorageReportUrl.java"}
    1:1:void <init>(java.util.concurrent.Future):16:16 -> <init>
    1:1:void put(java.lang.Object):14:14 -> a
    1:1:java.lang.Object get():14:14 -> b
ai.datatower.analytics.data.room.DTAnalyticsDB -> ai.datatower.analytics.data.room.DTAnalyticsDB:
# {"id":"sourceFile","fileName":"DTAnalyticsDB.kt"}
    ai.datatower.analytics.data.room.DTAnalyticsDB$Companion Companion -> a
    ai.datatower.analytics.data.room.DTAnalyticsDB instance -> b
    1:1:void ai.datatower.analytics.data.room.DTAnalyticsDB$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():25:25 -> <init>
    1:1:ai.datatower.analytics.data.room.DTAnalyticsDB access$getInstance$cp():21:21 -> a
    2:2:void access$setInstance$cp(ai.datatower.analytics.data.room.DTAnalyticsDB):21:21 -> a
    ai.datatower.analytics.data.room.dao.ConfigsDao getConfigDao() -> b
    ai.datatower.analytics.data.room.dao.EventInfoDao getEventsDao() -> c
ai.datatower.analytics.data.room.DTAnalyticsDB$Companion -> ai.datatower.analytics.data.room.DTAnalyticsDB$a:
# {"id":"sourceFile","fileName":"DTAnalyticsDB.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():29:29 -> <init>
    1:6:ai.datatower.analytics.data.room.DTAnalyticsDB buildDatabase(android.content.Context):40:45 -> a
    7:12:ai.datatower.analytics.data.room.DTAnalyticsDB buildDatabase(android.content.Context):42:47 -> a
    13:13:androidx.room.migration.Migration ai.datatower.analytics.data.room.DaoMigarationKt.getMIGRATION_2_3():50:50 -> a
    13:13:ai.datatower.analytics.data.room.DTAnalyticsDB buildDatabase(android.content.Context):47 -> a
    14:16:ai.datatower.analytics.data.room.DTAnalyticsDB buildDatabase(android.content.Context):47:49 -> a
    1:4:void ensureMigrated(android.content.Context):57:60 -> b
    1:1:ai.datatower.analytics.data.room.DTAnalyticsDB getInstance(android.content.Context):33:33 -> c
    2:2:ai.datatower.analytics.data.room.DTAnalyticsDB ai.datatower.analytics.data.room.DTAnalyticsDB.access$getInstance$cp():21:21 -> c
    2:2:ai.datatower.analytics.data.room.DTAnalyticsDB getInstance(android.content.Context):34 -> c
    3:3:ai.datatower.analytics.data.room.DTAnalyticsDB getInstance(android.content.Context):34:34 -> c
    4:4:void ai.datatower.analytics.data.room.DTAnalyticsDB.access$setInstance$cp(ai.datatower.analytics.data.room.DTAnalyticsDB):21:21 -> c
    4:4:ai.datatower.analytics.data.room.DTAnalyticsDB getInstance(android.content.Context):34 -> c
    5:5:ai.datatower.analytics.data.room.DTAnalyticsDB getInstance(android.content.Context):33:33 -> c
ai.datatower.analytics.data.room.DTAnalyticsDB_Impl -> ai.datatower.analytics.data.room.DTAnalyticsDB_Impl:
# {"id":"sourceFile","fileName":"DTAnalyticsDB_Impl.java"}
    ai.datatower.analytics.data.room.dao.ConfigsDao _configsDao -> d
    ai.datatower.analytics.data.room.dao.EventInfoDao _eventInfoDao -> c
    1:1:void <init>():38:38 -> <init>
    1:1:java.util.List access$000(ai.datatower.analytics.data.room.DTAnalyticsDB_Impl):38:38 -> a
    2:2:androidx.sqlite.db.SupportSQLiteDatabase access$602(ai.datatower.analytics.data.room.DTAnalyticsDB_Impl,androidx.sqlite.db.SupportSQLiteDatabase):38:38 -> a
    1:1:java.util.List access$100(ai.datatower.analytics.data.room.DTAnalyticsDB_Impl):38:38 -> b
    2:2:void access$700(ai.datatower.analytics.data.room.DTAnalyticsDB_Impl,androidx.sqlite.db.SupportSQLiteDatabase):38:38 -> b
    3:11:ai.datatower.analytics.data.room.dao.ConfigsDao getConfigDao():197:205 -> b
    1:1:java.util.List access$1000(ai.datatower.analytics.data.room.DTAnalyticsDB_Impl):38:38 -> c
    2:10:ai.datatower.analytics.data.room.dao.EventInfoDao getEventsDao():183:191 -> c
    1:12:void clearAllTables():145:156 -> clearAllTables
    13:18:void clearAllTables():153:158 -> clearAllTables
    1:3:androidx.room.InvalidationTracker createInvalidationTracker():138:140 -> createInvalidationTracker
    1:88:androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration):45:132 -> createOpenHelper
    1:1:java.util.List access$200(ai.datatower.analytics.data.room.DTAnalyticsDB_Impl):38:38 -> d
    1:1:java.util.List access$300(ai.datatower.analytics.data.room.DTAnalyticsDB_Impl):38:38 -> e
    1:1:java.util.List access$400(ai.datatower.analytics.data.room.DTAnalyticsDB_Impl):38:38 -> f
    1:1:java.util.List access$500(ai.datatower.analytics.data.room.DTAnalyticsDB_Impl):38:38 -> g
    1:1:java.util.List getAutoMigrations(java.util.Map):178:178 -> getAutoMigrations
    1:1:java.util.Set getRequiredAutoMigrationSpecs():171:171 -> getRequiredAutoMigrationSpecs
    1:2:java.util.Map getRequiredTypeConverters():163:164 -> getRequiredTypeConverters
    3:3:java.util.List ai.datatower.analytics.data.room.dao.EventInfoDao_Impl.getRequiredConverters():247:247 -> getRequiredTypeConverters
    3:3:java.util.Map getRequiredTypeConverters():164 -> getRequiredTypeConverters
    4:5:java.util.Map getRequiredTypeConverters():164:165 -> getRequiredTypeConverters
    6:6:java.util.List ai.datatower.analytics.data.room.dao.ConfigsDao_Impl.getRequiredConverters():155:155 -> getRequiredTypeConverters
    6:6:java.util.Map getRequiredTypeConverters():165 -> getRequiredTypeConverters
    7:7:java.util.Map getRequiredTypeConverters():165:165 -> getRequiredTypeConverters
    1:1:java.util.List access$800(ai.datatower.analytics.data.room.DTAnalyticsDB_Impl):38:38 -> h
    1:1:java.util.List access$900(ai.datatower.analytics.data.room.DTAnalyticsDB_Impl):38:38 -> i
ai.datatower.analytics.data.room.DTAnalyticsDB_Impl$1 -> ai.datatower.analytics.data.room.DTAnalyticsDB_Impl$a:
# {"id":"sourceFile","fileName":"DTAnalyticsDB_Impl.java"}
    ai.datatower.analytics.data.room.DTAnalyticsDB_Impl this$0 -> a
    1:1:void <init>(ai.datatower.analytics.data.room.DTAnalyticsDB_Impl,int):45:45 -> <init>
    1:5:void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase):48:52 -> createAllTables
    1:5:void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase):57:61 -> dropAllTables
    1:3:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase):68:70 -> onCreate
    1:5:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase):77:81 -> onOpen
    1:1:void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase):88:88 -> onPreMigrate
    1:29:androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase):97:125 -> onValidateSchema
ai.datatower.analytics.data.room.DaoMigarationKt -> ai.datatower.analytics.data.room.a:
# {"id":"sourceFile","fileName":"DaoMigaration.kt"}
    androidx.room.migration.Migration MIGRATION_2_3 -> b
    androidx.room.migration.Migration MIGRATION_1_2 -> a
    1:35:void <clinit>():16:50 -> <clinit>
    1:1:androidx.room.migration.Migration getMIGRATION_1_2():16:16 -> a
    1:1:androidx.room.migration.Migration getMIGRATION_2_3():50:50 -> b
ai.datatower.analytics.data.room.DaoMigarationKt$MIGRATION_1_2$1 -> ai.datatower.analytics.data.room.a$a:
# {"id":"sourceFile","fileName":"DaoMigaration.kt"}
    1:1:void <init>():16:16 -> <init>
    1:27:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):20:46 -> migrate
ai.datatower.analytics.data.room.DaoMigarationKt$MIGRATION_2_3$1 -> ai.datatower.analytics.data.room.a$b:
# {"id":"sourceFile","fileName":"DaoMigaration.kt"}
    1:1:void <init>():50:50 -> <init>
    1:6:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):54:59 -> migrate
    7:30:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):58:81 -> migrate
ai.datatower.analytics.data.room.bean.Configs -> ai.datatower.analytics.data.room.bean.a:
# {"id":"sourceFile","fileName":"Configs.kt"}
    long id -> a
    java.lang.String value -> c
    java.lang.String name -> b
    1:5:void <init>(long,java.lang.String,java.lang.String):14:18 -> <init>
    6:6:void <init>(long,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker):15:15 -> <init>
    1:1:long component1():0:0 -> a
    2:2:ai.datatower.analytics.data.room.bean.Configs copy(long,java.lang.String,java.lang.String):0:0 -> a
    3:3:ai.datatower.analytics.data.room.bean.Configs copy$default(ai.datatower.analytics.data.room.bean.Configs,long,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> a
    java.lang.String component2() -> b
    java.lang.String component3() -> c
    1:1:long getId():16:16 -> d
    1:1:java.lang.String getName():17:17 -> e
    1:1:java.lang.String getValue():18:18 -> f
ai.datatower.analytics.data.room.bean.Events -> ai.datatower.analytics.data.room.bean.b:
# {"id":"sourceFile","fileName":"Events.kt"}
    long id -> a
    long createdAt -> d
    java.lang.String data -> c
    java.lang.String eventSyn -> b
    1:11:void <init>(long,java.lang.String,java.lang.String,long):15:25 -> <init>
    12:12:void <init>(long,java.lang.String,java.lang.String,long,int,kotlin.jvm.internal.DefaultConstructorMarker):21:21 -> <init>
    1:1:long component1():0:0 -> a
    2:2:ai.datatower.analytics.data.room.bean.Events copy(long,java.lang.String,java.lang.String,long):0:0 -> a
    3:3:ai.datatower.analytics.data.room.bean.Events copy$default(ai.datatower.analytics.data.room.bean.Events,long,java.lang.String,java.lang.String,long,int,java.lang.Object):0:0 -> a
    java.lang.String component2() -> b
    java.lang.String component3() -> c
    long component4() -> d
    1:1:long getCreatedAt():25:25 -> e
    1:1:java.lang.String getData():24:24 -> f
    1:1:java.lang.String getEventSyn():23:23 -> g
    1:1:long getId():22:22 -> h
ai.datatower.analytics.data.room.dao.ConfigsDao -> ai.datatower.analytics.data.room.dao.a:
# {"id":"sourceFile","fileName":"ConfigsDao.kt"}
    int existsValue(java.lang.String) -> a
    void insert(ai.datatower.analytics.data.room.bean.Configs[]) -> a
    void update(java.lang.String,java.lang.String) -> a
    java.lang.String queryValueByName(java.lang.String) -> b
ai.datatower.analytics.data.room.dao.ConfigsDao_Impl -> ai.datatower.analytics.data.room.dao.b:
# {"id":"sourceFile","fileName":"ConfigsDao_Impl.java"}
    androidx.room.RoomDatabase __db -> a
    androidx.room.SharedSQLiteStatement __preparedStmtOfUpdate -> c
    androidx.room.EntityInsertionAdapter __insertionAdapterOfConfigs -> b
    1:24:void <init>(androidx.room.RoomDatabase):28:51 -> <init>
    1:8:void insert(ai.datatower.analytics.data.room.bean.Configs[]):62:69 -> a
    9:29:void update(java.lang.String,java.lang.String):74:94 -> a
    30:32:void update(java.lang.String,java.lang.String):93:95 -> a
    33:52:int existsValue(java.lang.String):131:150 -> a
    53:55:int existsValue(java.lang.String):149:151 -> a
    56:56:java.util.List getRequiredConverters():155:155 -> a
    1:24:java.lang.String queryValueByName(java.lang.String):101:124 -> b
    25:27:java.lang.String queryValueByName(java.lang.String):123:125 -> b
ai.datatower.analytics.data.room.dao.ConfigsDao_Impl$1 -> ai.datatower.analytics.data.room.dao.b$a:
# {"id":"sourceFile","fileName":"ConfigsDao_Impl.java"}
    ai.datatower.analytics.data.room.dao.ConfigsDao_Impl this$0 -> a
    1:1:void <init>(ai.datatower.analytics.data.room.dao.ConfigsDao_Impl,androidx.room.RoomDatabase):30:30 -> <init>
    1:1:long ai.datatower.analytics.data.room.bean.Configs.getId():16:16 -> a
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Configs):38 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Configs):38:38 -> a
    3:3:java.lang.String ai.datatower.analytics.data.room.bean.Configs.getName():17:17 -> a
    3:3:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Configs):39 -> a
    4:6:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Configs):40:42 -> a
    7:7:java.lang.String ai.datatower.analytics.data.room.bean.Configs.getValue():18:18 -> a
    7:7:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Configs):44 -> a
    8:10:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Configs):45:47 -> a
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object):30:30 -> bind
    1:1:java.lang.String createQuery():33:33 -> createQuery
ai.datatower.analytics.data.room.dao.ConfigsDao_Impl$2 -> ai.datatower.analytics.data.room.dao.b$b:
# {"id":"sourceFile","fileName":"ConfigsDao_Impl.java"}
    ai.datatower.analytics.data.room.dao.ConfigsDao_Impl this$0 -> a
    1:1:void <init>(ai.datatower.analytics.data.room.dao.ConfigsDao_Impl,androidx.room.RoomDatabase):51:51 -> <init>
    1:1:java.lang.String createQuery():55:55 -> createQuery
ai.datatower.analytics.data.room.dao.EventInfoDao -> ai.datatower.analytics.data.room.dao.c:
# {"id":"sourceFile","fileName":"EventInfoDao.kt"}
    void clearTable() -> a
    void deleteBatchEventByEventSyn(java.util.List) -> a
    void deleteEventByEventSyn(java.lang.String) -> a
    void deleteTheOldestData(int) -> a
    long insertEvent(ai.datatower.analytics.data.room.bean.Events) -> a
    int dataCount() -> b
    void delete(ai.datatower.analytics.data.room.bean.Events) -> b
    java.lang.String[] queryEventData(int) -> b
ai.datatower.analytics.data.room.dao.EventInfoDao_Impl -> ai.datatower.analytics.data.room.dao.d:
# {"id":"sourceFile","fileName":"EventInfoDao_Impl.java"}
    androidx.room.EntityDeletionOrUpdateAdapter __deletionAdapterOfEvents -> c
    androidx.room.SharedSQLiteStatement __preparedStmtOfDeleteEventByEventSyn -> e
    androidx.room.RoomDatabase __db -> a
    androidx.room.SharedSQLiteStatement __preparedStmtOfClearTable -> f
    androidx.room.SharedSQLiteStatement __preparedStmtOfDeleteTheOldestData -> d
    androidx.room.EntityInsertionAdapter __insertionAdapterOfEvents -> b
    1:50:void <init>(androidx.room.RoomDatabase):37:86 -> <init>
    1:9:long insertEvent(ai.datatower.analytics.data.room.bean.Events):97:105 -> a
    10:20:void deleteTheOldestData(int):122:132 -> a
    21:23:void deleteTheOldestData(int):131:133 -> a
    24:38:void deleteEventByEventSyn(java.lang.String):138:152 -> a
    39:41:void deleteEventByEventSyn(java.lang.String):151:153 -> a
    42:50:void clearTable():158:166 -> a
    51:53:void clearTable():165:167 -> a
    54:77:void deleteBatchEventByEventSyn(java.util.List):220:243 -> a
    1:8:void delete(ai.datatower.analytics.data.room.bean.Events):110:117 -> b
    9:30:java.lang.String[] queryEventData(int):173:194 -> b
    31:33:java.lang.String[] queryEventData(int):193:195 -> b
    34:47:int dataCount():201:214 -> b
    48:50:int dataCount():213:215 -> b
    1:1:java.util.List getRequiredConverters():247:247 -> c
ai.datatower.analytics.data.room.dao.EventInfoDao_Impl$1 -> ai.datatower.analytics.data.room.dao.d$a:
# {"id":"sourceFile","fileName":"EventInfoDao_Impl.java"}
    ai.datatower.analytics.data.room.dao.EventInfoDao_Impl this$0 -> a
    1:1:void <init>(ai.datatower.analytics.data.room.dao.EventInfoDao_Impl,androidx.room.RoomDatabase):39:39 -> <init>
    1:1:long ai.datatower.analytics.data.room.bean.Events.getId():22:22 -> a
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Events):47 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Events):47:47 -> a
    3:3:java.lang.String ai.datatower.analytics.data.room.bean.Events.getEventSyn():23:23 -> a
    3:3:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Events):48 -> a
    4:6:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Events):49:51 -> a
    7:7:java.lang.String ai.datatower.analytics.data.room.bean.Events.getData():24:24 -> a
    7:7:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Events):53 -> a
    8:10:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Events):54:56 -> a
    11:11:long ai.datatower.analytics.data.room.bean.Events.getCreatedAt():25:25 -> a
    11:11:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Events):58 -> a
    12:12:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Events):58:58 -> a
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object):39:39 -> bind
    1:1:java.lang.String createQuery():42:42 -> createQuery
ai.datatower.analytics.data.room.dao.EventInfoDao_Impl$2 -> ai.datatower.analytics.data.room.dao.d$b:
# {"id":"sourceFile","fileName":"EventInfoDao_Impl.java"}
    ai.datatower.analytics.data.room.dao.EventInfoDao_Impl this$0 -> a
    1:1:void <init>(ai.datatower.analytics.data.room.dao.EventInfoDao_Impl,androidx.room.RoomDatabase):61:61 -> <init>
    1:1:long ai.datatower.analytics.data.room.bean.Events.getId():22:22 -> a
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Events):69 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void bind(androidx.sqlite.db.SupportSQLiteStatement,ai.datatower.analytics.data.room.bean.Events):69:69 -> a
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object):61:61 -> bind
    1:1:java.lang.String createQuery():64:64 -> createQuery
ai.datatower.analytics.data.room.dao.EventInfoDao_Impl$3 -> ai.datatower.analytics.data.room.dao.d$c:
# {"id":"sourceFile","fileName":"EventInfoDao_Impl.java"}
    ai.datatower.analytics.data.room.dao.EventInfoDao_Impl this$0 -> a
    1:1:void <init>(ai.datatower.analytics.data.room.dao.EventInfoDao_Impl,androidx.room.RoomDatabase):72:72 -> <init>
    1:1:java.lang.String createQuery():76:76 -> createQuery
ai.datatower.analytics.data.room.dao.EventInfoDao_Impl$4 -> ai.datatower.analytics.data.room.dao.d$d:
# {"id":"sourceFile","fileName":"EventInfoDao_Impl.java"}
    ai.datatower.analytics.data.room.dao.EventInfoDao_Impl this$0 -> a
    1:1:void <init>(ai.datatower.analytics.data.room.dao.EventInfoDao_Impl,androidx.room.RoomDatabase):79:79 -> <init>
    1:1:java.lang.String createQuery():83:83 -> createQuery
ai.datatower.analytics.data.room.dao.EventInfoDao_Impl$5 -> ai.datatower.analytics.data.room.dao.d$e:
# {"id":"sourceFile","fileName":"EventInfoDao_Impl.java"}
    ai.datatower.analytics.data.room.dao.EventInfoDao_Impl this$0 -> a
    1:1:void <init>(ai.datatower.analytics.data.room.dao.EventInfoDao_Impl,androidx.room.RoomDatabase):86:86 -> <init>
    1:1:java.lang.String createQuery():90:90 -> createQuery
ai.datatower.analytics.exception.InvalidDataException -> ai.datatower.analytics.exception.a:
# {"id":"sourceFile","fileName":"InvalidDataException.java"}
    1:1:void <init>(java.lang.String):26:26 -> <init>
    2:2:void <init>(java.lang.Throwable):30:30 -> <init>
ai.datatower.analytics.network.DTHttpException -> ai.datatower.analytics.network.a:
# {"id":"sourceFile","fileName":"DTHttpException.kt"}
    1:1:void <init>(java.lang.String):3:3 -> <init>
ai.datatower.analytics.network.HttpCallback -> ai.datatower.analytics.network.b:
# {"id":"sourceFile","fileName":"HttpCallback.kt"}
    ai.datatower.analytics.network.HttpCallback$Companion Companion -> a
    android.os.Handler sMainHandler -> b
    1:1:void ai.datatower.analytics.network.HttpCallback$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:117:void <clinit>():0:115 -> <clinit>
    1:1:void <init>():26:26 -> <init>
    void onFailure(int,java.lang.String) -> a
    java.lang.Object onParseResponse(ai.datatower.analytics.network.RealResponse,java.lang.String) -> a
    void onResponse(java.lang.Object) -> a
    1:1:android.os.Handler access$getSMainHandler$cp():26:26 -> a
    2:2:void access$setSMainHandler$cp(android.os.Handler):26:26 -> a
    3:4:void onError(ai.datatower.analytics.network.RealResponse):28:29 -> a
    5:8:void onError(ai.datatower.analytics.network.RealResponse):28:31 -> a
    9:16:void onError(ai.datatower.analytics.network.RealResponse):30:37 -> a
    17:18:void onError$lambda-0(ai.datatower.analytics.network.HttpCallback,ai.datatower.analytics.network.RealResponse,java.lang.String):38:39 -> a
    19:20:void onSuccess$lambda-1(ai.datatower.analytics.network.HttpCallback,java.lang.Object):46:47 -> a
    void onAfter() -> b
    1:2:void onSuccess(ai.datatower.analytics.network.RealResponse):44:45 -> b
ai.datatower.analytics.network.HttpCallback$Companion -> ai.datatower.analytics.network.b$a:
# {"id":"sourceFile","fileName":"HttpCallback.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():114:114 -> <init>
    1:1:android.os.Handler getSMainHandler():115:115 -> a
    2:2:void setSMainHandler(android.os.Handler):115:115 -> a
ai.datatower.analytics.network.HttpCallback$JsonCallback -> ai.datatower.analytics.network.b$b:
# {"id":"sourceFile","fileName":"HttpCallback.kt"}
    1:1:void <init>():91:91 -> <init>
    1:1:java.lang.Object onParseResponse(ai.datatower.analytics.network.RealResponse,java.lang.String):91:91 -> a
    1:1:void onAfter():0:0 -> b
    2:6:org.json.JSONObject onParseResponse(ai.datatower.analytics.network.RealResponse,java.lang.String):94:98 -> b
ai.datatower.analytics.network.HttpCallback$ResponseDataKey -> ai.datatower.analytics.network.b$c:
# {"id":"sourceFile","fileName":"HttpCallback.kt"}
    ai.datatower.analytics.network.HttpCallback$ResponseDataKey$Companion Companion -> a
    java.lang.String KEY_MSG -> c
    java.lang.String KEY_CODE -> b
    java.lang.String KEY_DATA -> d
ai.datatower.analytics.network.HttpCallback$ResponseDataKey$Companion -> ai.datatower.analytics.network.b$c$a:
# {"id":"sourceFile","fileName":"HttpCallback.kt"}
    ai.datatower.analytics.network.HttpCallback$ResponseDataKey$Companion $$INSTANCE -> a
    java.lang.String KEY_MSG -> c
    java.lang.String KEY_CODE -> b
    java.lang.String KEY_DATA -> d
    1:1:void <init>():107:107 -> <init>
ai.datatower.analytics.network.HttpCallback$StringCallback -> ai.datatower.analytics.network.b$d:
# {"id":"sourceFile","fileName":"HttpCallback.kt"}
    1:1:void <init>():85:85 -> <init>
    1:1:java.lang.Object onParseResponse(ai.datatower.analytics.network.RealResponse,java.lang.String):85:85 -> a
    java.lang.String onParseResponse(ai.datatower.analytics.network.RealResponse,java.lang.String) -> b
ai.datatower.analytics.network.HttpCallback$TimeCallback -> ai.datatower.analytics.network.b$e:
# {"id":"sourceFile","fileName":"HttpCallback.kt"}
    1:1:void <init>():79:79 -> <init>
    1:1:java.lang.Object onParseResponse(ai.datatower.analytics.network.RealResponse,java.lang.String):79:79 -> a
    1:1:void onAfter():0:0 -> b
    2:2:java.lang.Long onParseResponse(ai.datatower.analytics.network.RealResponse,java.lang.String):81:81 -> b
ai.datatower.analytics.network.HttpMethod -> ai.datatower.analytics.network.c:
# {"id":"sourceFile","fileName":"HttpMethod.java"}
    ai.datatower.analytics.network.HttpMethod POST_ASYNC -> a
    ai.datatower.analytics.network.HttpMethod[] $VALUES -> e
    ai.datatower.analytics.network.HttpMethod GET_ASYNC -> b
    ai.datatower.analytics.network.HttpMethod POST_SYNC -> c
    ai.datatower.analytics.network.HttpMethod GET_SYNC -> d
    1:4:void <clinit>():21:24 -> <clinit>
    5:5:void <clinit>():20:20 -> <clinit>
    1:1:void <init>(java.lang.String,int):20:20 -> <init>
    1:1:ai.datatower.analytics.network.HttpMethod[] $values():20:20 -> a
    1:1:ai.datatower.analytics.network.HttpMethod valueOf(java.lang.String):20:20 -> valueOf
    1:1:ai.datatower.analytics.network.HttpMethod[] values():20:20 -> values
ai.datatower.analytics.network.HttpService -> ai.datatower.analytics.network.d:
# {"id":"sourceFile","fileName":"HttpService.java"}
    1:1:void <init>():29:29 -> <init>
    1:1:java.lang.String encodeData(java.lang.String):0:0 -> a
    2:112:java.lang.String performRequest(java.lang.String,java.lang.String,boolean,javax.net.ssl.SSLSocketFactory,java.util.Map):44:154 -> a
    113:126:java.lang.String performRequest(java.lang.String,java.lang.String,boolean,javax.net.ssl.SSLSocketFactory,java.util.Map):102:115 -> a
    127:215:java.lang.String performRequest(java.lang.String,java.lang.String,boolean,javax.net.ssl.SSLSocketFactory,java.util.Map):68:156 -> a
ai.datatower.analytics.network.HttpTaskManager -> ai.datatower.analytics.network.e:
# {"id":"sourceFile","fileName":"HttpTaskManager.java"}
    java.util.concurrent.ExecutorService executor -> b
    int POOL_SIZE -> a
    1:1:void <init>():41:41 -> <init>
    1:10:java.util.concurrent.ExecutorService getInstance():45:54 -> a
    11:11:void execute(java.lang.Runnable):63:63 -> a
ai.datatower.analytics.network.HttpTaskManager$ThreadFactoryWithName -> ai.datatower.analytics.network.e$a:
# {"id":"sourceFile","fileName":"HttpTaskManager.java"}
    java.lang.String name -> a
    1:2:void <init>(java.lang.String):70:71 -> <init>
    1:1:void lambda$newThread$0(java.lang.Thread,java.lang.Throwable):77:77 -> a
    1:2:java.lang.Thread newThread(java.lang.Runnable):76:77 -> newThread
ai.datatower.analytics.network.HttpUtils -> ai.datatower.analytics.network.f:
# {"id":"sourceFile","fileName":"HttpUtils.java"}
    int HTTP_307 -> a
    1:1:void <init>():34:34 -> <init>
    1:1:boolean needRedirects(int):0:0 -> a
    2:17:java.lang.String getLocation(java.net.HttpURLConnection,java.lang.String):45:60 -> a
    18:43:java.lang.String getRetString(java.io.InputStream):69:94 -> a
    44:63:java.lang.String getRetString(java.io.InputStream):79:98 -> a
    64:78:java.lang.String getRetString(java.io.InputStream):83:97 -> a
ai.datatower.analytics.network.RealRequest -> ai.datatower.analytics.network.g:
# {"id":"sourceFile","fileName":"RealRequest.java"}
    java.lang.String TAG -> a
    int CONNECT_TIMEOUT -> b
    int READ_TIMEOUT -> c
    java.lang.String sRequestURL -> d
    1:1:void <init>():33:33 -> <init>
    1:10:ai.datatower.analytics.network.RealResponse getData(java.lang.String,java.util.Map):50:59 -> a
    11:36:ai.datatower.analytics.network.RealResponse postData(java.lang.String,java.lang.String,java.lang.String,java.util.Map):76:101 -> a
    37:43:ai.datatower.analytics.network.RealResponse postData(java.lang.String,java.lang.String,java.lang.String,java.util.Map):95:101 -> a
    44:49:ai.datatower.analytics.network.RealResponse postData(java.lang.String,java.lang.String,java.lang.String,java.util.Map):99:104 -> a
    50:61:java.net.HttpURLConnection getHttpURLConnection(java.lang.String,java.lang.String):116:127 -> a
    62:63:void setHeader(java.net.HttpURLConnection,java.util.Map):141:142 -> a
    64:82:ai.datatower.analytics.network.RealResponse getRealResponse(java.net.HttpURLConnection):154:172 -> a
    83:88:ai.datatower.analytics.network.RealResponse getRealResponse(java.net.HttpURLConnection):169:174 -> a
    89:91:ai.datatower.analytics.network.RealResponse getExceptionResponse(java.lang.Exception):185:187 -> a
ai.datatower.analytics.network.RealResponse -> ai.datatower.analytics.network.h:
# {"id":"sourceFile","fileName":"RealResponse.java"}
    java.lang.Exception exception -> g
    long date -> f
    long contentLength -> e
    java.lang.String result -> a
    int code -> d
    java.lang.String location -> c
    java.lang.String errorMsg -> b
    1:1:void <init>():24:24 -> <init>
    1:3:java.lang.String toString():36:38 -> toString
    4:4:java.lang.String toString():36:36 -> toString
ai.datatower.analytics.network.RemoteService -> ai.datatower.analytics.network.i:
# {"id":"sourceFile","fileName":"RemoteService.java"}
    java.lang.String performRequest(java.lang.String,java.lang.String,boolean,javax.net.ssl.SSLSocketFactory,java.util.Map) -> a
ai.datatower.analytics.network.RemoteVerificationException -> ai.datatower.analytics.network.j:
# {"id":"sourceFile","fileName":"DTHttpException.kt"}
    java.lang.String response -> b
    int responseCode -> a
    1:1:void <init>(int,java.lang.String):10:10 -> <init>
    2:3:void <init>(int,java.lang.String):8:9 -> <init>
    1:1:java.lang.String getResponse():9:9 -> a
    1:1:int getResponseCode():8:8 -> b
ai.datatower.analytics.network.RequestHelper -> ai.datatower.analytics.network.k:
# {"id":"sourceFile","fileName":"RequestHelper.java"}
    boolean isRedirected -> a
    1:1:void <init>(ai.datatower.analytics.network.HttpMethod,java.lang.String,java.util.Map,java.util.Map,int,ai.datatower.analytics.network.HttpCallback,ai.datatower.analytics.network.RequestHelper$1):29:29 -> <init>
    2:2:void <init>(ai.datatower.analytics.network.RequestHelper$1):29:29 -> <init>
    3:3:void <init>(java.lang.String,java.lang.String,java.util.Map,int,ai.datatower.analytics.network.HttpCallback,ai.datatower.analytics.network.RequestHelper$1):29:29 -> <init>
    4:4:void <init>():34:34 -> <init>
    5:5:void <init>():31:31 -> <init>
    6:6:void <init>(ai.datatower.analytics.network.HttpMethod,java.lang.String,java.util.Map,java.util.Map,int,ai.datatower.analytics.network.HttpCallback):46:46 -> <init>
    7:28:void <init>(ai.datatower.analytics.network.HttpMethod,java.lang.String,java.util.Map,java.util.Map,int,ai.datatower.analytics.network.HttpCallback):31:52 -> <init>
    29:29:void <init>(ai.datatower.analytics.network.HttpMethod,java.lang.String,java.util.Map,java.util.Map,int,ai.datatower.analytics.network.HttpCallback):49:49 -> <init>
    30:30:void <init>(java.lang.String,java.lang.String,java.util.Map,int,ai.datatower.analytics.network.HttpCallback):66:66 -> <init>
    31:67:void <init>(java.lang.String,java.lang.String,java.util.Map,int,ai.datatower.analytics.network.HttpCallback) -> <init>
    1:1:java.lang.String access$000(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map):29:29 -> a
    2:2:boolean access$100(ai.datatower.analytics.network.RequestHelper):29:29 -> a
    3:3:ai.datatower.analytics.network.RealResponse access$1000(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map,java.util.Map,int):29:29 -> a
    4:4:boolean access$102(ai.datatower.analytics.network.RequestHelper,boolean):29:29 -> a
    5:5:void access$200(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map,java.util.Map,int,ai.datatower.analytics.network.HttpCallback):29:29 -> a
    6:6:java.lang.String access$300(ai.datatower.analytics.network.RequestHelper,java.util.Map,java.lang.String):29:29 -> a
    7:7:void access$500(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map,java.lang.String,java.util.Map,int,ai.datatower.analytics.network.HttpCallback):29:29 -> a
    8:8:ai.datatower.analytics.network.RealResponse access$900(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map,java.lang.String,java.util.Map,int):29:29 -> a
    9:9:void urlHttpGet(java.lang.String,java.util.Map,java.util.Map,int,ai.datatower.analytics.network.HttpCallback):81:81 -> a
    10:10:void urlHttpPost(java.lang.String,java.util.Map,java.lang.String,java.util.Map,int,ai.datatower.analytics.network.HttpCallback):119:119 -> a
    11:19:ai.datatower.analytics.network.RealResponse urlHttpPostSync(java.lang.String,java.util.Map,java.lang.String,java.util.Map,int):148:156 -> a
    20:28:ai.datatower.analytics.network.RealResponse urlHttpGetSync(java.lang.String,java.util.Map,java.util.Map,int):166:174 -> a
    29:37:java.lang.String getUrl(java.lang.String,java.util.Map):191:199 -> a
    38:39:java.lang.String getPostBody(java.util.Map,java.lang.String):213:214 -> a
    40:53:java.lang.String getPostBodyFormParamsMap(java.util.Map):228:241 -> a
    54:56:ai.datatower.analytics.network.RealResponse getExceptionResponse(java.lang.Exception):331:333 -> a
    1:1:java.lang.String access$400(ai.datatower.analytics.network.RequestHelper,java.util.Map,java.lang.String):29:29 -> b
    2:3:java.lang.String getPostBodyType(java.util.Map,java.lang.String):259:260 -> b
ai.datatower.analytics.network.RequestHelper$1 -> ai.datatower.analytics.network.k$a:
# {"id":"sourceFile","fileName":"RequestHelper.java"}
    java.util.Map val$paramsMap -> b
    java.util.Map val$headerMap -> c
    ai.datatower.analytics.network.RequestHelper this$0 -> g
    ai.datatower.analytics.network.HttpCallback val$callBack -> d
    int val$requestCount -> f
    java.lang.String val$url -> a
    int val$retryCount -> e
    1:1:void <init>(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map,java.util.Map,ai.datatower.analytics.network.HttpCallback,int,int):81:81 -> <init>
    1:1:void run():84:84 -> run
    2:2:java.lang.String ai.datatower.analytics.network.RequestHelper.access$000(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map):29:29 -> run
    2:2:void run():84 -> run
    3:8:void run():84:89 -> run
    9:9:boolean ai.datatower.analytics.network.RequestHelper.access$100(ai.datatower.analytics.network.RequestHelper):29:29 -> run
    9:9:void run():89 -> run
    10:12:void run():89:91 -> run
    13:13:void ai.datatower.analytics.network.RequestHelper.access$200(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map,java.util.Map,int,ai.datatower.analytics.network.HttpCallback):29:29 -> run
    13:13:void run():91 -> run
    14:15:void run():93:94 -> run
    16:16:void ai.datatower.analytics.network.RequestHelper.access$200(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map,java.util.Map,int,ai.datatower.analytics.network.HttpCallback):29:29 -> run
    16:16:void run():94 -> run
    17:18:void run():96:97 -> run
    19:20:void run():86:87 -> run
ai.datatower.analytics.network.RequestHelper$2 -> ai.datatower.analytics.network.k$b:
# {"id":"sourceFile","fileName":"RequestHelper.java"}
    java.util.Map val$paramsMap -> b
    java.util.Map val$headerMap -> d
    ai.datatower.analytics.network.RequestHelper this$0 -> h
    ai.datatower.analytics.network.HttpCallback val$callBack -> e
    int val$retryCount -> f
    int val$requestCount -> g
    java.lang.String val$url -> a
    java.lang.String val$jsonData -> c
    1:1:void <init>(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map,java.lang.String,java.util.Map,ai.datatower.analytics.network.HttpCallback,int,int):119:119 -> <init>
    1:1:void run():122:122 -> run
    2:2:java.lang.String ai.datatower.analytics.network.RequestHelper.access$300(ai.datatower.analytics.network.RequestHelper,java.util.Map,java.lang.String):29:29 -> run
    2:2:void run():122 -> run
    3:3:void run():122:122 -> run
    4:4:java.lang.String ai.datatower.analytics.network.RequestHelper.access$400(ai.datatower.analytics.network.RequestHelper,java.util.Map,java.lang.String):29:29 -> run
    4:4:void run():122 -> run
    5:10:void run():122:127 -> run
    11:11:boolean ai.datatower.analytics.network.RequestHelper.access$100(ai.datatower.analytics.network.RequestHelper):29:29 -> run
    11:11:void run():127 -> run
    12:14:void run():127:129 -> run
    15:15:void ai.datatower.analytics.network.RequestHelper.access$500(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map,java.lang.String,java.util.Map,int,ai.datatower.analytics.network.HttpCallback):29:29 -> run
    15:15:void run():129 -> run
    16:17:void run():131:132 -> run
    18:18:void ai.datatower.analytics.network.RequestHelper.access$500(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map,java.lang.String,java.util.Map,int,ai.datatower.analytics.network.HttpCallback):29:29 -> run
    18:18:void run():132 -> run
    19:20:void run():134:135 -> run
    21:22:void run():124:125 -> run
ai.datatower.analytics.network.RequestHelper$3 -> ai.datatower.analytics.network.k$c:
# {"id":"sourceFile","fileName":"RequestHelper.java"}
    int[] $SwitchMap$ai$datatower$analytics$network$HttpMethod -> a
    1:1:void <clinit>():47:47 -> <clinit>
ai.datatower.analytics.network.RequestHelper$Builder -> ai.datatower.analytics.network.k$d:
# {"id":"sourceFile","fileName":"RequestHelper.java"}
    ai.datatower.analytics.network.HttpMethod httpMethod -> a
    java.util.Map paramsMap -> c
    int retryCount -> g
    ai.datatower.analytics.network.HttpCallback callBack -> f
    java.util.Map headerMap -> e
    java.lang.String httpUrl -> b
    java.lang.String jsonData -> d
    1:1:void <init>(ai.datatower.analytics.network.HttpMethod,java.lang.String):275:275 -> <init>
    2:6:void <init>(ai.datatower.analytics.network.HttpMethod,java.lang.String):273:277 -> <init>
    1:1:ai.datatower.analytics.network.RequestHelper$Builder jsonData(java.lang.String):286:286 -> a
    2:2:ai.datatower.analytics.network.RequestHelper$Builder header(java.util.Map):291:291 -> a
    3:3:ai.datatower.analytics.network.RequestHelper$Builder callback(ai.datatower.analytics.network.HttpCallback):296:296 -> a
    4:4:ai.datatower.analytics.network.RequestHelper$Builder retryCount(int):301:301 -> a
    5:6:void execute():306:307 -> a
    7:7:void ai.datatower.analytics.network.RequestHelper.<init>(java.lang.String,java.lang.String,java.util.Map,int,ai.datatower.analytics.network.HttpCallback,ai.datatower.analytics.network.RequestHelper$1):29:29 -> a
    7:7:void execute():307 -> a
    8:8:void execute():309:309 -> a
    9:9:void ai.datatower.analytics.network.RequestHelper.<init>(ai.datatower.analytics.network.HttpMethod,java.lang.String,java.util.Map,java.util.Map,int,ai.datatower.analytics.network.HttpCallback,ai.datatower.analytics.network.RequestHelper$1):29:29 -> a
    9:9:void execute():309 -> a
    1:1:ai.datatower.analytics.network.RequestHelper$Builder params(java.util.Map):281:281 -> b
    2:3:ai.datatower.analytics.network.RealResponse executeSync():314:315 -> b
    4:4:void ai.datatower.analytics.network.RequestHelper.<init>(ai.datatower.analytics.network.RequestHelper$1):29:29 -> b
    4:4:ai.datatower.analytics.network.RealResponse executeSync():315 -> b
    5:5:ai.datatower.analytics.network.RealResponse executeSync():315:315 -> b
    6:6:ai.datatower.analytics.network.RealResponse ai.datatower.analytics.network.RequestHelper.access$900(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map,java.lang.String,java.util.Map,int):29:29 -> b
    6:6:ai.datatower.analytics.network.RealResponse executeSync():315 -> b
    7:8:ai.datatower.analytics.network.RealResponse executeSync():316:317 -> b
    9:9:void ai.datatower.analytics.network.RequestHelper.<init>(ai.datatower.analytics.network.RequestHelper$1):29:29 -> b
    9:9:ai.datatower.analytics.network.RealResponse executeSync():317 -> b
    10:10:ai.datatower.analytics.network.RealResponse executeSync():317:317 -> b
    11:11:ai.datatower.analytics.network.RealResponse ai.datatower.analytics.network.RequestHelper.access$1000(ai.datatower.analytics.network.RequestHelper,java.lang.String,java.util.Map,java.util.Map,int):29:29 -> b
    11:11:ai.datatower.analytics.network.RealResponse executeSync():317 -> b
    12:12:ai.datatower.analytics.network.RealResponse executeSync():319:319 -> b
ai.datatower.analytics.network.ResponseStatus -> ai.datatower.analytics.network.l:
# {"id":"sourceFile","fileName":"ResponseStatus.java"}
    ai.datatower.analytics.network.ResponseStatus PARSE_ERROR -> b
    ai.datatower.analytics.network.ResponseStatus NO_QUERY -> c
    ai.datatower.analytics.network.ResponseStatus SUCCESS -> a
    ai.datatower.analytics.network.ResponseStatus GET_PARAMS_FAILED -> d
    ai.datatower.analytics.network.ResponseStatus[] $VALUES -> e
    1:13:void <clinit>():24:36 -> <clinit>
    14:14:void <clinit>():20:20 -> <clinit>
    1:1:void <init>(java.lang.String,int):20:20 -> <init>
    1:1:ai.datatower.analytics.network.ResponseStatus[] $values():20:20 -> a
    1:1:ai.datatower.analytics.network.ResponseStatus valueOf(java.lang.String):20:20 -> valueOf
    1:1:ai.datatower.analytics.network.ResponseStatus[] values():20:20 -> values
ai.datatower.analytics.network.ServiceUnavailableException -> ai.datatower.analytics.network.m:
# {"id":"sourceFile","fileName":"DTHttpException.kt"}
    1:1:void <init>(java.lang.String):5:5 -> <init>
ai.datatower.analytics.taskqueue.AsyncTaskQueue -> ai.datatower.analytics.taskqueue.a:
# {"id":"sourceFile","fileName":"AsyncTaskQueue.java"}
    java.lang.String tag -> f
    java.lang.Thread activeThread -> c
    long taskEndTime -> e
    java.lang.String mName -> a
    long taskBeginTime -> d
    java.util.concurrent.ThreadPoolExecutor mPool -> b
    1:1:void <init>(java.lang.String):60:60 -> <init>
    2:41:void <init>(java.lang.String):23:62 -> <init>
    1:1:void postTask(java.lang.Runnable):29:29 -> a
    2:2:java.lang.Thread getCurrentThread():57:57 -> a
    1:3:int taskCount():51:53 -> b
    1:3:void taskDidRun():44:46 -> c
    1:1:void taskWillRun():40:40 -> d
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):70:70 -> dispatch
ai.datatower.analytics.taskqueue.AsyncTaskQueue$1 -> ai.datatower.analytics.taskqueue.a$a:
# {"id":"sourceFile","fileName":"AsyncTaskQueue.java"}
    java.lang.Runnable val$task -> a
    ai.datatower.analytics.taskqueue.AsyncTaskQueue this$0 -> b
    1:1:void <init>(ai.datatower.analytics.taskqueue.AsyncTaskQueue,java.lang.Runnable):29:29 -> <init>
    1:3:void run():32:34 -> run
ai.datatower.analytics.taskqueue.AsyncTaskQueue$ThreadFactoryWithName -> ai.datatower.analytics.taskqueue.a$b:
# {"id":"sourceFile","fileName":"AsyncTaskQueue.java"}
    java.lang.String name -> a
    java.lang.ref.WeakReference mHolder -> b
    1:3:void <init>(java.lang.String,ai.datatower.analytics.taskqueue.AsyncTaskQueue):85:87 -> <init>
    1:1:void lambda$newThread$0(java.lang.Thread,java.lang.Throwable):93:93 -> a
    1:3:java.lang.Thread newThread(java.lang.Runnable):92:94 -> newThread
ai.datatower.analytics.taskqueue.AsyncTaskQueueKtExtKt -> ai.datatower.analytics.taskqueue.b:
# {"id":"sourceFile","fileName":"AsyncTaskQueueKtExt.kt"}
    1:20:java.lang.Object postTaskSuspended(ai.datatower.analytics.taskqueue.AsyncTaskQueue,java.lang.Long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):13:32 -> a
    21:39:java.lang.Object postTaskSuspended(ai.datatower.analytics.taskqueue.AsyncTaskQueue,java.lang.Long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):13:31 -> a
    40:40:java.lang.Object postTaskSuspended(ai.datatower.analytics.taskqueue.AsyncTaskQueue,java.lang.Long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):16:16 -> a
    41:41:java.lang.Object postTaskSuspended$default(ai.datatower.analytics.taskqueue.AsyncTaskQueue,java.lang.Long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object):14:14 -> a
    42:42:java.lang.Object postTaskSuspended$default(ai.datatower.analytics.taskqueue.AsyncTaskQueue,java.lang.Long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object):13:13 -> a
    43:43:kotlinx.coroutines.Deferred asyncSequential(ai.datatower.analytics.taskqueue.AsyncTaskQueue,kotlin.jvm.functions.Function2):40:40 -> a
    1:1:kotlinx.coroutines.Deferred asyncSequentialCatching(ai.datatower.analytics.taskqueue.AsyncTaskQueue,kotlin.jvm.functions.Function2):44:44 -> b
    1:1:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled asyncSequentialChained(ai.datatower.analytics.taskqueue.AsyncTaskQueue,kotlin.jvm.functions.Function2):61:61 -> c
    1:1:kotlinx.coroutines.Job launchSequential(ai.datatower.analytics.taskqueue.AsyncTaskQueue,kotlin.jvm.functions.Function2):36:36 -> d
ai.datatower.analytics.taskqueue.AsyncTaskQueueKtExtKt$asyncSequential$1 -> ai.datatower.analytics.taskqueue.b$a:
# {"id":"sourceFile","fileName":"AsyncTaskQueueKtExt.kt"}
    kotlin.jvm.functions.Function2 $task -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):40:40 -> invokeSuspend
ai.datatower.analytics.taskqueue.AsyncTaskQueueKtExtKt$asyncSequential$1$1 -> ai.datatower.analytics.taskqueue.b$a$a:
# {"id":"sourceFile","fileName":"AsyncTaskQueueKtExt.kt"}
    java.lang.Object L$0 -> b
    kotlin.jvm.functions.Function2 $task -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):40:40 -> invokeSuspend
ai.datatower.analytics.taskqueue.AsyncTaskQueueKtExtKt$asyncSequentialCatching$1 -> ai.datatower.analytics.taskqueue.b$b:
# {"id":"sourceFile","fileName":"AsyncTaskQueueKtExt.kt"}
    java.lang.Object L$0 -> b
    kotlin.jvm.functions.Function2 $task -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:2:java.lang.Object invokeSuspend(java.lang.Object):44:45 -> invokeSuspend
    3:4:java.lang.Object invokeSuspend(java.lang.Object):44:45 -> invokeSuspend
ai.datatower.analytics.taskqueue.AsyncTaskQueueKtExtKt$launchSequential$1 -> ai.datatower.analytics.taskqueue.b$c:
# {"id":"sourceFile","fileName":"AsyncTaskQueueKtExt.kt"}
    kotlin.jvm.functions.Function2 $task -> b
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):36:36 -> invokeSuspend
ai.datatower.analytics.taskqueue.AsyncTaskQueueKtExtKt$launchSequential$1$1 -> ai.datatower.analytics.taskqueue.b$c$a:
# {"id":"sourceFile","fileName":"AsyncTaskQueueKtExt.kt"}
    java.lang.Object L$0 -> b
    kotlin.jvm.functions.Function2 $task -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):36:36 -> invokeSuspend
ai.datatower.analytics.taskqueue.AsyncTaskQueueKtExtKt$postTaskSuspended$1 -> ai.datatower.analytics.taskqueue.b$d:
# {"id":"sourceFile","fileName":"AsyncTaskQueueKtExt.kt"}
    java.lang.Object result -> d
    java.lang.Object L$1 -> b
    java.lang.Object L$2 -> c
    java.lang.Object L$0 -> a
    int label -> e
ai.datatower.analytics.taskqueue.AsyncTaskQueueKtExtKt$postTaskSuspended$2$1 -> ai.datatower.analytics.taskqueue.b$e:
# {"id":"sourceFile","fileName":"AsyncTaskQueueKtExt.kt"}
    java.util.concurrent.CountDownLatch $latch -> b
    kotlin.jvm.internal.Ref$ObjectRef $result -> a
    kotlin.jvm.functions.Function2 $task -> c
    1:2:void run():20:21 -> run
ai.datatower.analytics.taskqueue.AsyncTaskQueueKtExtKt$postTaskSuspended$2$1$1$1 -> ai.datatower.analytics.taskqueue.b$e$a:
# {"id":"sourceFile","fileName":"AsyncTaskQueueKtExt.kt"}
    java.lang.Object L$0 -> b
    kotlin.jvm.functions.Function2 $task -> c
    int label -> a
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):20:20 -> invokeSuspend
ai.datatower.analytics.taskqueue.AsyncTaskRescheduled -> ai.datatower.analytics.taskqueue.c:
# {"id":"sourceFile","fileName":"AsyncTaskQueueKtExt.kt"}
    kotlinx.coroutines.Deferred deferred -> a
    ai.datatower.analytics.taskqueue.AsyncTaskQueue queue -> b
    1:3:void <init>(kotlinx.coroutines.Deferred,ai.datatower.analytics.taskqueue.AsyncTaskQueue):48:50 -> <init>
    1:1:kotlinx.coroutines.Deferred access$getDeferred$p(ai.datatower.analytics.taskqueue.AsyncTaskRescheduled):48:48 -> a
    2:2:ai.datatower.analytics.taskqueue.AsyncTaskRescheduled onSameQueueThen(kotlin.jvm.functions.Function3):53:53 -> a
    3:3:java.lang.Object await(kotlin.coroutines.Continuation):55:55 -> a
ai.datatower.analytics.taskqueue.AsyncTaskRescheduled$onSameQueueThen$1 -> ai.datatower.analytics.taskqueue.c$a:
# {"id":"sourceFile","fileName":"AsyncTaskQueueKtExt.kt"}
    ai.datatower.analytics.taskqueue.AsyncTaskRescheduled this$0 -> e
    java.lang.Object L$0 -> c
    java.lang.Object L$1 -> a
    int label -> b
    kotlin.jvm.functions.Function3 $block -> d
    java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation) -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):53:53 -> invokeSuspend
    2:2:kotlinx.coroutines.Deferred ai.datatower.analytics.taskqueue.AsyncTaskRescheduled.access$getDeferred$p(ai.datatower.analytics.taskqueue.AsyncTaskRescheduled):48:48 -> invokeSuspend
    2:2:java.lang.Object invokeSuspend(java.lang.Object):53 -> invokeSuspend
    3:3:java.lang.Object invokeSuspend(java.lang.Object):53:53 -> invokeSuspend
ai.datatower.analytics.taskqueue.DBQueue -> ai.datatower.analytics.taskqueue.d:
# {"id":"sourceFile","fileName":"DBQueue.java"}
    ai.datatower.analytics.taskqueue.DBQueue singleton -> g
    1:1:void <init>():18:18 -> <init>
    1:8:ai.datatower.analytics.taskqueue.DBQueue get():7:14 -> e
ai.datatower.analytics.taskqueue.DataUploadQueue -> ai.datatower.analytics.taskqueue.e:
# {"id":"sourceFile","fileName":"DataUploadQueue.java"}
    ai.datatower.analytics.taskqueue.DataUploadQueue singleton -> g
    1:1:void <init>():19:19 -> <init>
    1:8:ai.datatower.analytics.taskqueue.DataUploadQueue get():8:15 -> e
ai.datatower.analytics.taskqueue.MainQueue -> ai.datatower.analytics.taskqueue.f:
# {"id":"sourceFile","fileName":"MainQueue.java"}
    ai.datatower.analytics.taskqueue.MainQueue singleton -> g
    1:1:void <init>():18:18 -> <init>
    1:8:ai.datatower.analytics.taskqueue.MainQueue get():7:14 -> e
ai.datatower.analytics.taskqueue.MonitorQueue -> ai.datatower.analytics.taskqueue.g:
# {"id":"sourceFile","fileName":"MonitorQueue.kt"}
    ai.datatower.analytics.taskqueue.MonitorQueue singleton -> l
    ai.datatower.analytics.taskqueue.MonitorQueue$Companion Companion -> k
    boolean isRunning -> j
    int mUploadQueueFlag -> h
    int mDBQueueFlag -> i
    int mMainQueueFlag -> g
    1:1:void ai.datatower.analytics.taskqueue.MonitorQueue$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:6:void <init>():20:24 -> <init>
    1:1:void access$setSingleton$cp(ai.datatower.analytics.taskqueue.MonitorQueue):20:20 -> a
    2:2:void setMDBQueueFlag(int):24:24 -> a
    3:3:void reportUploadError$default(ai.datatower.analytics.taskqueue.MonitorQueue,int,java.lang.String,int,java.lang.Object):50:50 -> a
    4:4:void reportUploadError(int,java.lang.String):51:51 -> a
    5:10:void findReasonForGAIDFail(android.content.Context):61:66 -> a
    11:18:void findReasonForGAIDFail(android.content.Context):64:71 -> a
    19:26:void findReasonForGAIDFail(android.content.Context):69:76 -> a
    1:1:void setMMainQueueFlag(int):22:22 -> b
    2:2:void loop$lambda-7(ai.datatower.analytics.taskqueue.MonitorQueue):94:94 -> b
    1:1:void setMUploadQueueFlag(int):23:23 -> c
    2:32:void loop$lambda-7$lambda-6(ai.datatower.analytics.taskqueue.MonitorQueue):95:125 -> c
    1:1:void loop$lambda-7$lambda-6$lambda-5(ai.datatower.analytics.taskqueue.MonitorQueue):126:126 -> d
    1:1:ai.datatower.analytics.taskqueue.MonitorQueue access$getSingleton$cp():20:20 -> e
    2:2:void startMonitor$lambda-0(ai.datatower.analytics.taskqueue.MonitorQueue):30:30 -> e
    1:4:void checkDBCount():39:42 -> f
    1:1:int getMDBQueueFlag():24:24 -> g
    1:1:int getMMainQueueFlag():22:22 -> h
    1:1:int getMUploadQueueFlag():23:23 -> i
    1:8:void loop():85:92 -> j
    1:1:void loop$lambda-2():88:88 -> k
    1:1:void loop$lambda-3():89:89 -> l
    1:1:void loop$lambda-4():90:90 -> m
    1:3:void startMonitor():27:29 -> n
    1:1:void stopMonitor():35:35 -> o
ai.datatower.analytics.taskqueue.MonitorQueue$Companion -> ai.datatower.analytics.taskqueue.g$a:
# {"id":"sourceFile","fileName":"MonitorQueue.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():133:133 -> <init>
    1:2:ai.datatower.analytics.taskqueue.MonitorQueue get():139:140 -> a
    3:3:ai.datatower.analytics.taskqueue.MonitorQueue ai.datatower.analytics.taskqueue.MonitorQueue.access$getSingleton$cp():20:20 -> a
    3:3:ai.datatower.analytics.taskqueue.MonitorQueue get():141 -> a
    4:4:ai.datatower.analytics.taskqueue.MonitorQueue get():142:142 -> a
    5:5:void ai.datatower.analytics.taskqueue.MonitorQueue.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    5:5:ai.datatower.analytics.taskqueue.MonitorQueue get():142 -> a
    6:6:void ai.datatower.analytics.taskqueue.MonitorQueue.access$setSingleton$cp(ai.datatower.analytics.taskqueue.MonitorQueue):20:20 -> a
    6:6:ai.datatower.analytics.taskqueue.MonitorQueue get():142 -> a
    7:7:ai.datatower.analytics.taskqueue.MonitorQueue get():144:144 -> a
    8:8:ai.datatower.analytics.taskqueue.MonitorQueue get():140:140 -> a
    9:9:ai.datatower.analytics.taskqueue.MonitorQueue ai.datatower.analytics.taskqueue.MonitorQueue.access$getSingleton$cp():20:20 -> a
    9:9:ai.datatower.analytics.taskqueue.MonitorQueue get():146 -> a
ai.datatower.analytics.taskqueue.MonitorQueue$checkDBCount$count$1 -> ai.datatower.analytics.taskqueue.g$b:
# {"id":"sourceFile","fileName":"MonitorQueue.kt"}
    int label -> a
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> a
    2:2:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):39:39 -> invokeSuspend
    2:2:java.lang.Object ai.datatower.analytics.taskqueue.AsyncTaskRescheduled.await(kotlin.coroutines.Continuation):55:55 -> invokeSuspend
    2:2:java.lang.Object invokeSuspend(java.lang.Object):39 -> invokeSuspend
    3:3:java.lang.Object invokeSuspend(java.lang.Object):39:39 -> invokeSuspend
ai.datatower.analytics.taskqueue.thread.AndroidExecutor -> ai.datatower.analytics.taskqueue.thread.a:
# {"id":"sourceFile","fileName":"AndroidExecutor.kt"}
    kotlin.Lazy handlerThread$delegate -> b
    kotlin.Lazy handler$delegate -> c
    kotlin.Lazy mainHandler$delegate -> d
    ai.datatower.analytics.taskqueue.thread.AndroidExecutor INSTANCE -> a
    1:11:void <clinit>():33:43 -> <clinit>
    1:1:void <init>():32:32 -> <init>
    1:1:android.os.HandlerThread access$getHandlerThread(ai.datatower.analytics.taskqueue.thread.AndroidExecutor):32:32 -> a
    2:2:android.os.Handler getHandler():39:39 -> a
    3:3:void execute$default(ai.datatower.analytics.taskqueue.thread.AndroidExecutor,java.lang.Runnable,long,int,java.lang.Object):52:52 -> a
    4:4:void execute(java.lang.Runnable,long):53:53 -> a
    1:1:android.os.HandlerThread getHandlerThread():33:33 -> b
    2:2:void executeInMain$default(ai.datatower.analytics.taskqueue.thread.AndroidExecutor,java.lang.Runnable,long,int,java.lang.Object):56:56 -> b
    3:3:void executeInMain(java.lang.Runnable,long):57:57 -> b
    1:1:android.os.Handler getMainHandler():43:43 -> c
    1:1:void warnUp():49:49 -> d
ai.datatower.analytics.taskqueue.thread.AndroidExecutor$handler$2 -> ai.datatower.analytics.taskqueue.thread.a$a:
# {"id":"sourceFile","fileName":"AndroidExecutor.kt"}
    ai.datatower.analytics.taskqueue.thread.AndroidExecutor$handler$2 INSTANCE -> a
    1:1:android.os.Handler invoke():40:40 -> a
    2:2:android.os.HandlerThread ai.datatower.analytics.taskqueue.thread.AndroidExecutor.access$getHandlerThread(ai.datatower.analytics.taskqueue.thread.AndroidExecutor):32:32 -> a
    2:2:android.os.Handler invoke():40 -> a
    3:3:android.os.Handler invoke():40:40 -> a
    1:1:java.lang.Object invoke():39:39 -> invoke
ai.datatower.analytics.taskqueue.thread.AndroidExecutor$handlerThread$2 -> ai.datatower.analytics.taskqueue.thread.a$b:
# {"id":"sourceFile","fileName":"AndroidExecutor.kt"}
    ai.datatower.analytics.taskqueue.thread.AndroidExecutor$handlerThread$2 INSTANCE -> a
    1:2:android.os.HandlerThread invoke():34:35 -> a
    1:1:java.lang.Object invoke():33:33 -> invoke
ai.datatower.analytics.taskqueue.thread.AndroidExecutor$mainHandler$2 -> ai.datatower.analytics.taskqueue.thread.a$c:
# {"id":"sourceFile","fileName":"AndroidExecutor.kt"}
    ai.datatower.analytics.taskqueue.thread.AndroidExecutor$mainHandler$2 INSTANCE -> a
    1:1:android.os.Handler invoke():43:43 -> a
    1:1:java.lang.Object invoke():43:43 -> invoke
ai.datatower.analytics.taskqueue.thread.AndroidExecutorKt -> ai.datatower.analytics.taskqueue.thread.b:
# {"id":"sourceFile","fileName":"AndroidExecutor.kt"}
    1:1:void runInBackground$default(long,kotlin.jvm.functions.Function0,int,java.lang.Object):16:16 -> a
    2:2:void runInBackground(long,kotlin.jvm.functions.Function0):17:17 -> a
    3:3:void runInBackground$lambda-0(kotlin.jvm.functions.Function0):17:17 -> a
    4:4:void runInBackground$default(java.lang.Runnable,long,int,java.lang.Object):20:20 -> a
    5:5:void runInBackground(java.lang.Runnable,long):21:21 -> a
    1:1:void runInMain$default(long,kotlin.jvm.functions.Function0,int,java.lang.Object):24:24 -> b
    2:2:void runInMain(long,kotlin.jvm.functions.Function0):25:25 -> b
    3:3:void runInMain$lambda-1(kotlin.jvm.functions.Function0):25:25 -> b
    4:4:void runInMain$default(java.lang.Runnable,long,int,java.lang.Object):28:28 -> b
    5:5:void runInMain(java.lang.Runnable,long):29:29 -> b
ai.datatower.analytics.utils.AdtUtil -> ai.datatower.analytics.utils.a:
# {"id":"sourceFile","fileName":"AdtUtil.java"}
    java.lang.ref.SoftReference mContext -> a
    1:1:void <init>(ai.datatower.analytics.utils.AdtUtil$1):13:13 -> <init>
    2:2:void <init>():16:16 -> <init>
    3:3:void <init>():14:14 -> <init>
    1:1:android.app.Application currentApplication():41:41 -> a
    1:8:android.app.Application getApplicationContext():28:35 -> b
    1:1:android.app.Application getInitialApplication():50:50 -> c
    1:1:ai.datatower.analytics.utils.AdtUtil getInstance():24:24 -> d
ai.datatower.analytics.utils.AdtUtil$1 -> ai.datatower.analytics.utils.a$a:
# {"id":"sourceFile","fileName":"AdtUtil.java"}
ai.datatower.analytics.utils.AdtUtil$Holder -> ai.datatower.analytics.utils.a$b:
# {"id":"sourceFile","fileName":"AdtUtil.java"}
    ai.datatower.analytics.utils.AdtUtil INSTANCE -> a
    1:1:void <clinit>():20:20 -> <clinit>
    2:2:void ai.datatower.analytics.utils.AdtUtil.<init>(ai.datatower.analytics.utils.AdtUtil$1):13:13 -> <clinit>
    2:2:void <clinit>():20 -> <clinit>
    3:3:void <clinit>():20:20 -> <clinit>
    1:1:void <init>():19:19 -> <init>
    1:1:ai.datatower.analytics.utils.AdtUtil access$100():19:19 -> a
ai.datatower.analytics.utils.AppInfoUtils -> ai.datatower.analytics.utils.b:
# {"id":"sourceFile","fileName":"AppInfoUtils.kt"}
    ai.datatower.analytics.utils.AppInfoUtils INSTANCE -> a
    1:1:void <init>():9:9 -> <init>
    1:6:int getAppVersionCode(android.content.Context):40:45 -> a
    1:10:java.lang.String getAppVersionName(android.content.Context):19:28 -> b
    1:8:java.lang.String getMainProcessName(android.content.Context):59:66 -> c
    1:5:boolean isAppOnForeground(android.content.Context):76:80 -> d
    6:6:boolean isAppOnForeground(android.content.Context):76:76 -> d
ai.datatower.analytics.utils.AppLifecycleHelper -> ai.datatower.analytics.utils.AppLifecycleHelper:
# {"id":"sourceFile","fileName":"AppLifecycleHelper.java"}
    android.app.Application$ActivityLifecycleCallbacks activityLifecycleCallbacks -> b
    ai.datatower.analytics.utils.AppLifecycleHelper$OnAppStatusListener mOnAppStatusListener -> a
    1:19:void <init>():16:34 -> <init>
    1:1:ai.datatower.analytics.utils.AppLifecycleHelper$OnAppStatusListener access$000(ai.datatower.analytics.utils.AppLifecycleHelper):11:11 -> a
    2:3:void register(android.app.Application,ai.datatower.analytics.utils.AppLifecycleHelper$OnAppStatusListener):26:27 -> a
    4:4:void unRegister(android.app.Application):31:31 -> a
ai.datatower.analytics.utils.AppLifecycleHelper$1 -> ai.datatower.analytics.utils.AppLifecycleHelper$a:
# {"id":"sourceFile","fileName":"AppLifecycleHelper.java"}
    ai.datatower.analytics.utils.AppLifecycleHelper this$0 -> b
    int activityStartCount -> a
    1:3:void <init>(ai.datatower.analytics.utils.AppLifecycleHelper):34:36 -> <init>
    1:5:void onActivityStarted(android.app.Activity):45:49 -> onActivityStarted
    6:6:ai.datatower.analytics.utils.AppLifecycleHelper$OnAppStatusListener ai.datatower.analytics.utils.AppLifecycleHelper.access$000(ai.datatower.analytics.utils.AppLifecycleHelper):11:11 -> onActivityStarted
    6:6:void onActivityStarted(android.app.Activity):49 -> onActivityStarted
    7:7:void onActivityStarted(android.app.Activity):50:50 -> onActivityStarted
    1:5:void onActivityStopped(android.app.Activity):67:71 -> onActivityStopped
    6:6:ai.datatower.analytics.utils.AppLifecycleHelper$OnAppStatusListener ai.datatower.analytics.utils.AppLifecycleHelper.access$000(ai.datatower.analytics.utils.AppLifecycleHelper):11:11 -> onActivityStopped
    6:6:void onActivityStopped(android.app.Activity):71 -> onActivityStopped
    7:7:void onActivityStopped(android.app.Activity):72:72 -> onActivityStopped
ai.datatower.analytics.utils.AppLifecycleHelper$OnAppStatusListener -> ai.datatower.analytics.utils.AppLifecycleHelper$OnAppStatusListener:
# {"id":"sourceFile","fileName":"AppLifecycleHelper.java"}
ai.datatower.analytics.utils.CommonPropertiesKey -> ai.datatower.analytics.utils.CommonPropertiesKey:
# {"id":"sourceFile","fileName":"RestrictUtil.kt"}
ai.datatower.analytics.utils.CommonPropsUtil -> ai.datatower.analytics.utils.c:
# {"id":"sourceFile","fileName":"CommonPropsUtil.kt"}
    org.json.JSONObject staticProperties -> c
    ai.datatower.analytics.utils.CommonPropsUtil INSTANCE -> a
    org.json.JSONObject internalProperties -> d
    kotlin.jvm.functions.Function0 dynamicPropertiesGetter -> b
    1:2:void <clinit>():12:13 -> <clinit>
    1:1:void <init>():10:10 -> <init>
    1:1:java.lang.Object access$restoreCommonProperties(ai.datatower.analytics.utils.CommonPropsUtil,java.lang.String,org.json.JSONObject,kotlin.coroutines.Continuation):10:10 -> a
    2:5:java.lang.Object init$datatowerai_core_publicRelease(kotlin.coroutines.Continuation):15:18 -> a
    6:7:java.lang.Object init$datatowerai_core_publicRelease(kotlin.coroutines.Continuation):15:16 -> a
    8:10:java.lang.Object init$datatowerai_core_publicRelease(kotlin.coroutines.Continuation):15:17 -> a
    11:14:java.lang.Object init$datatowerai_core_publicRelease(kotlin.coroutines.Continuation):15:18 -> a
    15:16:java.lang.Object restoreCommonProperties(java.lang.String,org.json.JSONObject,kotlin.coroutines.Continuation):20:21 -> a
    17:18:java.lang.Object restoreCommonProperties(java.lang.String,org.json.JSONObject,kotlin.coroutines.Continuation):20:21 -> a
    19:19:java.lang.Object ai.datatower.analytics.taskqueue.AsyncTaskRescheduled.await(kotlin.coroutines.Continuation):55:55 -> a
    19:19:java.lang.Object restoreCommonProperties(java.lang.String,org.json.JSONObject,kotlin.coroutines.Continuation):21 -> a
    20:100:java.lang.Object restoreCommonProperties(java.lang.String,org.json.JSONObject,kotlin.coroutines.Continuation):21:101 -> a
    101:101:java.lang.Object restoreCommonProperties(java.lang.String,org.json.JSONObject,kotlin.coroutines.Continuation):23:23 -> a
    102:102:void updateDynamicProperties$datatowerai_core_publicRelease(kotlin.jvm.functions.Function0):29:29 -> a
    103:103:void clearDynamicProperties$datatowerai_core_publicRelease():35:35 -> a
    104:114:void applyCommonPropertiesToEvent$datatowerai_core_publicRelease(org.json.JSONObject):67:77 -> a
    115:126:void updateInternalCommonProperties$datatowerai_core_publicRelease(java.lang.String,java.lang.Object):85:96 -> a
    127:127:void updateInternalCommonProperties$datatowerai_core_publicRelease(java.lang.String,java.lang.Object):94:94 -> a
    1:1:void updateDynamicProperties$lambda-2(kotlin.jvm.functions.Function0):30:30 -> b
    2:2:void clearDynamicProperties$lambda-3():36:36 -> b
    3:3:void updateStaticProperties$datatowerai_core_publicRelease(org.json.JSONObject):41:41 -> b
    1:5:void updateStaticProperties$lambda-4(org.json.JSONObject):42:46 -> c
    6:6:void clearStaticProperties$datatowerai_core_publicRelease():51:51 -> c
    1:2:void clearStaticProperties$lambda-5():52:53 -> d
    1:1:java.lang.String dumpDynamicProperties():58:58 -> e
    1:1:java.lang.String dumpStaticProperties():62:62 -> f
ai.datatower.analytics.utils.CommonPropsUtil$init$1 -> ai.datatower.analytics.utils.c$a:
# {"id":"sourceFile","fileName":"CommonPropsUtil.kt"}
    ai.datatower.analytics.utils.CommonPropsUtil this$0 -> c
    java.lang.Object result -> b
    int label -> d
    java.lang.Object L$0 -> a
ai.datatower.analytics.utils.CommonPropsUtil$restoreCommonProperties$1 -> ai.datatower.analytics.utils.c$b:
# {"id":"sourceFile","fileName":"CommonPropsUtil.kt"}
    ai.datatower.analytics.utils.CommonPropsUtil this$0 -> c
    java.lang.Object result -> b
    int label -> d
    java.lang.Object L$0 -> a
ai.datatower.analytics.utils.DataCheck -> ai.datatower.analytics.utils.d:
# {"id":"sourceFile","fileName":"DataCheck.kt"}
    ai.datatower.analytics.utils.DataCheck INSTANCE -> a
    1:1:void <init>():5:5 -> <init>
    1:7:java.lang.String findFirstNonJsonArray(org.json.JSONObject):7:13 -> a
    8:8:java.lang.String findFirstNonJsonArray(org.json.JSONObject) -> a
ai.datatower.analytics.utils.DataEncryption -> ai.datatower.analytics.utils.e:
# {"id":"sourceFile","fileName":"DataEncryption.kt"}
    kotlin.Lazy instance$delegate -> b
    ai.datatower.analytics.utils.DataEncryption$Companion Companion -> a
    1:1:void ai.datatower.analytics.utils.DataEncryption$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:18:void <clinit>():0:16 -> <clinit>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():14:14 -> <init>
    1:1:kotlin.Lazy access$getInstance$delegate$cp():14:14 -> a
    2:8:java.lang.String str2Sha1Str(java.lang.String):23:29 -> a
    9:14:java.lang.String str2Sha1Str(java.lang.String):27:32 -> a
    15:31:java.lang.String toHex(byte[]):37:53 -> a
    32:39:java.lang.String toHex(byte[]):40:47 -> a
    40:40:java.lang.String toHex(byte[]):37:37 -> a
ai.datatower.analytics.utils.DataEncryption$Companion -> ai.datatower.analytics.utils.e$b:
# {"id":"sourceFile","fileName":"DataEncryption.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():15:15 -> <init>
    1:1:ai.datatower.analytics.utils.DataEncryption getInstance():16:16 -> a
ai.datatower.analytics.utils.DataEncryption$Companion$instance$2 -> ai.datatower.analytics.utils.e$a:
# {"id":"sourceFile","fileName":"DataEncryption.kt"}
    ai.datatower.analytics.utils.DataEncryption$Companion$instance$2 INSTANCE -> a
    1:1:ai.datatower.analytics.utils.DataEncryption invoke():17:17 -> a
    2:2:void ai.datatower.analytics.utils.DataEncryption.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    2:2:ai.datatower.analytics.utils.DataEncryption invoke():17 -> a
    1:1:ai.datatower.analytics.utils.DataEncryption invoke():17:17 -> invoke
    1:1:java.lang.Object invoke():16 -> invoke
    2:2:void ai.datatower.analytics.utils.DataEncryption.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> invoke
    2:2:ai.datatower.analytics.utils.DataEncryption invoke():17 -> invoke
    2:2:java.lang.Object invoke():16 -> invoke
ai.datatower.analytics.utils.DataUtils -> ai.datatower.analytics.utils.f:
# {"id":"sourceFile","fileName":"DataUtils.java"}
    1:1:void <init>():32:32 -> <init>
    1:5:java.lang.String getSession():43:47 -> a
    6:7:double getTimezoneOffset(long,java.util.TimeZone):52:53 -> a
    8:23:void mergeJSONObject(org.json.JSONObject,org.json.JSONObject,java.util.TimeZone):58:73 -> a
    24:45:org.json.JSONObject formatJSONObject(org.json.JSONObject,java.util.TimeZone):81:102 -> a
    46:62:org.json.JSONArray formatJSONArray(org.json.JSONArray,java.util.TimeZone):111:127 -> a
    1:3:java.lang.String getUUID():36:38 -> b
ai.datatower.analytics.utils.DeviceUtils -> ai.datatower.analytics.utils.g:
# {"id":"sourceFile","fileName":"DeviceUtils.kt"}
    ai.datatower.analytics.utils.DeviceUtils INSTANCE -> a
    java.util.ArrayList sManufacturer -> c
    java.lang.String TAG -> b
    1:1:void <clinit>():24:24 -> <clinit>
    1:1:void <init>():21:21 -> <init>
    1:1:int getNaturalHeight(int,int,int):0:0 -> a
    2:260:java.lang.String getBrand():53:311 -> a
    261:534:java.lang.String getBrand():53:326 -> a
    535:535:java.lang.String getBrand():304:304 -> a
    536:541:java.lang.String getAndroidID(android.content.Context):134:139 -> a
    542:558:boolean checkHasPermission(android.content.Context,java.lang.String):220:236 -> a
    559:570:boolean checkHasPermission(android.content.Context,java.lang.String):234:245 -> a
    571:571:boolean checkHasPermission(android.content.Context,java.lang.String):244:244 -> a
    572:572:boolean checkHasPermission(android.content.Context,java.lang.String):242:242 -> a
    573:584:boolean checkHasPermission(android.content.Context,java.lang.String):240:251 -> a
    1:1:int getNaturalWidth(int,int,int):0:0 -> b
    2:3:int getDensityDpi(android.content.Context):65:66 -> b
    4:5:java.util.Locale getLocale():184:185 -> b
    6:9:java.util.Locale getLocale():184:187 -> b
    10:10:java.util.Locale getLocale():186:186 -> b
    1:13:int[] getDeviceSize(android.content.Context):77:89 -> c
    14:28:int[] getDeviceSize(android.content.Context):81:95 -> c
    29:29:java.lang.String getLocaleLanguage():193:193 -> c
    1:230:java.lang.String getManufacturer():36:265 -> d
    231:475:java.lang.String getManufacturer():36:280 -> d
    476:476:java.lang.String getManufacturer():258:258 -> d
    477:485:java.lang.String getManufacturer():38:46 -> d
    486:494:java.lang.String getLocalCountry(android.content.Context):171:179 -> d
    495:495:java.lang.String getLocalCountry(android.content.Context):171:171 -> d
    1:238:java.lang.String getModel():51:288 -> e
    239:491:java.lang.String getModel():51:303 -> e
    492:492:java.lang.String getModel():281:281 -> e
    493:498:java.lang.String getMcc(android.content.Context):147:152 -> e
    499:499:java.lang.String getMcc(android.content.Context):147:147 -> e
    1:1:java.lang.String getOS():32:32 -> f
    2:7:java.lang.String getMnc(android.content.Context):157:162 -> f
    8:8:java.lang.String getMnc(android.content.Context):157:157 -> f
    1:3:java.lang.String getUserAgent(android.content.Context):201:203 -> g
ai.datatower.analytics.utils.DeviceUtils$sManufacturer$1 -> ai.datatower.analytics.utils.g$a:
# {"id":"sourceFile","fileName":"DeviceUtils.kt"}
    1:5:void <init>():24:28 -> <init>
    1:1:boolean contains(java.lang.String):24:24 -> a
    2:2:int getSize():24:24 -> a
    3:3:java.lang.String removeAt(int):24:24 -> a
    3:3:java.lang.String remove(int):24 -> a
    1:1:int indexOf(java.lang.String):24:24 -> b
    2:2:java.lang.String removeAt(int):24:24 -> b
    1:1:int lastIndexOf(java.lang.String):24:24 -> c
    1:1:boolean contains(java.lang.Object):24:24 -> contains
    2:2:boolean contains(java.lang.String):24:24 -> contains
    2:2:boolean contains(java.lang.Object):24 -> contains
    1:1:boolean remove(java.lang.String):24:24 -> d
    1:1:int indexOf(java.lang.Object):24:24 -> indexOf
    2:2:int indexOf(java.lang.String):24:24 -> indexOf
    2:2:int indexOf(java.lang.Object):24 -> indexOf
    1:1:int lastIndexOf(java.lang.Object):24:24 -> lastIndexOf
    2:2:int lastIndexOf(java.lang.String):24:24 -> lastIndexOf
    2:2:int lastIndexOf(java.lang.Object):24 -> lastIndexOf
    1:1:boolean remove(java.lang.Object):24:24 -> remove
    2:2:boolean remove(java.lang.String):24:24 -> remove
    2:2:boolean remove(java.lang.Object):24 -> remove
    1:1:int getSize():24:24 -> size
    1:1:int size():24 -> size
ai.datatower.analytics.utils.EmulatorDetector -> ai.datatower.analytics.utils.h:
# {"id":"sourceFile","fileName":"EmulatorDetector.java"}
    1:1:void <init>():7:7 -> <init>
    1:4:boolean isEmulator():15:18 -> a
    5:9:java.lang.String getProp(java.lang.String):35:39 -> a
    1:3:boolean isEmulatorFromAbi():27:29 -> b
    1:2:boolean mayOnEmulatorViaQEMU():22:23 -> c
ai.datatower.analytics.utils.EventUtils -> ai.datatower.analytics.utils.i:
# {"id":"sourceFile","fileName":"EventUtils.kt"}
    java.util.regex.Pattern KEY_PATTERN -> c
    ai.datatower.analytics.utils.EventUtils INSTANCE -> a
    java.lang.String TAG -> b
    java.lang.String ua -> d
    1:3:void <clinit>():19:21 -> <clinit>
    1:1:void <init>():16:16 -> <init>
    1:1:java.lang.String getUa():21:21 -> a
    2:23:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):27:48 -> a
    24:25:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):27:28 -> a
    26:26:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getMeta():60:60 -> a
    26:26:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):30 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    27:27:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):30:30 -> a
    28:28:java.lang.Object ai.datatower.analytics.taskqueue.AsyncTaskRescheduled.await(kotlin.coroutines.Continuation):55:55 -> a
    28:28:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):30 -> a
    29:29:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):30:30 -> a
    30:30:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getMeta():60:60 -> a
    30:30:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):33 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    31:31:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):33:33 -> a
    32:32:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getMeta():60:60 -> a
    32:32:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):36 -> a
    33:33:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):36:36 -> a
    34:34:java.lang.String ai.datatower.analytics.config.AbstractAnalyticsConfig.getMAppId():49:49 -> a
    34:34:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):36 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    35:38:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):36:39 -> a
    39:39:boolean ai.datatower.analytics.config.AbstractAnalyticsConfig.getMEnabledDebug():29:29 -> a
    39:39:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):39 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    40:40:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getMeta():60:60 -> a
    40:40:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):40 -> a
    41:45:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):40:44 -> a
    46:46:java.lang.Object ai.datatower.analytics.taskqueue.AsyncTaskRescheduled.await(kotlin.coroutines.Continuation):55:55 -> a
    46:46:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):44 -> a
    47:48:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):44:45 -> a
    49:49:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getMeta():60:60 -> a
    49:49:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):45 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    50:53:java.lang.Object getEventInfo(android.content.Context,ai.datatower.analytics.data.EventDataAdapter,kotlin.coroutines.Continuation):45:48 -> a
    54:54:void getCommonProperties(android.content.Context):76:76 -> a
    55:55:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getUserActive():62:62 -> a
    55:55:void getCommonProperties(android.content.Context):77 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    56:56:ai.datatower.analytics.utils.PresetPropManager$PPMap ai.datatower.analytics.utils.PresetPropManager.getCommon():61:61 -> a
    56:56:void getCommonProperties(android.content.Context):78 -> a
    57:159:void getCommonProperties(android.content.Context):81:183 -> a
    160:160:java.lang.String ai.datatower.analytics.utils.NetworkUtil.getNetworkTypeString(android.app.Application):90:90 -> a
    160:160:void getCommonProperties(android.content.Context):183 -> a
    161:173:void getCommonProperties(android.content.Context):184:196 -> a
    174:180:void getCommonProperties(android.content.Context):195:201 -> a
    181:181:void getCommonProperties(android.content.Context):183:183 -> a
    182:196:boolean isValidProperty(org.json.JSONObject):226:240 -> a
    197:210:boolean isValidProperty(org.json.JSONObject):238:251 -> a
    211:212:boolean isValidProperty(org.json.JSONObject):250:251 -> a
    213:214:boolean isValidProperty(org.json.JSONObject):250:251 -> a
    215:215:boolean isValidProperty(org.json.JSONObject):250:250 -> a
    216:231:boolean isValidProperty(org.json.JSONObject):248:263 -> a
    232:232:boolean isValidProperty(org.json.JSONObject):228:228 -> a
    233:233:boolean hasPresetTag(java.lang.String):271:271 -> a
    1:6:java.util.Map getLatestUserProperties(android.content.Context):52:57 -> b
    7:7:boolean ai.datatower.analytics.config.AbstractAnalyticsConfig.getMEnabledDebug():29:29 -> b
    7:7:java.util.Map getLatestUserProperties(android.content.Context):57 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:java.util.Map getLatestUserProperties(android.content.Context):57:57 -> b
    9:18:java.util.Map getLatestUserProperties(android.content.Context):54:63 -> b
    19:28:java.util.Map getLatestUserProperties(android.content.Context):60:69 -> b
    29:29:java.util.Map getLatestUserProperties(android.content.Context):66:66 -> b
    30:40:boolean isValidEventName(java.lang.String):206:216 -> b
    41:41:boolean isValidEventName(java.lang.String):215:215 -> b
    42:42:boolean isValidEventName(java.lang.String):207:207 -> b
    1:1:void initUa(android.content.Context):24:24 -> c
ai.datatower.analytics.utils.EventUtils$getEventInfo$1 -> ai.datatower.analytics.utils.i$a:
# {"id":"sourceFile","fileName":"EventUtils.kt"}
    java.lang.Object result -> f
    java.lang.Object L$3 -> d
    int label -> h
    java.lang.Object L$4 -> e
    java.lang.Object L$1 -> b
    java.lang.Object L$2 -> c
    java.lang.Object L$0 -> a
    ai.datatower.analytics.utils.EventUtils this$0 -> g
ai.datatower.analytics.utils.JsonObjectUtilKt -> ai.datatower.analytics.utils.j:
# {"id":"sourceFile","fileName":"JsonObjectUtil.kt"}
    1:15:java.util.Map toMap(org.json.JSONObject):6:20 -> a
    16:32:java.util.Map toMap(org.json.JSONObject):7:23 -> a
    33:37:java.util.Map toMap(org.json.JSONObject):9:13 -> a
    38:38:java.util.Map toMap(org.json.JSONObject):7:7 -> a
ai.datatower.analytics.utils.JsonUtils -> ai.datatower.analytics.utils.k:
# {"id":"sourceFile","fileName":"JsonUtils.java"}
    byte TYPE_INT -> b
    byte TYPE_BOOLEAN -> a
    byte TYPE_DOUBLE -> d
    byte TYPE_LONG -> c
    byte TYPE_JSON_OBJECT -> f
    byte TYPE_STRING -> e
    byte TYPE_JSON_ARRAY -> g
    1:2:void <init>():23:24 -> <init>
    1:1:boolean getBoolean(org.json.JSONObject,java.lang.String):29:29 -> a
    2:2:boolean getBoolean(org.json.JSONObject,java.lang.String,boolean):35:35 -> a
    3:3:boolean getBoolean(java.lang.String,java.lang.String):40:40 -> a
    4:4:boolean getBoolean(java.lang.String,java.lang.String,boolean):46:46 -> a
    5:5:int getInt(org.json.JSONObject,java.lang.String,int):57:57 -> a
    6:6:int getInt(java.lang.String,java.lang.String,int):68:68 -> a
    7:7:long getLong(org.json.JSONObject,java.lang.String,long):79:79 -> a
    8:8:long getLong(java.lang.String,java.lang.String,long):90:90 -> a
    9:9:double getDouble(org.json.JSONObject,java.lang.String,double):101:101 -> a
    10:10:double getDouble(java.lang.String,java.lang.String,double):112:112 -> a
    11:11:java.lang.String getString(org.json.JSONObject,java.lang.String,java.lang.String):123:123 -> a
    12:12:java.lang.String getString(java.lang.String,java.lang.String,java.lang.String):134:134 -> a
    13:13:org.json.JSONObject getJSONObject(org.json.JSONObject,java.lang.String,org.json.JSONObject):140:140 -> a
    14:14:org.json.JSONObject getJSONObject(java.lang.String,java.lang.String,org.json.JSONObject):146:146 -> a
    15:15:org.json.JSONArray getJSONArray(org.json.JSONObject,java.lang.String,org.json.JSONArray):152:152 -> a
    16:16:org.json.JSONArray getJSONArray(java.lang.String,java.lang.String,org.json.JSONArray):158:158 -> a
    17:42:java.lang.Object getValueByType(org.json.JSONObject,java.lang.String,java.lang.Object,byte):165:190 -> a
    43:50:java.lang.Object getValueByType(java.lang.String,java.lang.String,java.lang.Object,byte):199:206 -> a
    51:51:java.lang.String formatJson(java.lang.String):212:212 -> a
    52:63:java.lang.String formatJson(java.lang.String,int):217:228 -> a
    64:70:org.json.JSONArray toJSONArray(java.lang.Object):275:281 -> a
    71:71:org.json.JSONArray toJSONArray(java.lang.Object):277:277 -> a
    1:1:double getDouble(org.json.JSONObject,java.lang.String):95:95 -> b
    2:2:double getDouble(java.lang.String,java.lang.String):106:106 -> b
    3:33:java.lang.Object wrap(java.lang.Object):234:264 -> b
    1:1:int getInt(org.json.JSONObject,java.lang.String):51:51 -> c
    2:2:int getInt(java.lang.String,java.lang.String):62:62 -> c
    1:1:long getLong(org.json.JSONObject,java.lang.String):73:73 -> d
    2:2:long getLong(java.lang.String,java.lang.String):84:84 -> d
    1:1:java.lang.String getString(org.json.JSONObject,java.lang.String):117:117 -> e
    2:2:java.lang.String getString(java.lang.String,java.lang.String):128:128 -> e
ai.datatower.analytics.utils.LogUtils -> ai.datatower.analytics.utils.LogUtils:
# {"id":"sourceFile","fileName":"LogUtils.java"}
    int XML -> j
    int FILE -> h
    java.lang.String LINE_SEP -> l
    int A -> f
    java.lang.String MIDDLE_CORNER -> n
    int W -> d
    java.lang.String BOTTOM_CORNER -> p
    int D -> b
    java.lang.String MIDDLE_DIVIDER -> r
    java.lang.String MIDDLE_BORDER -> t
    java.text.SimpleDateFormat simpleDateFormat -> B
    java.lang.String NULL -> x
    java.lang.String PLACEHOLDER -> z
    java.lang.String FILE_SEP -> k
    char[] T -> g
    java.lang.String TOP_CORNER -> m
    int JSON -> i
    java.lang.String LEFT_BORDER -> o
    java.lang.String SIDE_DIVIDER -> q
    int E -> e
    java.lang.String TOP_BORDER -> s
    int I -> c
    java.lang.String BOTTOM_BORDER -> u
    int V -> a
    java.util.HashMap I_FORMATTER_MAP -> C
    java.lang.String NOTHING -> w
    java.lang.String ARGS -> y
    int MAX_LEN -> v
    ai.datatower.analytics.utils.LogUtils$Config CONFIG -> A
    1:25:void <clinit>():55:79 -> <clinit>
    26:26:void ai.datatower.analytics.utils.LogUtils$Config.<init>(ai.datatower.analytics.utils.LogUtils$1):478:478 -> <clinit>
    26:26:void <clinit>():79 -> <clinit>
    27:31:void <clinit>():79:83 -> <clinit>
    1:2:void <init>():85:86 -> <init>
    1:1:boolean access$400(java.lang.String):41:41 -> a
    2:2:java.lang.Class access$500(ai.datatower.analytics.utils.LogUtils$IFormatter):41:41 -> a
    3:3:java.util.HashMap access$600():41:41 -> a
    4:4:java.lang.String access$900(java.lang.Object):41:41 -> a
    5:5:void a(java.lang.Object[]):138:138 -> a
    6:6:void a(java.lang.String,java.lang.Object[]):142:142 -> a
    7:7:void file(int,java.lang.Object):150:150 -> a
    8:8:void file(java.lang.String,java.lang.Object):154:154 -> a
    9:9:void file(int,java.lang.String,java.lang.Object):158:158 -> a
    10:10:void xml(int,java.lang.String):182:182 -> a
    11:11:void xml(java.lang.String,java.lang.String):186:186 -> a
    12:12:void log(int,java.lang.String,java.lang.Object[]):194:194 -> a
    13:13:boolean ai.datatower.analytics.utils.LogUtils$Config.isLogSwitch():579:579 -> a
    13:13:void log(int,java.lang.String,java.lang.Object[]):194 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:14:boolean ai.datatower.analytics.utils.LogUtils$Config.isLog2ConsoleSwitch():583:583 -> a
    14:14:void log(int,java.lang.String,java.lang.Object[]):196 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:15:int ai.datatower.analytics.utils.LogUtils$Config.access$100(ai.datatower.analytics.utils.LogUtils$Config):478:478 -> a
    15:15:void log(int,java.lang.String,java.lang.Object[]):197 -> a
    16:17:void log(int,java.lang.String,java.lang.Object[]):199:200 -> a
    18:18:ai.datatower.analytics.utils.LogUtils$OnConsoleOutputListener ai.datatower.analytics.utils.LogUtils$Config.access$200(ai.datatower.analytics.utils.LogUtils$Config):478:478 -> a
    18:18:void log(int,java.lang.String,java.lang.Object[]):201 -> a
    19:19:void log(int,java.lang.String,java.lang.Object[]):202:202 -> a
    20:20:boolean ai.datatower.analytics.utils.LogUtils$Config.isLog2ConsoleSwitch():583:583 -> a
    20:20:void log(int,java.lang.String,java.lang.Object[]):204 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    21:21:int ai.datatower.analytics.utils.LogUtils$Config.access$100(ai.datatower.analytics.utils.LogUtils$Config):478:478 -> a
    21:21:void log(int,java.lang.String,java.lang.Object[]):204 -> a
    22:22:void log(int,java.lang.String,java.lang.Object[]):205:205 -> a
    23:36:java.lang.String getFileName(java.lang.StackTraceElement):272:285 -> a
    37:56:java.lang.String processBody(int,java.lang.Object[]):289:308 -> a
    57:57:void print2Console(int,java.lang.String,java.lang.String[],java.lang.String):334:334 -> a
    58:58:boolean ai.datatower.analytics.utils.LogUtils$Config.isSingleTagSwitch():601:601 -> a
    58:58:void print2Console(int,java.lang.String,java.lang.String[],java.lang.String):334 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    59:64:void print2Console(int,java.lang.String,java.lang.String[],java.lang.String):335:340 -> a
    65:65:void printBorder(int,java.lang.String,boolean):345:345 -> a
    66:66:boolean ai.datatower.analytics.utils.LogUtils$Config.isLogBorderSwitch():597:597 -> a
    66:66:void printBorder(int,java.lang.String,boolean):345 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    67:67:void printBorder(int,java.lang.String,boolean):346:346 -> a
    68:68:void print2Console(int,java.lang.String,java.lang.String):453:453 -> a
    68:68:void printBorder(int,java.lang.String,boolean):346 -> a
    69:70:void printHead(int,java.lang.String,java.lang.String[]):352:353 -> a
    71:71:boolean ai.datatower.analytics.utils.LogUtils$Config.isLogBorderSwitch():597:597 -> a
    71:71:void printHead(int,java.lang.String,java.lang.String[]):353 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    72:72:void printHead(int,java.lang.String,java.lang.String[]):353:353 -> a
    73:73:void print2Console(int,java.lang.String,java.lang.String):453:453 -> a
    73:73:void printHead(int,java.lang.String,java.lang.String[]):353 -> a
    74:74:void printHead(int,java.lang.String,java.lang.String[]):355:355 -> a
    75:75:boolean ai.datatower.analytics.utils.LogUtils$Config.isLogBorderSwitch():597:597 -> a
    75:75:void printHead(int,java.lang.String,java.lang.String[]):355 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    76:76:void printHead(int,java.lang.String,java.lang.String[]):355:355 -> a
    77:77:void print2Console(int,java.lang.String,java.lang.String):453:453 -> a
    77:77:void printHead(int,java.lang.String,java.lang.String[]):355 -> a
    78:78:void print2Console(int,java.lang.String,java.lang.String):453:453 -> a
    1:1:char[] access$700():41:41 -> b
    2:2:void d(java.lang.Object[]):106:106 -> b
    3:3:void d(java.lang.String,java.lang.Object[]):110:110 -> b
    4:4:void file(java.lang.Object):146:146 -> b
    5:5:void json(java.lang.String,java.lang.Object):170:170 -> b
    6:6:void json(int,java.lang.String,java.lang.Object):174:174 -> b
    7:10:java.lang.String formatObject(int,java.lang.Object):312:315 -> b
    11:23:void printMsg(int,java.lang.String,java.lang.String):360:372 -> b
    24:25:java.lang.String processSingleTagMsg(int,java.lang.String,java.lang.String[],java.lang.String):392:393 -> b
    26:26:boolean ai.datatower.analytics.utils.LogUtils$Config.isLogBorderSwitch():597:597 -> b
    26:26:java.lang.String processSingleTagMsg(int,java.lang.String,java.lang.String[],java.lang.String):393 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    27:48:java.lang.String processSingleTagMsg(int,java.lang.String,java.lang.String[],java.lang.String):394:415 -> b
    49:50:boolean isSpace(java.lang.String):468:469 -> b
    51:71:java.lang.Class getTypeClassFromParadigm(ai.datatower.analytics.utils.LogUtils$IFormatter):927:947 -> b
    1:1:java.lang.String access$800():41:41 -> c
    2:2:void e(java.lang.Object[]):130:130 -> c
    3:3:void e(java.lang.String,java.lang.Object[]):134:134 -> c
    4:4:void json(int,java.lang.Object):166:166 -> c
    5:5:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):211:211 -> c
    6:6:boolean ai.datatower.analytics.utils.LogUtils$Config.access$300(ai.datatower.analytics.utils.LogUtils$Config):478:478 -> c
    6:6:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):211 -> c
    7:7:boolean ai.datatower.analytics.utils.LogUtils$Config.isLogHeadSwitch():592:592 -> c
    7:7:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):211 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:10:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):212:214 -> c
    11:11:int ai.datatower.analytics.utils.LogUtils$Config.getStackOffset():615:615 -> c
    11:11:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):215 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:14:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):216:218 -> c
    15:15:boolean ai.datatower.analytics.utils.LogUtils$Config.access$300(ai.datatower.analytics.utils.LogUtils$Config):478:478 -> c
    15:15:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):219 -> c
    16:23:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):219:226 -> c
    24:24:boolean ai.datatower.analytics.utils.LogUtils$Config.access$300(ai.datatower.analytics.utils.LogUtils$Config):478:478 -> c
    24:24:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):227 -> c
    25:27:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):227:229 -> c
    28:28:boolean ai.datatower.analytics.utils.LogUtils$Config.isLogHeadSwitch():592:592 -> c
    28:28:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):231 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    29:36:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):232:239 -> c
    37:44:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):234:241 -> c
    45:45:int ai.datatower.analytics.utils.LogUtils$Config.getStackDeep():611:611 -> c
    45:45:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):242 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    46:50:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):243:247 -> c
    51:66:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):246:261 -> c
    67:79:ai.datatower.analytics.utils.LogUtils$TagHead processTagAndHead(java.lang.String):256:268 -> c
    80:85:java.lang.String formatObject(java.lang.Object):319:324 -> c
    86:86:java.lang.String ai.datatower.analytics.utils.LogUtils$LogFormatter.object2String(java.lang.Object):678:678 -> c
    86:86:java.lang.String formatObject(java.lang.Object):327 -> c
    87:88:void printSingleTagMsg(int,java.lang.String,java.lang.String):419:420 -> c
    89:89:boolean ai.datatower.analytics.utils.LogUtils$Config.isLogBorderSwitch():597:597 -> c
    89:89:void printSingleTagMsg(int,java.lang.String,java.lang.String):420 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    90:93:void printSingleTagMsg(int,java.lang.String,java.lang.String):420:423 -> c
    94:94:void print2Console(int,java.lang.String,java.lang.String):453:453 -> c
    94:94:void printSingleTagMsg(int,java.lang.String,java.lang.String):423 -> c
    95:96:void printSingleTagMsg(int,java.lang.String,java.lang.String):426:427 -> c
    97:97:void print2Console(int,java.lang.String,java.lang.String):453:453 -> c
    97:97:void printSingleTagMsg(int,java.lang.String,java.lang.String):426 -> c
    98:99:void printSingleTagMsg(int,java.lang.String,java.lang.String):432:433 -> c
    100:100:void print2Console(int,java.lang.String,java.lang.String):453:453 -> c
    100:100:void printSingleTagMsg(int,java.lang.String,java.lang.String):432 -> c
    101:101:void printSingleTagMsg(int,java.lang.String,java.lang.String):436:436 -> c
    102:102:void print2Console(int,java.lang.String,java.lang.String):453:453 -> c
    102:102:void printSingleTagMsg(int,java.lang.String,java.lang.String):436 -> c
    103:104:void printSingleTagMsg(int,java.lang.String,java.lang.String):439:440 -> c
    105:105:void print2Console(int,java.lang.String,java.lang.String):453:453 -> c
    105:105:void printSingleTagMsg(int,java.lang.String,java.lang.String):439 -> c
    106:106:void printSingleTagMsg(int,java.lang.String,java.lang.String):444:444 -> c
    107:107:void print2Console(int,java.lang.String,java.lang.String):453:453 -> c
    107:107:void printSingleTagMsg(int,java.lang.String,java.lang.String):444 -> c
    108:108:void print2Console(int,java.lang.String,java.lang.String):453:453 -> c
    108:108:void printSingleTagMsg(int,java.lang.String,java.lang.String):448 -> c
    1:1:ai.datatower.analytics.utils.LogUtils$Config getConfig():90:90 -> d
    2:2:void i(java.lang.Object[]):114:114 -> d
    3:3:void i(java.lang.String,java.lang.Object[]):118:118 -> d
    4:4:void xml(java.lang.String):178:178 -> d
    5:5:void printSubMsg(int,java.lang.String,java.lang.String):377:377 -> d
    6:6:boolean ai.datatower.analytics.utils.LogUtils$Config.isLogBorderSwitch():597:597 -> d
    6:6:void printSubMsg(int,java.lang.String,java.lang.String):377 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void print2Console(int,java.lang.String,java.lang.String):453:453 -> d
    7:7:void printSubMsg(int,java.lang.String,java.lang.String):378 -> d
    8:10:void printSubMsg(int,java.lang.String,java.lang.String):382:384 -> d
    11:11:void print2Console(int,java.lang.String,java.lang.String):453:453 -> d
    11:11:void printSubMsg(int,java.lang.String,java.lang.String):384 -> d
    12:38:java.lang.Class getClassFromObject(java.lang.Object):953:979 -> d
    1:1:void printStackTrace(java.lang.Object[]):95:95 -> e
    2:2:void v(java.lang.String,java.lang.Object[]):102:102 -> e
    3:3:void json(java.lang.Object):162:162 -> e
    4:4:void xml(int,java.lang.String,java.lang.String):190:190 -> e
    1:1:void v(java.lang.Object[]):98:98 -> f
    2:2:void w(java.lang.String,java.lang.Object[]):126:126 -> f
    1:1:void w(java.lang.Object[]):122:122 -> g
ai.datatower.analytics.utils.LogUtils$1 -> ai.datatower.analytics.utils.LogUtils$a:
# {"id":"sourceFile","fileName":"LogUtils.java"}
ai.datatower.analytics.utils.LogUtils$Config -> ai.datatower.analytics.utils.LogUtils$b:
# {"id":"sourceFile","fileName":"LogUtils.java"}
    ai.datatower.analytics.utils.LogUtils$OnConsoleOutputListener mOnConsoleOutputListener -> l
    int mStackOffset -> j
    int mSaveDays -> k
    int mConsoleFilter -> h
    int mStackDeep -> i
    boolean mLogHeadSwitch -> e
    boolean mLogBorderSwitch -> f
    boolean mSingleTagSwitch -> g
    boolean mLogSwitch -> a
    java.lang.String mGlobalTag -> c
    boolean mLog2ConsoleSwitch -> b
    boolean mTagIsSpace -> d
    1:1:void <init>(ai.datatower.analytics.utils.LogUtils$1):478:478 -> <init>
    2:2:void <init>():499:499 -> <init>
    3:15:void <init>():481:493 -> <init>
    1:1:int access$100(ai.datatower.analytics.utils.LogUtils$Config):478:478 -> a
    2:7:ai.datatower.analytics.utils.LogUtils$Config setGlobalTag(java.lang.String):514:519 -> a
    8:8:ai.datatower.analytics.utils.LogUtils$Config setBorderSwitch(boolean):532:532 -> a
    9:9:ai.datatower.analytics.utils.LogUtils$Config setConsoleFilter(int):542:542 -> a
    10:10:ai.datatower.analytics.utils.LogUtils$Config addFormatter(ai.datatower.analytics.utils.LogUtils$IFormatter):564:564 -> a
    11:11:java.lang.Class ai.datatower.analytics.utils.LogUtils.access$500(ai.datatower.analytics.utils.LogUtils$IFormatter):41:41 -> a
    11:11:ai.datatower.analytics.utils.LogUtils$Config addFormatter(ai.datatower.analytics.utils.LogUtils$IFormatter):564 -> a
    12:12:ai.datatower.analytics.utils.LogUtils$Config addFormatter(ai.datatower.analytics.utils.LogUtils$IFormatter):564:564 -> a
    13:13:ai.datatower.analytics.utils.LogUtils$Config setOnConsoleOutputListener(ai.datatower.analytics.utils.LogUtils$OnConsoleOutputListener):571:571 -> a
    14:14:char getConsoleFilter():605:605 -> a
    1:1:ai.datatower.analytics.utils.LogUtils$OnConsoleOutputListener access$200(ai.datatower.analytics.utils.LogUtils$Config):478:478 -> b
    2:2:ai.datatower.analytics.utils.LogUtils$Config setConsoleSwitch(boolean):509:509 -> b
    3:3:ai.datatower.analytics.utils.LogUtils$Config setSaveDays(int):558:558 -> b
    4:5:java.lang.String getGlobalTag():587:588 -> b
    1:1:boolean access$300(ai.datatower.analytics.utils.LogUtils$Config):478:478 -> c
    2:2:ai.datatower.analytics.utils.LogUtils$Config setLogHeadSwitch(boolean):525:525 -> c
    3:3:ai.datatower.analytics.utils.LogUtils$Config setStackDeep(int):548:548 -> c
    4:4:int getSaveDays():619:619 -> c
    1:1:ai.datatower.analytics.utils.LogUtils$Config setLogSwitch(boolean):504:504 -> d
    2:2:ai.datatower.analytics.utils.LogUtils$Config setStackOffset(int):553:553 -> d
    3:3:int getStackDeep():611:611 -> d
    1:1:ai.datatower.analytics.utils.LogUtils$Config setSingleTagSwitch(boolean):537:537 -> e
    2:2:int getStackOffset():615:615 -> e
    1:1:boolean isLog2ConsoleSwitch():583:583 -> f
    1:1:boolean isLogBorderSwitch():597:597 -> g
    1:1:boolean isLogHeadSwitch():592:592 -> h
    1:1:boolean isLogSwitch():579:579 -> i
    1:1:boolean isSingleTagSwitch():601:601 -> j
    1:2:java.lang.String toString():629:630 -> toString
    3:3:boolean isLogSwitch():579:579 -> toString
    3:3:java.lang.String toString():630 -> toString
    4:4:java.lang.String toString():630:630 -> toString
    5:5:java.lang.String ai.datatower.analytics.utils.LogUtils.access$800():41:41 -> toString
    5:5:java.lang.String toString():631 -> toString
    6:6:java.lang.String toString():631:631 -> toString
    7:7:boolean isLog2ConsoleSwitch():583:583 -> toString
    7:7:java.lang.String toString():631 -> toString
    8:10:java.lang.String toString():631:633 -> toString
    11:11:boolean isLogHeadSwitch():592:592 -> toString
    11:11:java.lang.String toString():633 -> toString
    12:13:java.lang.String toString():633:634 -> toString
    14:14:boolean isLogBorderSwitch():597:597 -> toString
    14:14:java.lang.String toString():634 -> toString
    15:16:java.lang.String toString():634:635 -> toString
    17:17:boolean isSingleTagSwitch():601:601 -> toString
    17:17:java.lang.String toString():635 -> toString
    18:20:java.lang.String toString():635:637 -> toString
    21:21:int getStackDeep():611:611 -> toString
    21:21:java.lang.String toString():637 -> toString
    22:23:java.lang.String toString():637:638 -> toString
    24:24:int getStackOffset():615:615 -> toString
    24:24:java.lang.String toString():638 -> toString
    25:26:java.lang.String toString():638:639 -> toString
    27:27:int getSaveDays():619:619 -> toString
    27:27:java.lang.String toString():639 -> toString
    28:29:java.lang.String toString():639:640 -> toString
    30:30:java.util.HashMap ai.datatower.analytics.utils.LogUtils.access$600():41:41 -> toString
    30:30:java.lang.String toString():640 -> toString
    31:32:java.lang.String toString():640:641 -> toString
ai.datatower.analytics.utils.LogUtils$IFileWriter -> ai.datatower.analytics.utils.LogUtils$c:
# {"id":"sourceFile","fileName":"LogUtils.java"}
    void write(java.lang.String,java.lang.String) -> a
ai.datatower.analytics.utils.LogUtils$IFormatter -> ai.datatower.analytics.utils.LogUtils$d:
# {"id":"sourceFile","fileName":"LogUtils.java"}
    1:1:void <init>():647:647 -> <init>
    java.lang.String format(java.lang.Object) -> a
ai.datatower.analytics.utils.LogUtils$LogFormatter -> ai.datatower.analytics.utils.LogUtils$e:
# {"id":"sourceFile","fileName":"LogUtils.java"}
    1:1:void <init>():675:675 -> <init>
    1:11:java.lang.String object2String(java.lang.Object,int):682:692 -> a
    12:28:java.lang.String bundle2String(android.os.Bundle):696:712 -> a
    29:131:java.lang.String intent2String(android.content.Intent):717:819 -> a
    132:166:void clipData2String(android.content.ClipData,java.lang.StringBuilder):823:857 -> a
    167:178:java.lang.String formatJson(java.lang.String):871:882 -> a
    179:198:java.lang.String array2String(java.lang.Object):903:922 -> a
    1:2:java.lang.String object2Json(java.lang.Object):861:862 -> b
    3:3:java.lang.String ai.datatower.analytics.utils.JsonUtils.formatJson(java.lang.String):212:212 -> b
    3:3:java.lang.String object2Json(java.lang.Object):862 -> b
    4:4:java.lang.String object2Json(java.lang.Object):864:864 -> b
    5:13:java.lang.String formatXml(java.lang.String):889:897 -> b
    1:1:java.lang.String object2String(java.lang.Object):678:678 -> c
ai.datatower.analytics.utils.LogUtils$OnConsoleOutputListener -> ai.datatower.analytics.utils.LogUtils$OnConsoleOutputListener:
# {"id":"sourceFile","fileName":"LogUtils.java"}
ai.datatower.analytics.utils.LogUtils$OnFileOutputListener -> ai.datatower.analytics.utils.LogUtils$OnFileOutputListener:
# {"id":"sourceFile","fileName":"LogUtils.java"}
ai.datatower.analytics.utils.LogUtils$TYPE -> ai.datatower.analytics.utils.LogUtils$TYPE:
# {"id":"sourceFile","fileName":"LogUtils.java"}
ai.datatower.analytics.utils.LogUtils$TagHead -> ai.datatower.analytics.utils.LogUtils$f:
# {"id":"sourceFile","fileName":"LogUtils.java"}
    java.lang.String tag -> a
    java.lang.String fileHead -> c
    java.lang.String[] consoleHead -> b
    1:4:void <init>(java.lang.String,java.lang.String[],java.lang.String):668:671 -> <init>
ai.datatower.analytics.utils.MemoryUtils -> ai.datatower.analytics.utils.l:
# {"id":"sourceFile","fileName":"MemoryUtils.java"}
    java.lang.String[] units -> i
    long fpsStartTime -> e
    java.lang.Runnable fpsListenerStarter -> h
    java.lang.String mStoragePath -> j
    android.view.Choreographer$FrameCallback fpsListener -> g
    int fpsInterval -> f
    int frames -> c
    java.lang.Boolean isFpsDoing -> d
    int fps -> a
    java.lang.Boolean shouldListenFps -> b
    1:224:void <clinit>():36:259 -> <clinit>
    1:1:void <init>():33:33 -> <init>
    1:1:void access$000(long):33:33 -> a
    2:2:java.lang.Boolean access$100():33:33 -> a
    3:5:void toggleShouldListenFps(java.lang.Boolean):58:60 -> a
    6:6:void listenFPS(long):115:115 -> a
    6:6:void toggleShouldListenFps(java.lang.Boolean):60 -> a
    7:9:java.lang.String getMemoryUsed(android.content.Context):120:122 -> a
    10:10:java.lang.String ai.datatower.analytics.utils.StorageBean.getUsedMemory():105:105 -> a
    10:10:java.lang.String getMemoryUsed(android.content.Context):122 -> a
    11:11:java.lang.String getMemoryUsed(android.content.Context):122:122 -> a
    12:12:java.lang.String ai.datatower.analytics.utils.StorageBean.getTotalMemory():113:113 -> a
    12:12:java.lang.String getMemoryUsed(android.content.Context):122 -> a
    13:13:java.lang.String getMemoryUsed(android.content.Context):122:122 -> a
    14:47:void getMemoryInfo(android.content.Context,ai.datatower.analytics.utils.StorageBean):136:169 -> a
    48:48:java.lang.String getUnit(float,float):270:270 -> a
    49:56:long getTotalSize(android.content.Context,java.lang.String):282:289 -> a
    57:79:java.lang.String getDisk(android.content.Context,boolean):394:416 -> a
    80:80:double formatNumber(double):426:426 -> a
    1:1:android.view.Choreographer$FrameCallback access$200():33:33 -> b
    2:2:void listenFPS(long):115:115 -> b
    3:16:void getStoreInfo(android.content.Context,ai.datatower.analytics.utils.StorageBean):178:191 -> b
    17:29:java.lang.String getRAM(android.content.Context):322:334 -> b
    30:58:java.lang.String getStoragePath(android.content.Context,boolean):357:385 -> b
    1:7:int getFPS():48:54 -> c
    8:17:void newFrameComes(long):64:73 -> c
    18:71:java.lang.String getRealStorage(android.content.Context):199:252 -> c
    1:3:java.lang.String getStorageUsed(android.content.Context):126:128 -> d
    4:4:java.lang.String ai.datatower.analytics.utils.StorageBean.getUsedStore():65:65 -> d
    4:4:java.lang.String getStorageUsed(android.content.Context):128 -> d
    5:5:java.lang.String getStorageUsed(android.content.Context):128:128 -> d
    6:6:java.lang.String ai.datatower.analytics.utils.StorageBean.getTotalStore():73:73 -> d
    6:6:java.lang.String getStorageUsed(android.content.Context):128 -> d
    7:7:java.lang.String getStorageUsed(android.content.Context):128:128 -> d
    8:16:java.lang.String readableStorageSize(long):303:311 -> d
    17:17:boolean isSDCardMount():342:342 -> d
ai.datatower.analytics.utils.MemoryUtils$1 -> ai.datatower.analytics.utils.l$a:
# {"id":"sourceFile","fileName":"MemoryUtils.java"}
    1:1:void <init>():77:77 -> <init>
    1:7:void doFrame(long):81:87 -> doFrame
    8:8:void ai.datatower.analytics.utils.MemoryUtils.listenFPS(long):115:115 -> doFrame
    8:8:void doFrame(long):90 -> doFrame
    9:9:void doFrame(long):84:84 -> doFrame
ai.datatower.analytics.utils.MemoryUtils$2 -> ai.datatower.analytics.utils.l$b:
# {"id":"sourceFile","fileName":"MemoryUtils.java"}
    1:1:void <init>():95:95 -> <init>
    1:8:void run():98:105 -> run
    9:9:android.view.Choreographer$FrameCallback ai.datatower.analytics.utils.MemoryUtils.access$200():33:33 -> run
    9:9:void run():105 -> run
    10:12:void run():105:107 -> run
ai.datatower.analytics.utils.NetworkUtil -> ai.datatower.analytics.utils.NetworkUtil:
# {"id":"sourceFile","fileName":"NetworkUtil.java"}
    1:2:void <init>():46:47 -> <init>
    1:25:java.lang.String convertNetworkTypeToString(ai.datatower.analytics.utils.NetworkUtil$NetworkType):62:86 -> a
    26:28:boolean isEthernet(android.content.Context):172:174 -> a
    29:33:boolean isEthernetInternal(android.net.ConnectivityManager):179:183 -> a
    34:36:android.net.NetworkInfo getActiveNetworkInfo(android.app.Application):197:199 -> a
    37:67:java.lang.String getIPAddress(boolean):214:244 -> a
    68:85:java.lang.String getBroadcastIpAddress():254:271 -> a
    86:90:java.lang.String getDomainAddress(java.lang.String):285:289 -> a
    91:91:boolean isRegisteredNetworkStatusChangedListener(android.app.Application,ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener):311:311 -> a
    1:40:ai.datatower.analytics.utils.NetworkUtil$NetworkType getNetworkType(android.app.Application):110:149 -> b
    41:41:ai.datatower.analytics.utils.NetworkUtil$NetworkType getNetworkType(android.app.Application):144:144 -> b
    42:42:ai.datatower.analytics.utils.NetworkUtil$NetworkType getNetworkType(android.app.Application):141:141 -> b
    43:43:ai.datatower.analytics.utils.NetworkUtil$NetworkType getNetworkType(android.app.Application):137:137 -> b
    44:71:ai.datatower.analytics.utils.NetworkUtil$NetworkType getNetworkType(android.app.Application):125:152 -> b
    72:81:ai.datatower.analytics.utils.NetworkUtil$NetworkType getNetworkType(android.app.Application):150:159 -> b
    82:84:boolean isEthernetInternalM(android.net.ConnectivityManager):189:191 -> b
    85:85:void registerNetworkStatusChangedListener(android.app.Application,ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener):301:301 -> b
    1:1:java.lang.String getNetworkTypeString(android.app.Application):90:90 -> c
    2:2:void unregisterNetworkStatusChangedListener(android.app.Application,ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener):320:320 -> c
ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver -> ai.datatower.analytics.utils.NetworkUtil$a:
# {"id":"sourceFile","fileName":"NetworkUtil.java"}
    android.app.Application mContext -> c
    ai.datatower.analytics.utils.NetworkUtil$NetworkType mType -> a
    java.util.Set mListeners -> b
    1:11:void <init>(android.app.Application):327:337 -> <init>
    12:12:void <init>(android.app.Application):328:328 -> <init>
    1:1:java.util.Set access$200(ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver):325:325 -> a
    2:2:ai.datatower.analytics.utils.NetworkUtil$NetworkType access$302(ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver,ai.datatower.analytics.utils.NetworkUtil$NetworkType):325:325 -> a
    3:3:android.app.Application access$400():325:325 -> a
    4:5:ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver getInstance(android.app.Application):332:333 -> a
    4:5:ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver access$000(android.app.Application):325 -> a
    6:6:boolean isRegistered(ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener):375:375 -> a
    1:2:ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver getInstance(android.app.Application):332:333 -> b
    3:6:void lambda$unregisterListener$0(ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener):381:384 -> b
    7:8:ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver getInstance(android.app.Application):332:333 -> b
    7:8:void lambda$unregisterListener$0(ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener):384 -> b
    9:9:void lambda$unregisterListener$0(ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener):384:384 -> b
    10:19:void lambda$onReceive$1():393:402 -> b
    1:1:void registerListener(ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener):357:357 -> c
    1:1:void unregisterListener(ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener):380:380 -> d
    1:2:void onReceive(android.content.Context,android.content.Intent):391:392 -> onReceive
ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver$1 -> ai.datatower.analytics.utils.NetworkUtil$a$a:
# {"id":"sourceFile","fileName":"NetworkUtil.java"}
    ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener val$listener -> a
    ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver this$0 -> b
    1:1:void <init>(ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver,ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener):357:357 -> <init>
    1:2:void run():362:363 -> run
    3:3:java.util.Set ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver.access$200(ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver):325:325 -> run
    3:3:void run():363 -> run
    4:5:void run():363:364 -> run
    6:6:java.util.Set ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver.access$200(ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver):325:325 -> run
    6:6:void run():364 -> run
    7:8:void run():364:365 -> run
    9:9:android.app.Application ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver.access$400():325:325 -> run
    9:9:void run():365 -> run
    10:10:void run():365:365 -> run
    11:11:ai.datatower.analytics.utils.NetworkUtil$NetworkType ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver.access$302(ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver,ai.datatower.analytics.utils.NetworkUtil$NetworkType):325:325 -> run
    11:11:void run():365 -> run
    12:12:void run():366:366 -> run
    13:13:android.app.Application ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver.access$400():325:325 -> run
    13:13:void run():367 -> run
    14:15:ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver.getInstance(android.app.Application):332:333 -> run
    14:15:ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver.access$000(android.app.Application):325 -> run
    14:15:void run():367 -> run
    16:16:void run():367:367 -> run
ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver$LazyHolder -> ai.datatower.analytics.utils.NetworkUtil$a$b:
# {"id":"sourceFile","fileName":"NetworkUtil.java"}
    ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver INSTANCE -> a
    1:1:void <clinit>():430:430 -> <clinit>
    2:2:android.app.Application ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver.access$400():325:325 -> <clinit>
    2:2:void <clinit>():430 -> <clinit>
    3:3:void <clinit>():430:430 -> <clinit>
    1:1:void <init>():429:429 -> <init>
    1:1:ai.datatower.analytics.utils.NetworkUtil$NetworkChangedReceiver access$100():429:429 -> a
ai.datatower.analytics.utils.NetworkUtil$NetworkType -> ai.datatower.analytics.utils.NetworkUtil$b:
# {"id":"sourceFile","fileName":"NetworkUtil.java"}
    ai.datatower.analytics.utils.NetworkUtil$NetworkType NETWORK_WIFI -> b
    ai.datatower.analytics.utils.NetworkUtil$NetworkType NETWORK_ETHERNET -> a
    ai.datatower.analytics.utils.NetworkUtil$NetworkType NETWORK_4G -> d
    ai.datatower.analytics.utils.NetworkUtil$NetworkType NETWORK_5G -> c
    ai.datatower.analytics.utils.NetworkUtil$NetworkType NETWORK_2G -> f
    ai.datatower.analytics.utils.NetworkUtil$NetworkType NETWORK_3G -> e
    ai.datatower.analytics.utils.NetworkUtil$NetworkType NETWORK_NO -> h
    ai.datatower.analytics.utils.NetworkUtil$NetworkType[] $VALUES -> i
    ai.datatower.analytics.utils.NetworkUtil$NetworkType NETWORK_UNKNOWN -> g
    1:8:void <clinit>():51:58 -> <clinit>
    9:9:void <clinit>():50:50 -> <clinit>
    1:1:void <init>(java.lang.String,int):50:50 -> <init>
    1:1:ai.datatower.analytics.utils.NetworkUtil$NetworkType[] $values():50:50 -> a
    1:1:ai.datatower.analytics.utils.NetworkUtil$NetworkType valueOf(java.lang.String):50:50 -> valueOf
    1:1:ai.datatower.analytics.utils.NetworkUtil$NetworkType[] values():50:50 -> values
ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener -> ai.datatower.analytics.utils.NetworkUtil$OnNetworkStatusChangedListener:
# {"id":"sourceFile","fileName":"NetworkUtil.java"}
ai.datatower.analytics.utils.NetworkUtils -> ai.datatower.analytics.utils.m:
# {"id":"sourceFile","fileName":"NetworkUtils.kt"}
    ai.datatower.analytics.utils.NetworkUtils INSTANCE -> a
    int HTTP_307 -> b
    1:1:void <init>():28:28 -> <init>
    1:9:boolean isNetworkAvailable(android.content.Context):45:53 -> a
    10:13:boolean isNetworkAvailable(android.content.Context):52:55 -> a
    14:19:boolean isNetworkValid(android.net.NetworkCapabilities):63:68 -> a
    20:30:boolean isNetworkAvailable(android.net.ConnectivityManager):80:90 -> a
    1:11:boolean isWiFiNetwork(android.net.ConnectivityManager):103:113 -> b
ai.datatower.analytics.utils.NotNullSingleVar -> ai.datatower.analytics.utils.n:
# {"id":"sourceFile","fileName":"PropertiesUtils.kt"}
    java.lang.Object mValue -> a
    1:1:void <init>():6:6 -> <init>
    1:1:java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty):9:9 -> getValue
    1:2:void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object):13:14 -> setValue
ai.datatower.analytics.utils.PresetEvent -> ai.datatower.analytics.utils.PresetEvent:
# {"id":"sourceFile","fileName":"PresetPropManager.kt"}
    1:3:void <clinit>():113:115 -> <clinit>
    4:4:void ai.datatower.analytics.utils.PresetEvent$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    4:4:void <clinit>():115 -> <clinit>
    5:8:void <clinit>():115:118 -> <clinit>
    1:1:void <init>(java.lang.String,int):111:111 -> <init>
    1:1:kotlin.Lazy access$getStatus$delegate$cp():111:111 -> access$getStatus$delegate$cp
    1:2:void disable$datatowerai_core_publicRelease():129:130 -> disable$datatowerai_core_publicRelease
    3:3:java.util.Map ai.datatower.analytics.utils.PresetEvent$Companion.access$getStatus(ai.datatower.analytics.utils.PresetEvent$Companion):117:117 -> disable$datatowerai_core_publicRelease
    3:3:void disable$datatowerai_core_publicRelease():130 -> disable$datatowerai_core_publicRelease
    4:5:void disable$datatowerai_core_publicRelease():130:131 -> disable$datatowerai_core_publicRelease
    6:6:void disable$datatowerai_core_publicRelease():129:129 -> disable$datatowerai_core_publicRelease
    1:2:void enable$datatowerai_core_publicRelease():125:126 -> enable$datatowerai_core_publicRelease
    3:3:java.util.Map ai.datatower.analytics.utils.PresetEvent$Companion.access$getStatus(ai.datatower.analytics.utils.PresetEvent$Companion):117:117 -> enable$datatowerai_core_publicRelease
    3:3:void enable$datatowerai_core_publicRelease():126 -> enable$datatowerai_core_publicRelease
    4:5:void enable$datatowerai_core_publicRelease():126:127 -> enable$datatowerai_core_publicRelease
    6:6:void enable$datatowerai_core_publicRelease():125:125 -> enable$datatowerai_core_publicRelease
    1:1:boolean isOn$datatowerai_core_publicRelease():123:123 -> isOn$datatowerai_core_publicRelease
    2:2:java.util.Map ai.datatower.analytics.utils.PresetEvent$Companion.access$getStatus(ai.datatower.analytics.utils.PresetEvent$Companion):117:117 -> isOn$datatowerai_core_publicRelease
    2:2:boolean isOn$datatowerai_core_publicRelease():123 -> isOn$datatowerai_core_publicRelease
    3:3:boolean isOn$datatowerai_core_publicRelease():123:123 -> isOn$datatowerai_core_publicRelease
ai.datatower.analytics.utils.PresetEvent$Companion -> ai.datatower.analytics.utils.PresetEvent$b:
# {"id":"sourceFile","fileName":"PresetPropManager.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():117:117 -> <init>
    1:1:java.util.Map access$getStatus(ai.datatower.analytics.utils.PresetEvent$Companion):117:117 -> a
    2:2:java.util.Map getStatus():118:118 -> a
ai.datatower.analytics.utils.PresetEvent$Companion$status$2 -> ai.datatower.analytics.utils.PresetEvent$a:
# {"id":"sourceFile","fileName":"PresetPropManager.kt"}
    ai.datatower.analytics.utils.PresetEvent$Companion$status$2 INSTANCE -> a
    1:17:java.util.Map invoke():119:135 -> a
    18:18:java.util.Map invoke():119:119 -> a
    1:1:java.lang.Object invoke():118:118 -> invoke
ai.datatower.analytics.utils.PresetPropManager -> ai.datatower.analytics.utils.o:
# {"id":"sourceFile","fileName":"PresetPropManager.kt"}
    ai.datatower.analytics.utils.PresetPropManager$PPMap common -> b
    ai.datatower.analytics.utils.PresetPropManager$PPMap userActive -> c
    ai.datatower.analytics.utils.PresetPropManager instance -> e
    ai.datatower.analytics.utils.PresetPropManager$PPMap meta -> a
    java.util.HashSet disableList -> f
    ai.datatower.analytics.utils.PresetPropManager$Companion Companion -> d
    1:1:void ai.datatower.analytics.utils.PresetPropManager$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:23:void <clinit>():0:21 -> <clinit>
    1:54:void <init>():9:62 -> <init>
    1:1:java.util.HashSet access$getDisableList$cp():9:9 -> a
    2:2:void access$setInstance$cp(ai.datatower.analytics.utils.PresetPropManager):9:9 -> a
    3:4:void checkNSet(org.json.JSONObject,java.lang.String,java.lang.Object):71:72 -> a
    5:9:void checkNSet(java.util.Map,java.lang.String,java.lang.Object):76:80 -> a
    1:1:ai.datatower.analytics.utils.PresetPropManager access$getInstance$cp():9:9 -> b
    1:1:ai.datatower.analytics.utils.PresetPropManager$PPMap getCommon():61:61 -> c
    1:1:ai.datatower.analytics.utils.PresetPropManager$PPMap getMeta():60:60 -> d
    1:1:ai.datatower.analytics.utils.PresetPropManager$PPMap getUserActive():62:62 -> e
    1:2:java.lang.String toString():64:65 -> toString
    3:5:java.lang.String toString():64:66 -> toString
    6:9:java.lang.String toString():64:67 -> toString
    10:10:java.lang.String toString():64:64 -> toString
ai.datatower.analytics.utils.PresetPropManager$Companion -> ai.datatower.analytics.utils.o$a:
# {"id":"sourceFile","fileName":"PresetPropManager.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():10:10 -> <init>
    1:2:ai.datatower.analytics.utils.PresetPropManager get(android.content.Context):13:14 -> a
    3:3:void ai.datatower.analytics.utils.PresetPropManager.access$setInstance$cp(ai.datatower.analytics.utils.PresetPropManager):9:9 -> a
    3:3:ai.datatower.analytics.utils.PresetPropManager get(android.content.Context):15 -> a
    4:4:ai.datatower.analytics.utils.PresetPropManager get():19:19 -> a
    1:7:void initDisableList(android.content.Context):25:31 -> b
    8:8:void initDisableList(android.content.Context):28:28 -> b
    9:28:void initDisableList(android.content.Context):26:45 -> b
    29:125:void initDisableList(android.content.Context):37:133 -> b
    126:133:void initDisableList(android.content.Context):48:55 -> b
    134:134:void initDisableList(android.content.Context):53:53 -> b
ai.datatower.analytics.utils.PresetPropManager$PPMap -> ai.datatower.analytics.utils.o$b:
# {"id":"sourceFile","fileName":"PresetPropManager.kt"}
    java.util.Map _map -> a
    1:2:void <init>():85:86 -> <init>
    1:1:java.util.Map getMap():88:88 -> a
    2:6:void set(java.lang.String,java.lang.Object):91:95 -> a
    7:7:java.lang.Object get(java.lang.String):100:100 -> a
    1:1:void release():104:104 -> b
    1:1:java.lang.String toString():107:107 -> toString
ai.datatower.analytics.utils.ProcessUtil -> ai.datatower.analytics.utils.p:
# {"id":"sourceFile","fileName":"ProcessUtil.java"}
    java.lang.String currentProcessName -> a
    1:1:void <init>():18:18 -> <init>
    1:18:java.lang.String getCurrentProcessName(android.content.Context):26:43 -> a
    19:27:java.lang.String getCurrentProcessNameByActivityThread():64:72 -> a
    1:2:java.lang.String getCurrentProcessNameByApplication():52:53 -> b
    3:10:java.lang.String getCurrentProcessNameByActivityManager(android.content.Context):84:91 -> b
    1:2:boolean isMainProcess(android.content.Context):101:102 -> c
ai.datatower.analytics.utils.ReflectUtils -> ai.datatower.analytics.utils.q:
# {"id":"sourceFile","fileName":"ReflectUtils.kt"}
    ai.datatower.analytics.utils.ReflectUtils$Companion Companion -> a
    kotlin.Lazy instance$delegate -> c
    java.lang.String TAG -> b
    1:1:void ai.datatower.analytics.utils.ReflectUtils$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:12:void <clinit>():0:10 -> <clinit>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():7:7 -> <init>
    1:1:kotlin.Lazy access$getInstance$delegate$cp():7:7 -> a
    2:6:java.lang.Object createObject(java.lang.String):26:30 -> a
    7:7:void invokeSetterMethod(java.lang.Object,java.lang.String,java.lang.Object):80:80 -> a
    8:239:void invokeSetterMethod(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class):94:325 -> a
    240:485:void invokeSetterMethod(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class):95:340 -> a
    486:486:void invokeSetterMethod(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class):318:318 -> a
    487:488:void invokeSetterMethod(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class):95:96 -> a
    489:500:java.lang.reflect.Field getAccessibleField(java.lang.Object,java.lang.String):149:160 -> a
    501:504:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]):182:185 -> a
    505:513:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]):184:192 -> a
    514:526:java.lang.reflect.Method getAccessibleMethod(java.lang.Object,java.lang.String,java.lang.Class[]):212:224 -> a
    527:527:java.lang.Class getSuperClassGenericType(java.lang.Class):238:238 -> a
    528:531:java.lang.Class getSuperClassGenericType(java.lang.Class,int):251:254 -> a
    532:547:java.lang.Class getSuperClassGenericType(java.lang.Class,int):253:268 -> a
    548:553:java.lang.Class getSuperClassGenericType(java.lang.Class,int):267:272 -> a
    554:555:java.lang.Class getSuperClassGenericType(java.lang.Class,int):261:262 -> a
    556:556:java.lang.Class getSuperClassGenericType(java.lang.Class,int):261:261 -> a
    557:561:java.lang.Class getSuperClassGenericType(java.lang.Class,int):260:264 -> a
    562:564:void invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Object[],java.lang.Class[]):289:291 -> a
    1:5:java.lang.Object getObjectInstance(java.lang.String):47:51 -> b
    6:12:java.lang.Object getFieldValue(java.lang.Object,java.lang.String):109:115 -> b
    13:13:java.lang.Object getFieldValue(java.lang.Object,java.lang.String):110:110 -> b
    14:19:void setFieldValue(java.lang.Object,java.lang.String,java.lang.Object):130:135 -> b
    20:20:void setFieldValue(java.lang.Object,java.lang.String,java.lang.Object):131:131 -> b
    1:237:java.lang.Object invokeGetterMethod(java.lang.Object,java.lang.String):66:302 -> c
    238:489:java.lang.Object invokeGetterMethod(java.lang.Object,java.lang.String):66:317 -> c
    490:490:java.lang.Object invokeGetterMethod(java.lang.Object,java.lang.String):295:295 -> c
    491:492:java.lang.Object invokeGetterMethod(java.lang.Object,java.lang.String):66:67 -> c
ai.datatower.analytics.utils.ReflectUtils$Companion -> ai.datatower.analytics.utils.q$b:
# {"id":"sourceFile","fileName":"ReflectUtils.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():8:8 -> <init>
    1:1:ai.datatower.analytics.utils.ReflectUtils getInstance():10:10 -> a
ai.datatower.analytics.utils.ReflectUtils$Companion$instance$2 -> ai.datatower.analytics.utils.q$a:
# {"id":"sourceFile","fileName":"ReflectUtils.kt"}
    ai.datatower.analytics.utils.ReflectUtils$Companion$instance$2 INSTANCE -> a
    1:1:ai.datatower.analytics.utils.ReflectUtils invoke():11:11 -> a
    2:2:void ai.datatower.analytics.utils.ReflectUtils.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    2:2:ai.datatower.analytics.utils.ReflectUtils invoke():11 -> a
    1:1:ai.datatower.analytics.utils.ReflectUtils invoke():11:11 -> invoke
    1:1:java.lang.Object invoke():10 -> invoke
    2:2:void ai.datatower.analytics.utils.ReflectUtils.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> invoke
    2:2:ai.datatower.analytics.utils.ReflectUtils invoke():11 -> invoke
    2:2:java.lang.Object invoke():10 -> invoke
ai.datatower.analytics.utils.StorageBean -> ai.datatower.analytics.utils.r:
# {"id":"sourceFile","fileName":"StorageBean.java"}
    java.lang.String usedMemory -> g
    java.lang.String freeMemory -> f
    java.lang.String totalMemory -> h
    java.lang.String romSize -> k
    java.lang.String memInfo -> j
    int ratioMemory -> i
    java.lang.String freeStore -> a
    int ratioStore -> d
    java.lang.String totalStore -> c
    java.lang.String usedStore -> b
    java.lang.String storePath -> e
    1:1:void <init>():8:8 -> <init>
    1:1:java.lang.String getFreeMemory():97:97 -> a
    2:2:void setFreeMemory(java.lang.String):101:101 -> a
    3:3:void setRatioMemory(int):125:125 -> a
    1:1:java.lang.String getFreeStore():57:57 -> b
    2:2:void setFreeStore(java.lang.String):61:61 -> b
    3:3:void setRatioStore(int):85:85 -> b
    1:1:java.lang.String getMemInfo():129:129 -> c
    2:2:void setMemInfo(java.lang.String):133:133 -> c
    1:1:int getRatioMemory():121:121 -> d
    2:2:void setRomSize(java.lang.String):141:141 -> d
    1:1:int getRatioStore():81:81 -> e
    2:2:void setStorePath(java.lang.String):93:93 -> e
    1:1:void setTotalMemory(java.lang.String):117:117 -> f
    2:2:java.lang.String getRomSize():137:137 -> f
    1:1:void setTotalStore(java.lang.String):77:77 -> g
    2:2:java.lang.String getStorePath():89:89 -> g
    1:1:void setUsedMemory(java.lang.String):109:109 -> h
    2:2:java.lang.String getTotalMemory():113:113 -> h
    1:1:void setUsedStore(java.lang.String):69:69 -> i
    2:2:java.lang.String getTotalStore():73:73 -> i
    1:1:java.lang.String getUsedMemory():105:105 -> j
    1:1:java.lang.String getUsedStore():65:65 -> k
    1:1:java.lang.String toString():147:147 -> toString
ai.datatower.analytics.utils.ThreadUtils -> ai.datatower.analytics.utils.ThreadUtils:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    java.util.Map TYPE_PRIORITY_POOLS -> b
    byte TYPE_CPU -> i
    java.util.Map TASK_POOL_MAP -> c
    android.os.Handler HANDLER -> a
    int CPU_COUNT -> d
    byte TYPE_SINGLE -> f
    byte TYPE_IO -> h
    java.util.Timer TIMER -> e
    byte TYPE_CACHED -> g
    java.util.concurrent.Executor sDeliver -> j
    1:8:void <clinit>():39:46 -> <clinit>
    1:1:void <init>():37:37 -> <init>
    1:1:int access$200():37:37 -> a
    2:5:void runOnUiThread(java.lang.Runnable):69:72 -> a
    6:6:void runOnUiThreadDelayed(java.lang.Runnable,long):77:77 -> a
    7:7:java.util.concurrent.ExecutorService getFixedPool(int,int):103:103 -> a
    8:8:java.util.concurrent.ExecutorService getCachedPool(int):149:149 -> a
    9:9:void executeByFixed(int,ai.datatower.analytics.utils.ThreadUtils$Task,int):218:218 -> a
    10:10:void executeByFixedAtFixRate(int,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):286:286 -> a
    11:11:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> a
    11:11:void executeByFixedAtFixRate(int,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):286 -> a
    12:12:void executeByFixedAtFixRate(int,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit,int):324:324 -> a
    13:13:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> a
    13:13:void executeByFixedAtFixRate(int,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit,int):324 -> a
    14:14:void executeByCached(ai.datatower.analytics.utils.ThreadUtils$Task,int):464:464 -> a
    15:15:void executeByCachedAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):524:524 -> a
    16:16:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> a
    16:16:void executeByCachedAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):524 -> a
    17:17:void executeByCachedAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit,int):559:559 -> a
    18:18:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> a
    18:18:void executeByCachedAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit,int):558 -> a
    19:19:void cancel(ai.datatower.analytics.utils.ThreadUtils$Task):867:867 -> a
    20:23:void cancel(ai.datatower.analytics.utils.ThreadUtils$Task[]):876:879 -> a
    24:27:void cancel(java.util.List):889:892 -> a
    28:35:void cancel(java.util.concurrent.ExecutorService):902:909 -> a
    36:36:void setDeliver(java.util.concurrent.Executor):919:919 -> a
    37:37:void execute(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task):923:923 -> a
    38:38:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> a
    38:38:void executeByCustomAtFixRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):839 -> a
    39:56:void execute(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):943:960 -> a
    57:57:void ai.datatower.analytics.utils.ThreadUtils$Task.access$000(ai.datatower.analytics.utils.ThreadUtils$Task,boolean):1168:1168 -> a
    57:57:void execute(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):963 -> a
    58:64:void execute(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):964:970 -> a
    65:65:void execute(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):949:949 -> a
    66:66:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> a
    66:66:void executeByCachedAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):540 -> a
    67:67:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> a
    67:67:void executeByCachedAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):540 -> a
    68:68:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> a
    68:68:void executeByCachedAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):508 -> a
    69:69:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> a
    69:69:void executeByCachedAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):508 -> a
    70:70:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> a
    70:70:void executeByFixed(int,ai.datatower.analytics.utils.ThreadUtils$Task):204 -> a
    71:71:void executeByFixed(int,ai.datatower.analytics.utils.ThreadUtils$Task):204:204 -> a
    72:72:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> a
    72:72:void executeByFixedAtFixRate(int,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):304 -> a
    73:73:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> a
    73:73:void executeByFixedAtFixRate(int,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):304 -> a
    74:74:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> a
    74:74:void executeByFixedAtFixRate(int,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):268 -> a
    75:75:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> a
    75:75:void executeByFixedAtFixRate(int,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):268 -> a
    1:1:java.util.concurrent.Executor access$600():37:37 -> b
    2:2:java.util.concurrent.ExecutorService getCpuPool(int):193:193 -> b
    3:3:void executeByFixedWithDelay(int,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):252:252 -> b
    4:4:void executeWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):930:930 -> b
    4:4:void executeByFixedWithDelay(int,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):252 -> b
    5:5:void executeByCachedWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):494:494 -> b
    6:6:void executeWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):930:930 -> b
    6:6:void executeByCachedWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):494 -> b
    7:7:void executeByCpu(ai.datatower.analytics.utils.ThreadUtils$Task,int):700:700 -> b
    8:8:void executeByCpuAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit,int):795:795 -> b
    9:9:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> b
    9:9:void executeByCpuAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit,int):794 -> b
    10:10:void executeByCustom(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task):807:807 -> b
    11:11:void executeWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):930:930 -> b
    11:11:void executeByCustomWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):823 -> b
    12:12:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> b
    13:13:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> b
    13:13:void executeByCached(ai.datatower.analytics.utils.ThreadUtils$Task):452 -> b
    14:14:void executeByCached(ai.datatower.analytics.utils.ThreadUtils$Task):452:452 -> b
    15:15:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> b
    15:15:void executeByCachedWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):478 -> b
    16:16:void executeWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):930:930 -> b
    16:16:void executeByCachedWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):478 -> b
    17:17:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> b
    17:17:void executeByCpuAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):776 -> b
    18:18:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> b
    18:18:void executeByCpuAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):776 -> b
    19:19:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> b
    19:19:void executeByFixedWithDelay(int,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):234 -> b
    20:20:void executeWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):930:930 -> b
    20:20:void executeByFixedWithDelay(int,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):234 -> b
    21:37:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int,int):979:995 -> b
    1:1:java.util.Map access$700():37:37 -> c
    2:2:void executeByIo(ai.datatower.analytics.utils.ThreadUtils$Task,int):582:582 -> c
    3:3:void executeByIoAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit,int):677:677 -> c
    4:4:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> c
    4:4:void executeByIoAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit,int):676 -> c
    5:5:void executeByCpuAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):760:760 -> c
    6:6:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> c
    6:6:void executeByCpuAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):760 -> c
    7:7:void executeWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):930:930 -> c
    8:8:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> c
    8:8:void executeByCustomAtFixRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):857 -> c
    9:9:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> c
    9:9:void executeByCpu(ai.datatower.analytics.utils.ThreadUtils$Task):688 -> c
    10:10:void executeByCpu(ai.datatower.analytics.utils.ThreadUtils$Task):688:688 -> c
    11:11:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> c
    11:11:void executeByCpuAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):744 -> c
    12:12:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> c
    12:12:void executeByCpuAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):744 -> c
    13:13:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> c
    13:13:void executeByIoAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):658 -> c
    14:14:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> c
    14:14:void executeByIoAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):658 -> c
    15:15:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> c
    15:15:java.util.concurrent.ExecutorService getFixedPool(int):89 -> c
    1:1:java.util.concurrent.ExecutorService getIoPool(int):170:170 -> d
    2:2:void executeBySingle(ai.datatower.analytics.utils.ThreadUtils$Task,int):346:346 -> d
    3:3:void executeBySingleAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit,int):441:441 -> d
    4:4:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> d
    4:4:void executeBySingleAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit,int):440 -> d
    5:5:void executeByCpuWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):730:730 -> d
    6:6:void executeWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):930:930 -> d
    6:6:void executeByCpuWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):730 -> d
    7:7:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> d
    7:7:void executeByCpuWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):714 -> d
    8:8:void executeWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):930:930 -> d
    8:8:void executeByCpuWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):714 -> d
    9:9:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> d
    9:9:void executeByIo(ai.datatower.analytics.utils.ThreadUtils$Task):570 -> d
    10:10:void executeByIo(ai.datatower.analytics.utils.ThreadUtils$Task):570:570 -> d
    11:11:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> d
    11:11:void executeBySingleAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):422 -> d
    12:12:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> d
    12:12:void executeBySingleAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):422 -> d
    13:13:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> d
    13:13:java.util.concurrent.ExecutorService getCachedPool():137 -> d
    1:1:void executeByIoAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):642:642 -> e
    2:2:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> e
    2:2:void executeByIoAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):642 -> e
    3:3:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> e
    3:3:void executeByIoAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):626 -> e
    4:4:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> e
    4:4:void executeByIoAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):626 -> e
    5:5:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> e
    5:5:void executeBySingle(ai.datatower.analytics.utils.ThreadUtils$Task):334 -> e
    6:6:void executeBySingle(ai.datatower.analytics.utils.ThreadUtils$Task):334:334 -> e
    7:7:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> e
    7:7:java.util.concurrent.ExecutorService getCpuPool():181 -> e
    8:8:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> e
    1:1:java.util.concurrent.ExecutorService getSinglePool(int):126:126 -> f
    2:2:void executeByIoWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):612:612 -> f
    3:3:void executeWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):930:930 -> f
    3:3:void executeByIoWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):612 -> f
    4:4:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> f
    4:4:void executeByIoWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):596 -> f
    5:5:void executeWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):930:930 -> f
    5:5:void executeByIoWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):596 -> f
    6:14:java.util.concurrent.Executor getGlobalDeliver():1369:1377 -> f
    1:1:void executeBySingleAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):406:406 -> g
    2:2:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> g
    2:2:void executeBySingleAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):406 -> g
    3:3:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> g
    3:3:void executeBySingleAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):390 -> g
    4:4:void executeAtFixedRate(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,long,java.util.concurrent.TimeUnit):938:938 -> g
    4:4:void executeBySingleAtFixRate(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):390 -> g
    5:5:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> g
    5:5:java.util.concurrent.ExecutorService getIoPool():159 -> g
    1:1:android.os.Handler getMainHandler():65:65 -> h
    2:2:void executeBySingleWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):376:376 -> h
    3:3:void executeWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):930:930 -> h
    3:3:void executeBySingleWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit,int):376 -> h
    4:4:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> h
    4:4:void executeBySingleWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):360 -> h
    5:5:void executeWithDelay(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):930:930 -> h
    5:5:void executeBySingleWithDelay(ai.datatower.analytics.utils.ThreadUtils$Task,long,java.util.concurrent.TimeUnit):360 -> h
    1:1:java.util.concurrent.ExecutorService getPoolByTypeAndPriority(int):975:975 -> i
    1:1:java.util.concurrent.ExecutorService getSinglePool():114 -> i
    1:1:boolean isMainThread():61:61 -> j
ai.datatower.analytics.utils.ThreadUtils$1 -> ai.datatower.analytics.utils.ThreadUtils$a:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    ai.datatower.analytics.utils.ThreadUtils$Task val$task -> b
    java.util.concurrent.ExecutorService val$pool -> a
    1:1:void <init>(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task):954:954 -> <init>
    1:1:void run():957:957 -> run
ai.datatower.analytics.utils.ThreadUtils$2 -> ai.datatower.analytics.utils.ThreadUtils$b:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    ai.datatower.analytics.utils.ThreadUtils$Task val$task -> b
    java.util.concurrent.ExecutorService val$pool -> a
    1:1:void <init>(java.util.concurrent.ExecutorService,ai.datatower.analytics.utils.ThreadUtils$Task):964:964 -> <init>
    1:1:void run():967:967 -> run
ai.datatower.analytics.utils.ThreadUtils$3 -> ai.datatower.analytics.utils.ThreadUtils$c:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    1:1:void <init>():1370:1370 -> <init>
    1:1:void execute(java.lang.Runnable):1373:1373 -> execute
ai.datatower.analytics.utils.ThreadUtils$LinkedBlockingQueue4Util -> ai.datatower.analytics.utils.ThreadUtils$d:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    ai.datatower.analytics.utils.ThreadUtils$ThreadPoolExecutor4Util mPool -> a
    int mCapacity -> b
    1:1:void <init>():1084:1084 -> <init>
    2:2:void <init>():1081:1081 -> <init>
    3:3:void <init>(boolean):1088:1088 -> <init>
    4:13:void <init>(boolean):1081:1090 -> <init>
    14:15:void <init>(int):1095:1096 -> <init>
    1:1:ai.datatower.analytics.utils.ThreadUtils$ThreadPoolExecutor4Util access$302(ai.datatower.analytics.utils.ThreadUtils$LinkedBlockingQueue4Util,ai.datatower.analytics.utils.ThreadUtils$ThreadPoolExecutor4Util):1077:1077 -> a
    2:7:boolean offer(java.lang.Runnable):1101:1106 -> a
    1:1:boolean offer(java.lang.Object):1077:1077 -> offer
ai.datatower.analytics.utils.ThreadUtils$SimpleTask -> ai.datatower.analytics.utils.ThreadUtils$e:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    1:1:void <init>():1154:1154 -> <init>
    1:1:void onFail(java.lang.Throwable):1163:1163 -> a
    1:1:void onCancel():1158:1158 -> f
ai.datatower.analytics.utils.ThreadUtils$SyncValue -> ai.datatower.analytics.utils.ThreadUtils$f:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    java.util.concurrent.CountDownLatch mLatch -> a
    java.util.concurrent.atomic.AtomicBoolean mFlag -> b
    java.lang.Object mValue -> c
    1:4:void <init>():1343:1346 -> <init>
    1:3:void setValue(java.lang.Object):1350:1352 -> a
    4:11:java.lang.Object getValue():1357:1364 -> a
ai.datatower.analytics.utils.ThreadUtils$Task -> ai.datatower.analytics.utils.ThreadUtils$Task:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    int TIMEOUT -> n
    int CANCELLED -> l
    int INTERRUPTED -> m
    int EXCEPTIONAL -> j
    long mTimeoutMillis -> e
    int COMPLETING -> k
    int NEW -> h
    int RUNNING -> i
    java.util.concurrent.Executor deliver -> g
    java.util.Timer mTimer -> d
    java.lang.Thread runner -> c
    java.util.concurrent.atomic.AtomicInteger state -> a
    ai.datatower.analytics.utils.ThreadUtils$Task$OnTimeoutListener mTimeoutListener -> f
    boolean isSchedule -> b
    1:11:void <init>():1168:1178 -> <init>
    void onFail(java.lang.Throwable) -> a
    void onSuccess(java.lang.Object) -> a
    1:1:void access$000(ai.datatower.analytics.utils.ThreadUtils$Task,boolean):1168:1168 -> a
    2:2:ai.datatower.analytics.utils.ThreadUtils$Task$OnTimeoutListener access$400(ai.datatower.analytics.utils.ThreadUtils$Task):1168:1168 -> a
    3:3:void cancel():1260:1260 -> a
    4:14:void cancel(boolean):1264:1274 -> a
    15:15:void cancel(boolean):1267:1267 -> a
    16:16:ai.datatower.analytics.utils.ThreadUtils$Task setDeliver(java.util.concurrent.Executor):1304:1304 -> a
    17:18:ai.datatower.analytics.utils.ThreadUtils$Task setTimeout(long,ai.datatower.analytics.utils.ThreadUtils$Task$OnTimeoutListener):1312:1313 -> a
    java.lang.Object doInBackground() -> b
    1:1:void access$500(ai.datatower.analytics.utils.ThreadUtils$Task):1168:1168 -> b
    2:2:void setSchedule(boolean):1318:1318 -> b
    1:2:java.util.concurrent.Executor getDeliver():1322:1323 -> c
    1:1:boolean isCanceled():1296:1296 -> d
    1:1:boolean isDone():1300:1300 -> e
    void onCancel() -> f
    1:5:void onDone():1330:1334 -> g
    1:8:void timeout():1284:1291 -> h
    9:9:void timeout():1287:1287 -> h
    1:51:void run():1199:1249 -> run
    52:52:void run():1246:1246 -> run
ai.datatower.analytics.utils.ThreadUtils$Task$1 -> ai.datatower.analytics.utils.ThreadUtils$Task$a:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    ai.datatower.analytics.utils.ThreadUtils$Task this$0 -> a
    1:1:void <init>(ai.datatower.analytics.utils.ThreadUtils$Task):1214:1214 -> <init>
    1:1:void run():1217:1217 -> run
    2:2:ai.datatower.analytics.utils.ThreadUtils$Task$OnTimeoutListener ai.datatower.analytics.utils.ThreadUtils$Task.access$400(ai.datatower.analytics.utils.ThreadUtils$Task):1168:1168 -> run
    2:2:void run():1217 -> run
    3:3:void ai.datatower.analytics.utils.ThreadUtils$Task.access$500(ai.datatower.analytics.utils.ThreadUtils$Task):1168:1168 -> run
    3:3:void run():1218 -> run
    4:4:void run():1219:1219 -> run
    5:5:ai.datatower.analytics.utils.ThreadUtils$Task$OnTimeoutListener ai.datatower.analytics.utils.ThreadUtils$Task.access$400(ai.datatower.analytics.utils.ThreadUtils$Task):1168:1168 -> run
    5:5:void run():1219 -> run
    6:6:void run():1219:1219 -> run
ai.datatower.analytics.utils.ThreadUtils$Task$2 -> ai.datatower.analytics.utils.ThreadUtils$Task$b:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    ai.datatower.analytics.utils.ThreadUtils$Task this$0 -> b
    java.lang.Object val$result -> a
    1:1:void <init>(ai.datatower.analytics.utils.ThreadUtils$Task,java.lang.Object):1229:1229 -> <init>
    1:1:void run():1232:1232 -> run
ai.datatower.analytics.utils.ThreadUtils$Task$3 -> ai.datatower.analytics.utils.ThreadUtils$Task$c:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    ai.datatower.analytics.utils.ThreadUtils$Task this$0 -> b
    java.lang.Object val$result -> a
    1:1:void <init>(ai.datatower.analytics.utils.ThreadUtils$Task,java.lang.Object):1237:1237 -> <init>
    1:2:void run():1240:1241 -> run
ai.datatower.analytics.utils.ThreadUtils$Task$4 -> ai.datatower.analytics.utils.ThreadUtils$Task$d:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    ai.datatower.analytics.utils.ThreadUtils$Task this$0 -> b
    java.lang.Throwable val$throwable -> a
    1:1:void <init>(ai.datatower.analytics.utils.ThreadUtils$Task,java.lang.Throwable):1249:1249 -> <init>
    1:2:void run():1252:1253 -> run
ai.datatower.analytics.utils.ThreadUtils$Task$5 -> ai.datatower.analytics.utils.ThreadUtils$Task$e:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    ai.datatower.analytics.utils.ThreadUtils$Task this$0 -> a
    1:1:void <init>(ai.datatower.analytics.utils.ThreadUtils$Task):1274:1274 -> <init>
    1:2:void run():1277:1278 -> run
ai.datatower.analytics.utils.ThreadUtils$Task$OnTimeoutListener -> ai.datatower.analytics.utils.ThreadUtils$Task$OnTimeoutListener:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
ai.datatower.analytics.utils.ThreadUtils$ThreadPoolExecutor4Util -> ai.datatower.analytics.utils.ThreadUtils$g:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    java.util.concurrent.atomic.AtomicInteger mSubmittedCount -> a
    ai.datatower.analytics.utils.ThreadUtils$LinkedBlockingQueue4Util mWorkQueue -> b
    1:1:void <init>(int,int,long,java.util.concurrent.TimeUnit,ai.datatower.analytics.utils.ThreadUtils$LinkedBlockingQueue4Util,java.util.concurrent.ThreadFactory):1043:1043 -> <init>
    2:16:void <init>(int,int,long,java.util.concurrent.TimeUnit,ai.datatower.analytics.utils.ThreadUtils$LinkedBlockingQueue4Util,java.util.concurrent.ThreadFactory):1035:1049 -> <init>
    1:1:java.util.concurrent.ExecutorService access$100(int,int):998:998 -> a
    2:2:int getSubmittedCount():1053:1053 -> a
    1:2:void afterExecute(java.lang.Runnable,java.lang.Throwable):1058:1059 -> afterExecute
    1:1:java.util.concurrent.ExecutorService createPool(int,int):1027:1027 -> b
    2:2:void ai.datatower.analytics.utils.ThreadUtils$UtilsThreadFactory.<init>(java.lang.String,int):1119:1119 -> b
    2:2:java.util.concurrent.ExecutorService createPool(int,int):1027 -> b
    3:3:java.util.concurrent.ExecutorService createPool(int,int):1027:1027 -> b
    4:4:java.util.concurrent.ExecutorService createPool(int,int):1003:1003 -> b
    5:5:void ai.datatower.analytics.utils.ThreadUtils$UtilsThreadFactory.<init>(java.lang.String,int):1119:1119 -> b
    5:5:java.util.concurrent.ExecutorService createPool(int,int):1003 -> b
    6:12:java.util.concurrent.ExecutorService createPool(int,int):1003:1009 -> b
    13:13:void ai.datatower.analytics.utils.ThreadUtils$UtilsThreadFactory.<init>(java.lang.String,int):1119:1119 -> b
    13:13:java.util.concurrent.ExecutorService createPool(int,int):1009 -> b
    14:20:java.util.concurrent.ExecutorService createPool(int,int):1009:1015 -> b
    21:21:int ai.datatower.analytics.utils.ThreadUtils.access$200():37:37 -> b
    21:21:java.util.concurrent.ExecutorService createPool(int,int):1015 -> b
    22:22:java.util.concurrent.ExecutorService createPool(int,int):1015:1015 -> b
    23:23:void ai.datatower.analytics.utils.ThreadUtils$UtilsThreadFactory.<init>(java.lang.String,int):1119:1119 -> b
    23:23:java.util.concurrent.ExecutorService createPool(int,int):1015 -> b
    24:30:java.util.concurrent.ExecutorService createPool(int,int):1015:1021 -> b
    31:31:int ai.datatower.analytics.utils.ThreadUtils.access$200():37:37 -> b
    31:31:java.util.concurrent.ExecutorService createPool(int,int):1021 -> b
    32:32:java.util.concurrent.ExecutorService createPool(int,int):1021:1021 -> b
    33:33:void ai.datatower.analytics.utils.ThreadUtils$UtilsThreadFactory.<init>(java.lang.String,int):1119:1119 -> b
    33:33:java.util.concurrent.ExecutorService createPool(int,int):1021 -> b
    34:34:java.util.concurrent.ExecutorService createPool(int,int):1021:1021 -> b
    1:9:void execute(java.lang.Runnable):1064:1072 -> execute
    10:11:void execute(java.lang.Runnable):1069:1070 -> execute
ai.datatower.analytics.utils.ThreadUtils$UtilsThreadFactory -> ai.datatower.analytics.utils.ThreadUtils$h:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    java.util.concurrent.atomic.AtomicInteger POOL_NUMBER -> d
    long serialVersionUID -> e
    java.lang.String namePrefix -> a
    int priority -> b
    boolean isDaemon -> c
    1:1:void <clinit>():1112:1112 -> <clinit>
    1:1:void <init>(java.lang.String,int):1119:1119 -> <init>
    2:7:void <init>(java.lang.String,int,boolean):1122:1127 -> <init>
    1:18:java.lang.Thread newThread(java.lang.Runnable):1132:1149 -> newThread
ai.datatower.analytics.utils.ThreadUtils$UtilsThreadFactory$1 -> ai.datatower.analytics.utils.ThreadUtils$h$a:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    ai.datatower.analytics.utils.ThreadUtils$UtilsThreadFactory this$0 -> a
    1:1:void <init>(ai.datatower.analytics.utils.ThreadUtils$UtilsThreadFactory,java.lang.Runnable,java.lang.String):1132:1132 -> <init>
    1:3:void run():1136:1138 -> run
ai.datatower.analytics.utils.ThreadUtils$UtilsThreadFactory$2 -> ai.datatower.analytics.utils.ThreadUtils$h$b:
# {"id":"sourceFile","fileName":"ThreadUtils.java"}
    ai.datatower.analytics.utils.ThreadUtils$UtilsThreadFactory this$0 -> a
    1:1:void <init>(ai.datatower.analytics.utils.ThreadUtils$UtilsThreadFactory):1143:1143 -> <init>
    1:1:void uncaughtException(java.lang.Thread,java.lang.Throwable):1146:1146 -> uncaughtException
ai.datatower.analytics.utils.ThrowableUtils -> ai.datatower.analytics.utils.s:
# {"id":"sourceFile","fileName":"ThrowableUtils.java"}
    java.lang.String LINE_SEP -> a
    1:1:void <clinit>():14:14 -> <clinit>
    1:2:void <init>():16:17 -> <init>
    1:26:java.lang.String getFullStackTrace(java.lang.Throwable):21:46 -> a
    27:35:void removeCommonFrames(java.util.List,java.util.List):72:80 -> a
    1:14:java.util.List getStackFrameList(java.lang.Throwable):50:63 -> b
ai.datatower.analytics.utils.TimeCalibration -> ai.datatower.analytics.utils.t:
# {"id":"sourceFile","fileName":"TimeCalibration.kt"}
    java.lang.String sessionId -> f
    ai.datatower.analytics.utils.TimeCalibration$Companion Companion -> g
    java.util.concurrent.atomic.AtomicBoolean isVerifyTimeRunning -> d
    long _latestDeviceTime -> e
    long TIME_NOT_VERIFY_VALUE -> h
    kotlin.Lazy instance$delegate -> i
    long _latestSystemElapsedRealtime -> b
    long _latestTime -> a
    java.util.concurrent.locks.ReentrantReadWriteLock calibratedTimeLock -> c
    1:1:void ai.datatower.analytics.utils.TimeCalibration$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:32:void <clinit>():0:30 -> <clinit>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:162:void <init>():26:186 -> <init>
    1:1:kotlin.Lazy access$getInstance$delegate$cp():26:26 -> a
    2:6:void getReferenceTime$lambda-0(ai.datatower.analytics.utils.TimeCalibration):50:54 -> a
    7:7:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    7:7:void getReferenceTime$lambda-0(ai.datatower.analytics.utils.TimeCalibration):54 -> a
    8:18:void getReferenceTime$lambda-0(ai.datatower.analytics.utils.TimeCalibration):56:66 -> a
    19:23:void getReferenceTime$lambda-0(ai.datatower.analytics.utils.TimeCalibration):64:68 -> a
    24:24:ai.datatower.analytics.network.RequestHelper$Builder ai.datatower.analytics.network.RequestHelper$Builder.jsonData(java.lang.String):286:286 -> a
    24:24:void getReferenceTime$lambda-0(ai.datatower.analytics.utils.TimeCalibration):68 -> a
    25:25:ai.datatower.analytics.network.RequestHelper$Builder ai.datatower.analytics.network.RequestHelper$Builder.retryCount(int):301:301 -> a
    25:25:void getReferenceTime$lambda-0(ai.datatower.analytics.utils.TimeCalibration):69 -> a
    26:37:void getReferenceTime$lambda-0(ai.datatower.analytics.utils.TimeCalibration):70:81 -> a
    38:38:void ai.datatower.quality.PerfLogger.doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    38:38:void getReferenceTime$lambda-0(ai.datatower.analytics.utils.TimeCalibration):81 -> a
    39:48:long getVerifyTimeAsyncByGapTime(long):128:137 -> a
    1:17:void setVerifyTime(long):87:103 -> b
    18:20:long getDeviceTime():158:160 -> b
    1:35:void getReferenceTime():49:83 -> c
    36:70:void getReferenceTime():49:83 -> c
    1:3:long getServerTime():142:144 -> d
    1:1:java.lang.String getSessionId():46:46 -> e
    1:1:long getSystemHibernateTimeGap():181:181 -> f
    1:3:long getUpdateSystemUpTime():150:152 -> g
    1:8:long getVerifyTimeAsync():116:123 -> h
    1:7:boolean isDeviceTimeCorrect():166:172 -> i
    1:6:void setVerifyTimeForSubProcess():107:112 -> j
ai.datatower.analytics.utils.TimeCalibration$Companion -> ai.datatower.analytics.utils.t$b:
# {"id":"sourceFile","fileName":"TimeCalibration.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():28:28 -> <init>
    1:1:ai.datatower.analytics.utils.TimeCalibration getInstance():30:30 -> a
ai.datatower.analytics.utils.TimeCalibration$Companion$instance$2 -> ai.datatower.analytics.utils.t$a:
# {"id":"sourceFile","fileName":"TimeCalibration.kt"}
    ai.datatower.analytics.utils.TimeCalibration$Companion$instance$2 INSTANCE -> a
    1:1:ai.datatower.analytics.utils.TimeCalibration invoke():31:31 -> a
    2:2:void ai.datatower.analytics.utils.TimeCalibration.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    2:2:ai.datatower.analytics.utils.TimeCalibration invoke():31 -> a
    1:1:ai.datatower.analytics.utils.TimeCalibration invoke():31:31 -> invoke
    1:1:java.lang.Object invoke():30 -> invoke
    2:2:void ai.datatower.analytics.utils.TimeCalibration.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> invoke
    2:2:ai.datatower.analytics.utils.TimeCalibration invoke():31 -> invoke
    2:2:java.lang.Object invoke():30 -> invoke
ai.datatower.analytics.utils.TimeCalibration$setVerifyTime$dbGamTime$1 -> ai.datatower.analytics.utils.t$c:
# {"id":"sourceFile","fileName":"TimeCalibration.kt"}
    int label -> a
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> a
    2:2:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):90:90 -> invokeSuspend
    2:2:java.lang.Object ai.datatower.analytics.taskqueue.AsyncTaskRescheduled.await(kotlin.coroutines.Continuation):55:55 -> invokeSuspend
    2:2:java.lang.Object invokeSuspend(java.lang.Object):90 -> invokeSuspend
    3:3:java.lang.Object invokeSuspend(java.lang.Object):90:90 -> invokeSuspend
ai.datatower.analytics.utils.TimeCalibration$setVerifyTime$dbTime$1 -> ai.datatower.analytics.utils.t$d:
# {"id":"sourceFile","fileName":"TimeCalibration.kt"}
    int label -> a
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> a
    2:2:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):89:89 -> invokeSuspend
    2:2:java.lang.Object ai.datatower.analytics.taskqueue.AsyncTaskRescheduled.await(kotlin.coroutines.Continuation):55:55 -> invokeSuspend
    2:2:java.lang.Object invokeSuspend(java.lang.Object):89 -> invokeSuspend
    3:3:java.lang.Object invokeSuspend(java.lang.Object):89:89 -> invokeSuspend
ai.datatower.analytics.utils.TimeCalibration$setVerifyTimeForSubProcess$dbGamTime$1 -> ai.datatower.analytics.utils.t$e:
# {"id":"sourceFile","fileName":"TimeCalibration.kt"}
    int label -> a
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> a
    2:2:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):109:109 -> invokeSuspend
    2:2:java.lang.Object ai.datatower.analytics.taskqueue.AsyncTaskRescheduled.await(kotlin.coroutines.Continuation):55:55 -> invokeSuspend
    2:2:java.lang.Object invokeSuspend(java.lang.Object):109 -> invokeSuspend
    3:3:java.lang.Object invokeSuspend(java.lang.Object):109:109 -> invokeSuspend
ai.datatower.analytics.utils.TimeCalibration$setVerifyTimeForSubProcess$dbTime$1 -> ai.datatower.analytics.utils.t$f:
# {"id":"sourceFile","fileName":"TimeCalibration.kt"}
    int label -> a
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> a
    2:2:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> a
    1:1:java.lang.Object invokeSuspend(java.lang.Object):108:108 -> invokeSuspend
    2:2:java.lang.Object ai.datatower.analytics.taskqueue.AsyncTaskRescheduled.await(kotlin.coroutines.Continuation):55:55 -> invokeSuspend
    2:2:java.lang.Object invokeSuspend(java.lang.Object):108 -> invokeSuspend
    3:3:java.lang.Object invokeSuspend(java.lang.Object):108:108 -> invokeSuspend
ai.datatower.iap.Constant -> ai.datatower.iap.a:
# {"id":"sourceFile","fileName":"constant.kt"}
    java.lang.String PROPERTY_IAP_ENTRANCE -> g
    java.lang.String PROPERTY_IAP_SEQ -> f
    java.lang.String PROPERTY_IAP_ORDER -> i
    java.lang.String PROPERTY_IAP_PLACEMENT -> h
    java.lang.String PROPERTY_IAP_USD_PRICE -> k
    ai.datatower.iap.Constant INSTANCE -> a
    java.lang.String PROPERTY_IAP_SKU -> j
    java.lang.String PROPERTY_IAP_CURRENCY -> m
    java.lang.String PROPERTY_IAP_PRICE -> l
    java.lang.String PROPERTY_IAP_MSG -> o
    java.lang.String PROPERTY_IAP_CODE -> n
    java.lang.String EVENT_IAP_TO_PURCHASE -> c
    java.lang.String EVENT_IAP_ENTRANCE -> b
    java.lang.String EVENT_IAP_NOT_PURCHASED -> e
    java.lang.String EVENT_IAP_PURCHASED -> d
    1:1:void <init>():3:3 -> <init>
ai.datatower.iap.DTIAPReport -> ai.datatower.iap.DTIAPReport:
# {"id":"sourceFile","fileName":"DTIAPReport.kt"}
    1:1:void <init>():7:7 -> <init>
    1:1:void reportPurchaseSuccess(java.lang.String,java.lang.String,double,java.lang.String):0:0 -> reportPurchaseSuccess
    2:2:void reportPurchaseSuccess(java.lang.String,java.lang.String,double,java.lang.String,java.util.Map):0:0 -> reportPurchaseSuccess
ai.datatower.iap.DTIAPReport$Companion -> ai.datatower.iap.DTIAPReport$Companion:
# {"id":"sourceFile","fileName":"DTIAPReport.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():8:8 -> <init>
    1:1:java.lang.String generateUUID():34:34 -> generateUUID
    1:1:void reportPurchaseSuccess(java.lang.String,java.lang.String,double,java.lang.String):0:0 -> reportPurchaseSuccess
    2:2:void reportPurchaseSuccess(java.lang.String,java.lang.String,double,java.lang.String,java.util.Map):27:27 -> reportPurchaseSuccess
    1:1:void reportPurchaseSuccess$default(ai.datatower.iap.DTIAPReport$Companion,java.lang.String,java.lang.String,double,java.lang.String,java.util.Map,int,java.lang.Object):26:26 -> reportPurchaseSuccess$default
    2:2:void reportPurchaseSuccess$default(ai.datatower.iap.DTIAPReport$Companion,java.lang.String,java.lang.String,double,java.lang.String,java.util.Map,int,java.lang.Object):21:21 -> reportPurchaseSuccess$default
ai.datatower.iap.api.IAPReportImp -> ai.datatower.iap.api.a:
# {"id":"sourceFile","fileName":"IAPReportImp.kt"}
    ai.datatower.iap.api.IAPReportImp instance -> c
    java.lang.String TAG -> b
    ai.datatower.iap.api.IAPReportImp$Companion Companion -> a
    1:1:void ai.datatower.iap.api.IAPReportImp$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():9:9 -> <init>
    1:1:ai.datatower.iap.api.IAPReportImp access$getInstance$cp():9:9 -> a
    2:2:void access$setInstance$cp(ai.datatower.iap.api.IAPReportImp):9:9 -> a
    3:3:void reportPurchased$default(ai.datatower.iap.api.IAPReportImp,java.lang.String,java.lang.String,double,java.lang.String,java.util.Map,int,java.lang.Object):17:17 -> a
    4:4:void reportPurchased$default(ai.datatower.iap.api.IAPReportImp,java.lang.String,java.lang.String,double,java.lang.String,java.util.Map,int,java.lang.Object):12:12 -> a
    5:12:void reportPurchased(java.lang.String,java.lang.String,double,java.lang.String,java.util.Map):19:26 -> a
    13:13:void reportPurchased(java.lang.String,java.lang.String,double,java.lang.String,java.util.Map):19:19 -> a
ai.datatower.iap.api.IAPReportImp$Companion -> ai.datatower.iap.api.a$a:
# {"id":"sourceFile","fileName":"IAPReportImp.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():34:34 -> <init>
    1:1:ai.datatower.iap.api.IAPReportImp getInstance$datatowerai_core_publicRelease():42:42 -> a
    2:2:ai.datatower.iap.api.IAPReportImp ai.datatower.iap.api.IAPReportImp.access$getInstance$cp():9:9 -> a
    2:2:ai.datatower.iap.api.IAPReportImp getInstance$datatowerai_core_publicRelease():43 -> a
    3:3:ai.datatower.iap.api.IAPReportImp getInstance$datatowerai_core_publicRelease():43:43 -> a
    4:4:void ai.datatower.iap.api.IAPReportImp.access$setInstance$cp(ai.datatower.iap.api.IAPReportImp):9:9 -> a
    4:4:ai.datatower.iap.api.IAPReportImp getInstance$datatowerai_core_publicRelease():43 -> a
    5:5:ai.datatower.iap.api.IAPReportImp getInstance$datatowerai_core_publicRelease():42:42 -> a
ai.datatower.iap.api.IIapReport -> ai.datatower.iap.api.b:
# {"id":"sourceFile","fileName":"IIapReport.kt"}
    void reportPurchased(java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String) -> a
ai.datatower.iap.api.IIapReport$DefaultImpls -> ai.datatower.iap.api.b$a:
# {"id":"sourceFile","fileName":"IIapReport.kt"}
    1:1:void reportPurchased$default(ai.datatower.iap.api.IIapReport,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):21:21 -> a
    2:2:void reportPurchased$default(ai.datatower.iap.api.IIapReport,java.lang.String,java.lang.String,double,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):15:15 -> a
ai.datatower.iap.utils.UUIDUtils -> ai.datatower.iap.utils.a:
# {"id":"sourceFile","fileName":"UUIDUtils.java"}
    1:1:void <init>():5:5 -> <init>
    1:5:java.lang.String generateUUID():7:11 -> a
ai.datatower.ias.DTIASReport -> ai.datatower.ias.DTIASReport:
# {"id":"sourceFile","fileName":"DTIASReport.kt"}
    1:1:void <init>():11:11 -> <init>
    1:1:void reportSubscribeSuccess(java.lang.String,java.lang.String,java.lang.String,double,java.lang.String):0:0 -> reportSubscribeSuccess
    2:2:void reportSubscribeSuccess(java.lang.String,java.lang.String,java.lang.String,double,java.lang.String,java.util.Map):0:0 -> reportSubscribeSuccess
ai.datatower.ias.DTIASReport$Companion -> ai.datatower.ias.DTIASReport$Companion:
# {"id":"sourceFile","fileName":"DTIASReport.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():12:12 -> <init>
    1:1:java.lang.String generateUUID():42:42 -> generateUUID
    1:1:void reportSubscribeSuccess(java.lang.String,java.lang.String,java.lang.String,double,java.lang.String):0:0 -> reportSubscribeSuccess
    2:2:void reportSubscribeSuccess(java.lang.String,java.lang.String,java.lang.String,double,java.lang.String,java.util.Map):34:34 -> reportSubscribeSuccess
    1:1:void reportSubscribeSuccess$default(ai.datatower.ias.DTIASReport$Companion,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String,java.util.Map,int,java.lang.Object):32:32 -> reportSubscribeSuccess$default
    2:2:void reportSubscribeSuccess$default(ai.datatower.ias.DTIASReport$Companion,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String,java.util.Map,int,java.lang.Object):26:26 -> reportSubscribeSuccess$default
ai.datatower.ias.DTIasConstant -> ai.datatower.ias.a:
# {"id":"sourceFile","fileName":"DTIasConstant.kt"}
    java.lang.String IAS_TO_SUBSCRIBE_FAIL_EVENT -> g
    java.lang.String IAS_TO_SUBSCRIBE_SUCCESS_EVENT -> f
    java.lang.String IAS_ENTRANCE -> i
    java.lang.String IAS_SEQ -> h
    java.lang.String IAS_CODE -> k
    java.lang.String IAS_PLACEMENT -> j
    java.lang.String IAS_SKU -> m
    java.lang.String IAS_MSG -> l
    ai.datatower.ias.DTIasConstant INSTANCE -> a
    java.lang.String IAS_PRICE -> o
    java.lang.String IAS_ORDER_ID -> n
    java.lang.String IAS_ORIGINAL_ORDER_ID -> q
    java.lang.String IAS_CURRENCY -> p
    java.lang.String IAS_SHOW_SUCCESS_EVENT -> c
    java.lang.String IAS_TO_SHOW_EVENT -> b
    java.lang.String IAS_TO_SUBSCRIBE_EVENT -> e
    java.lang.String IAS_SHOW_FAIL_EVENT -> d
    1:1:void <init>():9:9 -> <init>
ai.datatower.ias.DTIasReportImp -> ai.datatower.ias.b:
# {"id":"sourceFile","fileName":"DTIasReportImp.kt"}
    ai.datatower.ias.DTIasReportImp$Companion Companion -> a
    1:1:void ai.datatower.ias.DTIasReportImp$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():12:12 -> <init>
ai.datatower.ias.DTIasReportImp$Companion -> ai.datatower.ias.b$a:
# {"id":"sourceFile","fileName":"DTIasReportImp.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():13:13 -> <init>
    1:1:void trackIasSubSuccessEvent$default(ai.datatower.ias.DTIasReportImp$Companion,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String,java.util.Map,int,java.lang.Object):21:21 -> a
    2:2:void trackIasSubSuccessEvent$default(ai.datatower.ias.DTIasReportImp$Companion,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String,java.util.Map,int,java.lang.Object):15:15 -> a
    3:11:void trackIasSubSuccessEvent(java.lang.String,java.lang.String,java.lang.String,double,java.lang.String,java.util.Map):23:31 -> a
    12:12:void trackIasSubSuccessEvent(java.lang.String,java.lang.String,java.lang.String,double,java.lang.String,java.util.Map):23:23 -> a
ai.datatower.quality.DTErrorParams -> ai.datatower.quality.DTErrorParams:
# {"id":"sourceFile","fileName":"DTErrorParams.kt"}
    int CODE_INSERT_JSON_EXCEPTION -> n
    int CODE_INSERT_DB_OUT_OF_ROW_ERROR -> l
    int CODE_INIT_DB_ERROR -> j
    java.lang.String INIT_EXCEPTION -> K
    int CODE_TRACK_EVENT_NAME_EMPTY -> h
    java.lang.String TRACK_GENERATE_EVENT_ERROR -> M
    int TYPE_MESSAGE -> I
    int CODE_SHA1_DTID_EXCEPTION -> f
    java.lang.String INSERT_DB_NORMAL_ERROR -> O
    int TYPE_ERROR -> G
    int CODE_GET_ORIGINAL_ID_EXCEPTION -> d
    java.lang.String INSERT_DB_EXCEPTION -> Q
    int CODE_QUEUE_UPLOAD_DEAD -> E
    int CODE_INIT_CONFIG_ERROR -> b
    java.lang.String INSERT_OLD_DATA_EXCEPTION -> S
    int CODE_UPLOAD_ERROR_OVER_MAX -> C
    java.lang.String HANDLE_UPLOAD_MESSAGE_ERROR -> U
    int CODE_UPLOAD_ERROR_MULTi_TIMES -> A
    int CODE_REPORT_ERROR_ON_FAIL -> y
    int CODE_HANDLE_UPLOAD_MESSAGE_ERROR -> w
    int CODE_GAID_LIMIT -> u
    ai.datatower.quality.DTErrorParams INSTANCE -> a
    int CODE_DELETE_DB_EXCEPTION -> s
    int CODE_QUERY_DB_EXCEPTION -> q
    int CODE_INSERT_DATA_EXCEPTION -> o
    int CODE_INSERT_DB_EXCEPTION -> m
    int CODE_INSERT_DB_NORMAL_ERROR -> k
    java.lang.String INIT_CONFIG_ERROR -> J
    int TYPE_WARNING -> H
    int CODE_TRACK_EVENT_ILLEGAL -> i
    java.lang.String TRACK_MANAGER_ERROR -> L
    int CODE_QUEUE_DB_DEAD -> F
    int CODE_TRACK_ERROR -> g
    java.lang.String INIT_DB_ERROR -> N
    int CODE_QUEUE_MAIN_DEAD -> D
    int CODE_INIT_DTID_EXCEPTION -> e
    java.lang.String INSERT_DB_OUT_OF_ROW_ERROR -> P
    int CODE_UPLOAD_ERROR_READ_DATA -> B
    int CODE_INIT_EXCEPTION -> c
    java.lang.String INSERT_JSON_EXCEPTION -> R
    java.lang.String DELETE_DB_EXCEPTION -> T
    java.lang.String CHECK_ENABLE_UPLOAD_EXCEPTION -> V
    int CODE_REPORT_ERROR_ON_RESPONSE -> z
    int CODE_CHECK_ENABLE_UPLOAD_EXCEPTION -> x
    int CODE_GAID_UNKOWN -> v
    int CODE_DB_DATA_COUNT -> t
    int CODE_DELETE_UPLOADED_EXCEPTION -> r
    int CODE_QUERY_DB_ERROR -> p
    1:1:void <init>():12:12 -> <init>
ai.datatower.quality.DTErrorParams$DTErrorCode -> ai.datatower.quality.DTErrorParams$DTErrorCode:
# {"id":"sourceFile","fileName":"DTErrorParams.kt"}
ai.datatower.quality.DTErrorParams$DTErrorLevel -> ai.datatower.quality.DTErrorParams$DTErrorLevel:
# {"id":"sourceFile","fileName":"DTErrorParams.kt"}
ai.datatower.quality.DTErrorParams$DTErrorMsg -> ai.datatower.quality.DTErrorParams$DTErrorMsg:
# {"id":"sourceFile","fileName":"DTErrorParams.kt"}
ai.datatower.quality.DTQualityHelper -> ai.datatower.quality.a:
# {"id":"sourceFile","fileName":"DTQualityHelper.kt"}
    java.lang.String SDK_VERSION_NAME -> g
    java.lang.String SDK_TYPE -> f
    java.lang.String OS_VERSION_NAME -> i
    java.lang.String APP_VERSION_NAME -> h
    java.lang.String ERROR_CODE -> k
    java.lang.String DEVICE_MODEL -> j
    java.lang.String ERROR_MESSAGE -> m
    java.lang.String ERROR_LEVEL -> l
    kotlin.Lazy instance$delegate -> n
    java.util.Map mJsonParams -> b
    ai.datatower.quality.DTQualityHelper$Companion Companion -> c
    java.lang.String TAG -> a
    java.lang.String INSTANCE_ID -> e
    java.lang.String APP_ID -> d
    1:1:void ai.datatower.quality.DTQualityHelper$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:110:void <clinit>():0:108 -> <clinit>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:4:void <init>():17:19 -> <init>
    1:1:kotlin.Lazy access$getInstance$delegate$cp():17:17 -> a
    2:2:java.lang.String access$getTAG$p(ai.datatower.quality.DTQualityHelper):17:17 -> a
    3:3:void reportQualityMessage$default(ai.datatower.quality.DTQualityHelper,int,java.lang.String,java.lang.String,int,int,java.lang.Object):23:23 -> a
    4:14:java.lang.String getJsonData(int,java.lang.String,java.lang.String,int):65:75 -> a
    1:8:void reportQualityMessage(int,java.lang.String,java.lang.String,int):30:37 -> b
    9:9:void reportQualityMessage(int,java.lang.String,java.lang.String,int):35:35 -> b
    10:10:ai.datatower.analytics.network.RequestHelper$Builder ai.datatower.analytics.network.RequestHelper$Builder.jsonData(java.lang.String):286:286 -> b
    10:10:void reportQualityMessage(int,java.lang.String,java.lang.String,int):39 -> b
    11:11:ai.datatower.analytics.network.RequestHelper$Builder ai.datatower.analytics.network.RequestHelper$Builder.retryCount(int):301:301 -> b
    11:11:void reportQualityMessage(int,java.lang.String,java.lang.String,int):40 -> b
    12:12:void reportQualityMessage(int,java.lang.String,java.lang.String,int):41:41 -> b
    13:13:ai.datatower.analytics.network.RequestHelper$Builder ai.datatower.analytics.network.RequestHelper$Builder.callback(ai.datatower.analytics.network.HttpCallback):296:296 -> b
    13:13:void reportQualityMessage(int,java.lang.String,java.lang.String,int):41 -> b
    14:14:void reportQualityMessage(int,java.lang.String,java.lang.String,int):53:53 -> b
    15:26:java.util.Map generateJsonParams():79:90 -> b
    27:41:java.util.Map generateJsonParams():80:94 -> b
ai.datatower.quality.DTQualityHelper$Companion -> ai.datatower.quality.a$b:
# {"id":"sourceFile","fileName":"DTQualityHelper.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():97:97 -> <init>
    1:1:ai.datatower.quality.DTQualityHelper getInstance():108:108 -> a
ai.datatower.quality.DTQualityHelper$Companion$instance$2 -> ai.datatower.quality.a$a:
# {"id":"sourceFile","fileName":"DTQualityHelper.kt"}
    ai.datatower.quality.DTQualityHelper$Companion$instance$2 INSTANCE -> a
    1:1:ai.datatower.quality.DTQualityHelper invoke():109:109 -> a
    2:2:void ai.datatower.quality.DTQualityHelper.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    2:2:ai.datatower.quality.DTQualityHelper invoke():109 -> a
    1:1:ai.datatower.quality.DTQualityHelper invoke():109:109 -> invoke
    1:1:java.lang.Object invoke():108 -> invoke
    2:2:void ai.datatower.quality.DTQualityHelper.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> invoke
    2:2:ai.datatower.quality.DTQualityHelper invoke():109 -> invoke
    2:2:java.lang.Object invoke():108 -> invoke
ai.datatower.quality.DTQualityHelper$reportQualityMessage$1 -> ai.datatower.quality.a$c:
# {"id":"sourceFile","fileName":"DTQualityHelper.kt"}
    ai.datatower.quality.DTQualityHelper this$0 -> c
    java.lang.String $data -> d
    1:1:void <init>(ai.datatower.quality.DTQualityHelper,java.lang.String):42:42 -> <init>
    1:1:void onResponse(java.lang.Object):41:41 -> a
    2:2:void onFailure(int,java.lang.String):44:44 -> a
    3:3:void onResponse(org.json.JSONObject):48:48 -> a
    void onAfter() -> b
ai.datatower.quality.PerfAction -> ai.datatower.quality.b:
# {"id":"sourceFile","fileName":"PerfLogger.kt"}
    ai.datatower.quality.PerfAction READEVENTDATAFROMDBBEGIN -> l
    ai.datatower.quality.PerfAction WRITEEVENTTODBEND -> k
    ai.datatower.quality.PerfAction UPLOADDATABEGIN -> n
    ai.datatower.quality.PerfAction[] $VALUES -> s
    ai.datatower.quality.PerfAction READEVENTDATAFROMDBEND -> m
    ai.datatower.quality.PerfAction GETCONFIGEND -> h
    ai.datatower.quality.PerfAction GETCONFIGBEGIN -> g
    ai.datatower.quality.PerfAction WRITEEVENTTODBBEGIN -> j
    ai.datatower.quality.PerfAction TRACKBEGIN -> i
    ai.datatower.quality.PerfAction GETDTIDEND -> d
    ai.datatower.quality.PerfAction GETDTIDBEGIN -> c
    ai.datatower.quality.PerfAction GETSRVTIMEEND -> f
    ai.datatower.quality.PerfAction GETSRVTIMEBEGIN -> e
    ai.datatower.quality.PerfAction SDKINITEND -> b
    ai.datatower.quality.PerfAction SDKINITBEGIN -> a
    ai.datatower.quality.PerfAction DELETEDBBEGIN -> p
    ai.datatower.quality.PerfAction UPLOADDATAEND -> o
    ai.datatower.quality.PerfAction TRACKEND -> r
    ai.datatower.quality.PerfAction DELETEDBEND -> q
    1:18:void <clinit>():9:26 -> <clinit>
    1:1:void <init>(java.lang.String,int):8:8 -> <init>
    ai.datatower.quality.PerfAction[] $values() -> a
ai.datatower.quality.PerfLogger -> ai.datatower.quality.c:
# {"id":"sourceFile","fileName":"PerfLogger.kt"}
    ai.datatower.quality.PerfLogger INSTANCE -> a
    java.lang.String tag -> b
    java.util.HashMap timeRecord -> c
    1:1:void <clinit>():32:32 -> <clinit>
    1:1:void <init>():29:29 -> <init>
    1:1:void doPerfLog(ai.datatower.quality.PerfAction,long):0:0 -> a
    2:2:java.lang.Integer getDBItemCount():38:38 -> a
ai.datatower.thirdparty.AdjustSyncThirdData -> ai.datatower.thirdparty.a:
# {"id":"sourceFile","fileName":"AdjustSyncThirdData.kt"}
    1:1:void <init>():6:6 -> <init>
    1:1:void synThirdDTIdData(java.lang.String):9:9 -> a
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> a
    2:2:void synThirdDTIdData(java.lang.String):9 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:10:void synThirdDTIdData(java.lang.String):12:19 -> a
    11:18:void synThirdDTIdData(java.lang.String):16:23 -> a
ai.datatower.thirdparty.AppsFlyerSyncThirdData -> ai.datatower.thirdparty.b:
# {"id":"sourceFile","fileName":"AppsFlyerSyncThirdData.kt"}
    1:1:void <init>():6:6 -> <init>
    1:1:void synThirdDTIdData(java.lang.String):8:8 -> a
    2:2:boolean ai.datatower.analytics.config.AnalyticsConfig.isSdkDisable():116:116 -> a
    2:2:void synThirdDTIdData(java.lang.String):8 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:13:void synThirdDTIdData(java.lang.String):11:21 -> a
    14:19:void synThirdDTIdData(java.lang.String):19:24 -> a
    20:20:void ai.datatower.analytics.utils.LogUtils.d(java.lang.String,java.lang.Object[]):110:110 -> a
    20:20:void synThirdDTIdData(java.lang.String):24 -> a
    21:21:void synThirdDTIdData(java.lang.String):29:29 -> a
    22:22:void ai.datatower.analytics.utils.LogUtils.e(java.lang.String,java.lang.Object[]):134:134 -> a
    22:22:void synThirdDTIdData(java.lang.String):29 -> a
    23:23:void synThirdDTIdData(java.lang.String):26:26 -> a
    24:24:void ai.datatower.analytics.utils.LogUtils.e(java.lang.String,java.lang.Object[]):134:134 -> a
    24:24:void synThirdDTIdData(java.lang.String):26 -> a
    25:25:void synThirdDTIdData(java.lang.String):27:27 -> a
    26:34:void syncThirdPartyData5(java.util.Map):34:42 -> a
    35:40:void syncThirdPartyData5(java.util.Map):40:45 -> a
    41:41:void ai.datatower.analytics.utils.LogUtils.d(java.lang.String,java.lang.Object[]):110:110 -> a
    41:41:void syncThirdPartyData5(java.util.Map):45 -> a
    42:42:void syncThirdPartyData5(java.util.Map):47:47 -> a
    43:43:void ai.datatower.analytics.utils.LogUtils.e(java.lang.String,java.lang.Object[]):134:134 -> a
    43:43:void syncThirdPartyData5(java.util.Map):47 -> a
ai.datatower.thirdparty.Constant -> ai.datatower.thirdparty.c:
# {"id":"sourceFile","fileName":"Constant.kt"}
    ai.datatower.thirdparty.Constant INSTANCE -> a
    java.lang.String SHARE_DATA_DT_ID -> b
    1:1:void <init>():3:3 -> <init>
ai.datatower.thirdparty.SyncThirdPartDataImpl -> ai.datatower.thirdparty.d:
# {"id":"sourceFile","fileName":"SyncThirdPartDataImpl.kt"}
    void synThirdDTIdData(java.lang.String) -> a
ai.datatower.thirdparty.ThirdPartManager -> ai.datatower.thirdparty.e:
# {"id":"sourceFile","fileName":"ThirdPartManager.kt"}
    kotlin.Lazy instance$delegate -> b
    ai.datatower.thirdparty.ThirdPartManager$Companion Companion -> a
    1:1:void ai.datatower.thirdparty.ThirdPartManager$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:7:void <clinit>():0:5 -> <clinit>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():3:3 -> <init>
    1:1:kotlin.Lazy access$getInstance$delegate$cp():3:3 -> a
ai.datatower.thirdparty.ThirdPartManager$Companion -> ai.datatower.thirdparty.e$b:
# {"id":"sourceFile","fileName":"ThirdPartManager.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():4:4 -> <init>
    1:1:ai.datatower.thirdparty.ThirdPartManager getInstance():5:5 -> a
ai.datatower.thirdparty.ThirdPartManager$Companion$instance$2 -> ai.datatower.thirdparty.e$a:
# {"id":"sourceFile","fileName":"ThirdPartManager.kt"}
    ai.datatower.thirdparty.ThirdPartManager$Companion$instance$2 INSTANCE -> a
    1:1:ai.datatower.thirdparty.ThirdPartManager invoke():6:6 -> a
    2:2:void ai.datatower.thirdparty.ThirdPartManager.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    2:2:ai.datatower.thirdparty.ThirdPartManager invoke():6 -> a
    1:1:ai.datatower.thirdparty.ThirdPartManager invoke():6:6 -> invoke
    1:1:java.lang.Object invoke():5 -> invoke
    2:2:void ai.datatower.thirdparty.ThirdPartManager.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> invoke
    2:2:ai.datatower.thirdparty.ThirdPartManager invoke():6 -> invoke
    2:2:java.lang.Object invoke():5 -> invoke
ai.datatower.thirdparty.ThirdPartShareDataFactory -> ai.datatower.thirdparty.f:
# {"id":"sourceFile","fileName":"ThirdPartShareDataFactory.kt"}
    ai.datatower.thirdparty.ThirdPartShareDataFactory$Companion Companion -> a
    1:1:void ai.datatower.thirdparty.ThirdPartShareDataFactory$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():7:7 -> <init>
ai.datatower.thirdparty.ThirdPartShareDataFactory$Companion -> ai.datatower.thirdparty.f$a:
# {"id":"sourceFile","fileName":"ThirdPartShareDataFactory.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():8:8 -> <init>
    1:3:ai.datatower.thirdparty.SyncThirdPartDataImpl createThirdInstance(int):11:13 -> a
